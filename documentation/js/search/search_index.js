var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AlchemyApiService.html",[0,1.406,1,2.592]],["body/injectables/AlchemyApiService.html",[0,2.254,1,4.156,2,2.638,3,0.204,4,0.204,5,0.179,6,5,7,4.054,8,0.463,9,1.469,10,2.134,11,6.834,12,1.54,13,3.296,14,3.021,15,6.509,16,6.834,17,1.213,18,4.713,19,1.221,20,0.019,21,0.562,22,0.401,23,1.165,24,4.713,25,1.165,26,3.559,27,0.659,28,4.054,29,0.708,30,3.62,31,3.296,32,2.822,33,3.296,34,1.979,35,3.62,36,3.296,37,2.638,38,2.476,39,0.204,40,0.597,41,1.858,42,2.37,43,5.943,44,1.621,45,2.822,46,4.054,47,4.713,48,4.713,49,1.788,50,4.713,51,0.014,52,0.014]],["title/components/AppComponent.html",[53,0.47,54,1.006]],["body/components/AppComponent.html",[3,0.162,4,0.162,5,0.142,8,0.367,17,1.275,20,0.018,21,0.609,22,0.494,27,0.467,29,0.561,38,2.681,39,0.162,40,0.473,51,0.012,52,0.012,53,0.736,54,1.695,55,1.595,56,1.225,57,1.225,58,1.225,59,1.225,60,3.214,61,0.691,62,2.485,63,2.37,64,1.673,65,5.81,66,1.673,67,5.102,68,0.809,69,5.81,70,3.479,71,5.81,72,4.998,73,2.147,74,1.543,75,5.102,76,3.737,77,5.81,78,5.102,79,3.737,80,4.389,81,5.102,82,3.737,83,0.531,84,3.919,85,3.737,86,3.214,87,2.87,88,3.737,89,2.526,90,3.569,91,4.389,92,2.408,93,2.408,94,3.737,95,2.614,96,2.035,97,2.238,98,3.055,99,3.737,100,3.737,101,1.85,102,3.737,103,1.225,104,1.673,105,1.673,106,1.225,107,2.047,108,1.225,109,1.225,110,1.015,111,1.114,112,1.225,113,0.968,114,1.322,115,1.225,116,0.968,117,1.225,118,0.968,119,1.322,120,1.225,121,1.015,122,1.015,123,1.225,124,1.015,125,1.225,126,0.968,127,1.225,128,0.968,129,1.225,130,0.968,131,1.225,132,0.968,133,1.225,134,1.015,135,1.225,136,1.225,137,0.968,138,1.225,139,1.225,140,1.015,141,1.168,142,1.673,143,1.015,144,1.225,145,1.015,146,1.168,147,0.968,148,1.168,149,1.225,150,1.225]],["title/modules/AppModule.html",[151,2.219,152,2.592]],["body/modules/AppModule.html",[3,0.161,4,0.161,5,0.141,14,2.827,20,0.019,27,0.694,28,3.193,29,0.557,39,0.161,40,0.47,51,0.012,52,0.012,54,1.99,63,1.16,124,1.828,134,1.828,137,1.744,152,5.353,153,1.837,154,2.669,155,3.193,156,3.193,157,3.193,158,3.193,159,3.193,160,3.768,161,4.339,162,4.339,163,4.339,164,3.041,165,2.223,166,2.223,167,3.712,168,3.274,169,4.369,170,3.041,171,5.079,172,3.041,173,3.902,174,3.274,175,2.223,176,2.851,177,3.712,178,5.079,179,3.712,180,3.902,181,2.851,182,3.712,183,3.712,184,2.851,185,3.712,186,3.712,187,5.079,188,3.712,189,4.369,190,2.077,191,3.193,192,3.193,193,3.712,194,3.552,195,2.596,196,5.079,197,2.851,198,2.596,199,3.193,200,2.596,201,3.193,202,3.712,203,5.079,204,3.552,205,2.596,206,3.712,207,3.712]],["title/modules/AppRoutingModule.html",[151,2.219,160,2.074]],["body/modules/AppRoutingModule.html",[3,0.179,4,0.179,5,0.156,20,0.019,27,0.686,29,0.619,39,0.179,40,0.522,42,1.644,51,0.013,52,0.013,53,0.922,113,1.412,114,1.068,116,1.412,118,1.412,119,1.068,126,1.412,128,1.412,130,1.412,132,1.412,137,1.412,147,1.412,148,1.289,153,2.04,160,3.05,170,2.468,172,3.264,191,5.253,199,3.546,200,2.883,201,3.546,208,3.167,209,4.122,210,3.513,211,2.468,212,4.187,213,4.271,214,2.166,215,3.167,216,2.883,217,3.546,218,3.167,219,2.883,220,3.546,221,4.122,222,5.45,223,2.883,224,3.546,225,4.122,226,3.546,227,2.883,228,3.546,229,2.883,230,4.122,231,4.122,232,5.45,233,2.883,234,3.546,235,2.883,236,3.546,237,7.187,238,4.122,239,3.546,240,4.122,241,3.167,242,2.657,243,4.122,244,4.122,245,4.122,246,5.45,247,2.657,248,1.418,249,2.657,250,4.122,251,3.546]],["title/interfaces/Attribute.html",[252,0.557,253,1.733]],["body/interfaces/Attribute.html",[3,0.204,4,0.204,5,0.178,8,0.462,20,0.018,21,0.561,22,0.553,34,2.492,39,0.32,51,0.014,52,0.014,61,1.203,68,0.94,74,1.688,83,1.079,248,2.041,252,1.109,253,3.041,254,1.542,255,2.328,256,3.588,257,3.588,258,1.695,259,1.939,260,1.618,261,2.236,262,1.542,263,3.041,264,2.471,265,3.041,266,2.471,267,2.471,268,1.403,269,2.471,270,2.199,271,2.471]],["title/interfaces/AudienceDialogData.html",[252,0.557,272,2.389]],["body/interfaces/AudienceDialogData.html",[3,0.241,4,0.241,5,0.21,8,0.546,20,0.018,22,0.473,27,0.509,39,0.285,51,0.016,52,0.016,68,1.041,83,0.995,248,2.407,252,0.987,254,1.821,272,4.235,273,4.268,274,4.661,275,4.779,276,3.581]],["title/components/AudienceLayoutComponent.html",[53,0.47,110,1.006]],["body/components/AudienceLayoutComponent.html",[3,0.148,4,0.148,5,0.129,8,0.335,9,1.183,12,1.24,17,1.225,19,0.883,20,0.018,21,0.66,22,0.471,23,0.842,25,0.842,27,0.55,29,0.512,39,0.148,40,0.432,51,0.011,52,0.011,53,0.701,54,0.925,55,1.496,56,1.117,57,1.117,58,1.117,59,1.117,61,0.63,62,2.46,63,2.346,64,1.569,66,1.569,68,0.758,90,3.347,96,1.909,97,2.04,98,2.866,101,1.686,103,1.117,104,1.569,105,1.569,106,1.117,107,1.967,108,1.117,109,1.117,110,1.629,111,2.111,112,1.117,113,0.883,114,1.24,115,1.117,116,0.883,117,1.117,118,0.883,119,1.24,120,1.117,121,0.925,122,0.925,123,1.117,124,0.925,125,1.117,126,0.883,127,1.117,128,0.883,129,1.117,130,0.883,131,1.117,132,0.883,133,1.117,134,0.925,135,1.117,136,1.117,137,0.883,138,1.117,139,1.117,140,0.925,141,1.065,142,1.569,143,0.925,144,1.117,145,0.925,146,1.065,147,0.883,148,1.065,149,1.117,150,1.117,174,2.196,175,2.04,272,4.074,277,5.438,278,4.421,279,2.931,280,4.197,281,5.532,282,4.786,283,2.902,284,3.785,285,4.609,286,5.172,287,2.931,288,5.438,289,3.407,290,3.407,291,1.427,292,4.786,293,3.869,294,1.909,295,2.931,296,4.117,297,3.407,298,3.407,299,2.931,300,1.292,301,2.931,302,2.196,303,3.407,304,3.407,305,2.931,306,3.407,307,2.931,308,1.593,309,2.617,310,3.407,311,3.347,312,4.786,313,3.676,314,2.04,315,1.909,316,2.617]],["title/guards/AuthOrganizatorGuard.html",[229,2.592,317,2.847]],["body/guards/AuthOrganizatorGuard.html",[0,2.236,3,0.202,4,0.202,5,0.176,8,0.457,9,1.457,10,2.121,12,1.527,14,3.058,17,1.204,19,1.527,20,0.018,21,0.703,22,0.502,23,1.457,25,1.15,26,3.53,27,0.643,29,0.699,30,3.575,31,3.255,36,3.255,37,2.605,38,2.445,39,0.202,40,0.59,41,1.843,44,1.601,45,2.787,49,1.765,51,0.014,52,0.014,214,2.445,229,4.124,318,4.654,319,5.567,320,4.004,321,7.019,322,3,323,3.55,324,4.654,325,4.654,326,6.803,327,5.567,328,6.803,329,4.654,330,5.072,331,4.654,332,2.445,333,2.787,334,1.954,335,4.004]],["title/modules/ConcertManagementModule.html",[151,2.219,161,2.389]],["body/modules/ConcertManagementModule.html",[3,0.177,4,0.177,5,0.154,20,0.019,27,0.699,29,0.612,39,0.177,40,0.517,51,0.013,52,0.013,86,3.507,118,1.793,119,1.056,128,1.793,143,1.879,147,1.793,153,2.018,154,2.843,161,4.794,164,3.24,165,2.441,166,2.441,168,3.487,169,3.507,170,2.441,172,3.24,180,4.156,181,3.132,189,4.655,190,2.282,192,3.507,194,3.784,195,2.852,197,3.132,198,2.852,204,3.784,205,2.852,210,3.487,211,2.441,216,2.852,217,3.507,219,2.852,220,3.507,336,3.507,337,3.507,338,2.441,339,4.077,340,5.411,341,4.156,342,3.132,343,5.411,344,4.077,345,5.411,346,4.077,347,5.411,348,4.077,349,4.156,350,3.132,351,4.156,352,5.411,353,4.077,354,4.077,355,4.077,356,5.411,357,3.507,358,4.077,359,4.077,360,4.077,361,4.077,362,2.282,363,4.077,364,2.852]],["title/components/ConcertSectorsComponent.html",[53,0.47,113,0.96]],["body/components/ConcertSectorsComponent.html",[3,0.134,4,0.083,5,0.072,8,0.481,9,0.763,10,1.717,12,0.799,17,1.335,19,0.799,20,0.019,21,0.584,22,0.529,23,0.763,25,1.102,27,0.543,29,0.287,39,0.083,40,0.242,41,1.214,42,0.761,44,1.684,51,0.007,52,0.007,53,0.492,54,0.518,55,0.965,56,0.626,57,0.626,58,0.626,59,0.626,61,0.353,62,2.255,63,2.15,64,1.012,66,1.012,68,0.489,70,2.326,72,1.642,73,1.801,74,1.295,83,0.744,89,2.208,92,1.231,93,1.231,96,1.231,97,1.848,98,1.143,101,1.527,103,0.626,104,1.012,105,1.012,106,0.626,107,1.462,108,0.626,109,0.626,110,0.838,111,1.33,112,0.626,113,1.156,114,1.643,115,0.626,116,0.495,117,0.626,118,0.495,119,0.799,120,0.626,121,0.518,122,0.518,123,0.626,124,0.518,125,0.626,126,0.495,127,0.626,128,0.495,129,0.626,130,0.495,131,0.626,132,0.495,133,0.626,134,0.518,135,0.626,136,0.626,137,0.495,138,0.626,139,0.626,140,0.518,141,0.597,142,1.012,143,0.518,144,0.626,145,0.518,146,0.597,147,0.495,148,0.597,149,0.626,150,0.626,214,1.003,223,4.632,249,3.376,258,1.235,268,0.92,274,1.231,278,1.335,280,3.119,284,1.143,285,1.467,291,1.562,293,2.158,294,1.231,300,1.473,302,1.231,307,1.642,308,2.289,309,1.467,314,1.143,315,1.779,330,2.655,334,1.296,362,3.55,365,5.088,366,1.642,367,3.086,368,3.086,369,2.74,370,3.884,371,3.086,372,1.719,373,2.503,374,4.212,375,4.212,376,4.212,377,3.884,378,3.884,379,3.341,380,2.343,381,4.46,382,3.086,383,4.46,384,1.909,385,4.46,386,2.896,387,4.742,388,3.086,389,1.909,390,1.909,391,3.086,392,4.46,393,3.086,394,1.909,395,2.158,396,2.158,397,2.655,398,2.664,399,1.909,400,3.086,401,1.443,402,1.909,403,1.909,404,1.909,405,1.909,406,1.909,407,1.909,408,1.909,409,1.443,410,2.173,411,3.119,412,1.296,413,1.909,414,1.909,415,1.231,416,1.336,417,1.069,418,1.642,419,1.467,420,1.909,421,1.909,422,1.909,423,1.909,424,1.909,425,1.909,426,1.909,427,1.909,428,1.909,429,0.845,430,3.086,431,1.909,432,1.909,433,3.086,434,1.909,435,1.909,436,1.642,437,2.37,438,1.642,439,1.909,440,0.845,441,3.086,442,2.158,443,1.642,444,3.086,445,5.238,446,3.086,447,5.238,448,1.114,449,3.086,450,1.989,451,1.848,452,1.989,453,3.086,454,1.848,455,1.909,456,2.158,457,3.086,458,1.909,459,1.909,460,1.909,461,4.506,462,1.989,463,3.086,464,3.884,465,3.424,466,3.855,467,1.909,468,1.909,469,1.909,470,4.506,471,3.884,472,3.884,473,1.909,474,2.496,475,3.086,476,2.158,477,2.503,478,3.086,479,1.909,480,0.945,481,1.143,482,1.642,483,1.909,484,1.909,485,2.655,486,1.909,487,2.671,488,3.086,489,1.909,490,1.335,491,2.158,492,1.909,493,1.909,494,1.335,495,2.37,496,1.642,497,1.467,498,1.909,499,1.467,500,1.467,501,1.467,502,1.231,503,1.642,504,1.909,505,1.467,506,1.642,507,1.642,508,1.909,509,1.642]],["title/components/ConcertSellComponent.html",[53,0.47,116,0.96]],["body/components/ConcertSellComponent.html",[3,0.121,4,0.121,5,0.106,8,0.275,9,1.027,10,1.624,12,1.076,17,1.252,19,1.076,20,0.019,21,0.654,22,0.498,23,1.027,25,1.027,27,0.502,29,0.421,39,0.121,40,0.355,41,1.299,44,1.429,51,0.01,52,0.01,53,0.628,54,0.761,55,1.299,56,0.918,57,0.918,58,0.918,59,0.918,61,0.518,62,2.4,63,2.289,64,1.362,66,1.362,68,0.658,70,1.677,73,1.703,74,1.224,80,3.574,83,0.871,89,1.386,95,1.959,96,1.117,97,1.677,101,1.386,103,0.918,104,1.362,105,1.362,106,0.918,107,1.796,108,0.918,109,0.918,110,0.761,111,0.835,112,0.918,113,0.726,114,1.838,115,0.918,116,1.419,117,0.918,118,0.726,119,1.076,120,0.918,121,0.761,122,0.761,123,0.918,124,0.761,125,0.918,126,0.726,127,0.918,128,0.726,129,0.918,130,0.726,131,0.918,132,0.726,133,0.918,134,0.761,135,0.918,136,0.918,137,0.726,138,0.918,139,0.918,140,0.761,141,0.876,142,1.362,143,0.761,144,0.918,145,0.761,146,0.876,147,0.726,148,0.876,149,0.918,150,0.918,214,1.472,227,4.438,247,3.192,259,0.835,260,0.963,283,2.947,286,3.192,291,1.239,294,1.117,300,1.878,308,1.943,313,2.152,314,1.677,315,1.975,322,1.805,323,3.034,332,1.472,333,1.677,334,1.745,362,2.325,365,4.874,373,2.678,380,2.879,397,3.574,417,1.568,429,1.24,437,2.152,465,2.906,466,1.959,474,2.772,476,1.959,477,1.805,480,1.386,481,1.677,487,1.677,490,1.959,491,2.906,494,3.464,495,2.152,496,2.41,497,3.192,499,2.152,500,2.152,501,2.152,505,2.152,506,2.41,507,3.574,510,2.41,511,4.953,512,4.155,513,4.953,514,4.26,515,4.155,516,5.458,517,2.801,518,4.155,519,2.801,520,3.574,521,2.801,522,2.801,523,2.451,524,2.801,525,2.801,526,4.155,527,2.801,528,2.801,529,2.801,530,2.801,531,1.805,532,2.801,533,5.273,534,3.574,535,3.574,536,4.155,537,3.574,538,4.155,539,3.574,540,2.801,541,2.678,542,1.959,543,2.801,544,3.464,545,2.325,546,2.801]],["title/interfaces/Contract.html",[252,0.557,259,1.105]],["body/interfaces/Contract.html",[3,0.21,4,0.21,5,0.184,8,0.476,20,0.018,21,0.578,22,0.412,34,2.539,39,0.322,51,0.014,52,0.014,61,1.219,68,0.958,74,1.198,83,1.072,248,2.08,252,1.116,253,2.828,254,1.589,255,2.398,256,2.546,257,2.546,258,1.628,259,2.059,260,2.374,261,2.267,262,1.589,263,3.082,264,2.546,265,3.082,266,2.546,267,2.546,268,1.445,269,2.546,270,2.266,271,2.546]],["title/components/CreateConcertComponent.html",[53,0.47,118,0.96]],["body/components/CreateConcertComponent.html",[3,0.172,4,0.115,5,0.1,8,0.26,9,0.983,10,1.568,12,1.03,17,1.271,19,1.03,20,0.019,21,0.716,22,0.453,23,0.983,25,1.182,27,0.438,29,0.397,39,0.115,40,0.335,41,1.243,46,3.422,51,0.009,52,0.009,53,0.606,54,0.717,55,1.243,56,0.866,57,0.866,58,0.866,59,0.866,61,0.489,62,2.38,63,2.27,64,1.304,66,1.304,68,0.63,73,1.645,74,1.182,83,0.885,89,1.308,92,1.703,93,1.703,96,1.054,98,1.582,101,2.825,103,0.866,104,1.304,105,1.304,106,0.866,107,1.745,108,0.866,109,0.866,110,0.717,111,1.426,112,0.866,113,0.685,114,1.659,115,0.866,116,0.685,117,0.866,118,1.379,119,1.757,120,0.866,121,0.717,122,0.717,123,0.866,124,0.717,125,0.866,126,0.685,127,0.866,128,0.685,129,0.866,130,0.685,131,0.866,132,0.685,133,0.866,134,0.717,135,0.866,136,0.866,137,0.685,138,0.866,139,0.866,140,0.717,141,0.826,142,1.304,143,0.717,144,0.866,145,0.717,146,0.826,147,0.685,148,0.826,149,0.866,150,0.866,190,1.479,215,4.92,216,4.48,241,2.03,259,1.186,268,1.186,274,2.564,280,2.782,283,2.655,284,3.187,291,1.587,294,1.908,300,1.814,308,1.235,309,2.03,313,2.03,315,1.054,322,1.703,323,2.969,332,1.388,333,1.582,334,1.67,338,3.835,369,2.979,374,3.422,375,3.422,376,3.422,380,2.796,412,1.109,442,1.848,462,2.564,487,1.582,502,3.43,545,2.226,547,2.273,548,4.783,549,3.977,550,4.783,551,4.783,552,4.783,553,3.055,554,5.322,555,5.354,556,2.642,557,3.422,558,2.642,559,2.782,560,4.578,561,2.642,562,3.055,563,2.782,564,3.422,565,2.382,566,3.422,567,3.055,568,2.642,569,3.422,570,5.51,571,3.977,572,3.977,573,2.642,574,2.642,575,2.642,576,2.273,577,2.642,578,2.642,579,3.977,580,2.642,581,2.642,582,2.642,583,2.642,584,2.642,585,3.977,586,3.977,587,3.977,588,3.422,589,3.422,590,3.977,591,2.564,592,3.977,593,3.977,594,3.977,595,3.977,596,3.977,597,3.977,598,2.642,599,2.642,600,2.642,601,2.642,602,2.273,603,2.642,604,2.03,605,2.642]],["title/components/CreateOfferDialogComponent.html",[53,0.47,121,1.006]],["body/components/CreateOfferDialogComponent.html",[3,0.152,4,0.098,5,0.085,8,0.221,9,0.869,10,2.05,12,0.911,14,2.468,17,1.352,19,0.583,20,0.019,21,0.516,22,0.5,23,0.556,25,1.312,27,0.586,29,0.338,32,1.347,33,1.573,35,1.728,39,0.098,40,0.285,41,1.353,44,1.825,45,2.591,51,0.008,52,0.008,53,0.548,54,0.611,55,1.099,56,0.737,57,0.737,58,0.737,59,0.737,61,0.416,62,2.321,63,2.214,64,1.152,66,1.152,68,0.557,73,1.209,74,0.869,89,1.113,92,1.45,93,1.45,103,0.737,104,1.152,105,1.152,106,0.737,107,1.604,108,0.737,109,0.737,110,0.611,111,0.671,112,0.737,113,0.583,114,0.911,115,0.737,116,0.583,117,0.737,118,0.583,119,1.62,120,0.737,121,1.328,122,2.051,123,0.737,124,0.611,125,0.737,126,0.583,127,0.737,128,0.583,129,0.737,130,0.583,131,0.737,132,0.583,133,0.737,134,0.611,135,0.737,136,0.737,137,0.583,138,0.737,139,0.737,140,0.611,141,0.703,142,1.152,143,0.611,144,0.737,145,0.611,146,0.703,147,0.583,148,0.703,149,0.737,150,0.737,242,4.121,248,1.935,249,2.265,258,1.153,259,1.459,262,0.737,276,3.421,283,2.931,284,3.178,285,3.758,287,1.935,288,4.566,291,1.814,293,2.458,294,1.402,295,1.935,296,3.024,299,1.935,300,1.641,301,1.935,302,1.45,305,1.935,315,0.897,334,1.476,372,2.491,380,2.57,386,3.089,401,2.287,409,1.644,410,1.967,415,1.45,416,1.209,440,1.556,448,2.196,451,2.105,456,1.573,545,1.967,562,2.7,565,2.105,588,3.024,604,1.728,606,5.773,607,4.694,608,1.935,609,4.327,610,3.515,611,4.322,612,3.722,613,4.892,614,4.892,615,5.626,616,4.892,617,3.52,618,3.515,619,2.249,620,3.515,621,3.421,622,2.249,623,2.105,624,2.249,625,2.249,626,3.024,627,3.722,628,2.738,629,2.249,630,3.515,631,4.208,632,2.249,633,2.249,634,2.249,635,2.249,636,2.249,637,0.853,638,0.737,639,1.45,640,1.728,641,1.728,642,1.347,643,1.728,644,1.935,645,2.249,646,2.249,647,3.515,648,3.515,649,5.307,650,4.208,651,3.515,652,2.249,653,2.249,654,1.728,655,1.935,656,1.45,657,3.515,658,3.515,659,3.515,660,3.024,661,3.024,662,3.024,663,3.024,664,2.265,665,3.758,666,3.515,667,2.265,668,3.515,669,2.249]],["title/interfaces/CreateOfferDialogData.html",[252,0.557,276,2.389]],["body/interfaces/CreateOfferDialogData.html",[3,0.241,4,0.241,5,0.21,8,0.546,20,0.018,22,0.473,27,0.509,39,0.285,51,0.016,52,0.016,68,1.041,83,0.79,248,2.619,252,0.987,254,1.821,272,3.581,273,4.268,274,3.581,275,4.779,276,4.235]],["title/interfaces/DepConcert.html",[252,0.557,523,1.835]],["body/interfaces/DepConcert.html",[3,0.222,4,0.222,5,0.194,8,0.502,20,0.018,21,0.839,22,0.532,27,0.468,39,0.293,51,0.015,52,0.015,68,0.99,83,1.056,252,1.014,254,1.676,258,1.592,398,2.146,409,3.289,416,1.758,448,2.256,523,3.094,531,4.533,637,2.668,638,1.676,670,3.575,671,3.926,672,3.575,673,3.575,674,3.575,675,3.926,676,3.926,677,3.575,678,3.926,679,2.861,680,3.575]],["title/classes/EtherUnitConverter.html",[40,0.47,642,2.219]],["body/classes/EtherUnitConverter.html",[3,0.197,4,0.197,5,0.172,8,0.446,9,1.435,17,1.185,19,1.504,20,0.019,21,0.693,22,0.494,23,1.435,25,1.435,27,0.416,39,0.197,40,0.575,49,2.782,51,0.014,52,0.014,73,1.562,83,0.825,258,1.643,372,2.832,637,2.866,638,1.903,642,3.475,681,4.541,682,3.906,683,5.221,684,5.804,685,5.804,686,5.804,687,4.541,688,5.804,689,4.541,690,4.541,691,4.541,692,5.804,693,4.541,694,4.541,695,5.804,696,4.541,697,4.541,698,4.541,699,4.541,700,4.541]],["title/pipes/FilterConcertsPipe.html",[701,2.389,702,2.389]],["body/pipes/FilterConcertsPipe.html",[3,0.201,4,0.201,5,0.175,9,1.143,17,0.944,19,1.198,20,0.019,21,0.77,22,0.393,23,1.143,25,1.452,27,0.538,29,0.695,39,0.201,40,0.586,49,2.575,51,0.014,52,0.014,61,0.856,83,0.917,247,4.826,259,1.751,268,1.379,291,1.751,334,1.942,417,2.589,429,2.6,480,2.289,514,6.159,523,3.544,533,5.052,565,3.517,701,3.785,702,3.785,703,3.553,704,5.052,705,3.979,706,5.872,707,5.872,708,4.625,709,5.872,710,6.788,711,5.872,712,5.052,713,4.625,714,4.625,715,4.625]],["title/components/FooterComponent.html",[53,0.47,124,1.006]],["body/components/FooterComponent.html",[3,0.181,4,0.181,5,0.159,12,1.594,17,0.854,20,0.018,21,0.657,27,0.383,29,0.628,39,0.181,40,0.53,51,0.013,52,0.013,53,0.779,54,1.136,55,1.721,56,1.372,57,1.372,58,1.372,59,1.372,61,0.774,62,2.514,63,2.398,64,1.804,66,1.804,84,4.228,90,2.926,101,2.071,103,1.372,104,1.804,105,1.804,106,1.372,107,2.142,108,1.372,109,1.372,110,1.136,111,1.248,112,1.372,113,1.084,114,1.426,115,1.372,116,1.084,117,1.372,118,1.084,119,1.426,120,1.372,121,1.136,122,1.136,123,1.372,124,1.774,125,1.372,126,1.084,127,1.372,128,1.084,129,1.372,130,1.084,131,1.372,132,1.084,133,1.372,134,1.136,135,1.372,136,1.372,137,1.084,138,1.372,139,1.372,140,1.136,141,1.308,142,1.804,143,1.136,144,1.372,145,1.136,146,1.308,147,1.084,148,1.308,149,1.372,150,1.372,300,1.587,311,2.926,316,3.214,362,2.342,462,2.697,465,2.926,466,2.926,716,3.599,717,6.151,718,6.151,719,5.504,720,4.184,721,5.504,722,5.504,723,3.599,724,3.296]],["title/interfaces/Id.html",[252,0.557,261,1.275]],["body/interfaces/Id.html",[3,0.207,4,0.207,5,0.181,8,0.469,20,0.018,21,0.57,22,0.51,34,2.515,39,0.321,51,0.014,52,0.014,61,1.211,68,0.949,74,1.18,83,1.053,248,2.06,252,1.112,253,2.801,254,1.565,255,2.363,256,2.508,257,2.508,258,1.702,259,1.952,260,1.642,261,2.361,262,2.251,263,3.464,264,2.508,265,3.061,266,2.508,267,2.508,268,1.424,269,2.508,270,2.232,271,2.508]],["title/interfaces/ListedTicket.html",[252,0.557,725,1.947]],["body/interfaces/ListedTicket.html",[3,0.225,4,0.225,5,0.196,8,0.509,20,0.018,22,0.536,27,0.577,39,0.294,51,0.015,52,0.015,68,0.999,83,0.965,252,1.02,254,1.699,258,1.486,262,1.699,372,2.294,416,2.587,448,1.871,637,2.391,638,1.699,656,3.34,725,3.311,726,3.625,727,3.952,728,3.981,729,2.9,730,3.34,731,3.34]],["title/interfaces/Listing.html",[252,0.557,727,1.947]],["body/interfaces/Listing.html",[3,0.218,4,0.218,5,0.19,8,0.493,20,0.018,22,0.595,27,0.566,39,0.29,51,0.015,52,0.015,68,0.979,83,1.02,252,1.006,254,1.646,258,1.723,262,2.291,372,3.094,416,2.303,448,2.523,637,2.651,638,1.646,656,4.505,725,2.637,726,3.511,727,3.672,728,3.856,729,2.809,730,3.235,731,3.235]],["title/components/MarketplaceComponent.html",[53,0.47,126,0.96]],["body/components/MarketplaceComponent.html",[3,0.183,4,0.183,5,0.16,12,1.601,17,0.862,20,0.018,21,0.661,27,0.387,29,0.634,39,0.183,40,0.535,51,0.013,52,0.013,53,0.783,54,1.147,55,1.731,56,1.385,57,1.385,58,1.385,59,1.385,61,0.781,62,2.516,63,2.4,64,1.816,66,1.816,96,1.684,98,2.529,103,1.385,104,1.816,105,1.816,106,1.385,107,2.15,108,1.385,109,1.385,110,1.147,111,1.26,112,1.385,113,1.094,114,1.435,115,1.385,116,1.094,117,1.385,118,1.094,119,1.435,120,1.385,121,1.147,122,1.147,123,1.385,124,1.147,125,1.385,126,1.699,127,1.385,128,1.094,129,1.385,130,1.094,131,1.385,132,1.094,133,1.385,134,1.147,135,1.385,136,1.385,137,1.094,138,1.385,139,1.385,140,1.147,141,1.32,142,1.816,143,1.147,144,1.385,145,1.147,146,1.32,147,1.094,148,1.32,149,1.385,150,1.385,242,3.983,499,3.244,500,3.244,501,3.244,732,4.764,733,3.633,734,6.179,735,5.538,736,4.223,737,4.223,738,3.244]],["title/modules/MarketplaceModule.html",[151,2.219,162,2.389]],["body/modules/MarketplaceModule.html",[3,0.165,4,0.165,5,0.144,20,0.019,27,0.699,29,0.572,39,0.165,40,0.482,51,0.012,52,0.012,110,1.842,111,1.135,113,1.757,114,1.339,116,1.757,126,1.757,140,1.842,141,1.19,145,1.842,146,1.19,153,1.884,154,2.715,160,3.796,162,4.881,164,3.094,165,2.279,166,2.279,168,3.33,170,3.094,172,3.094,173,3.969,174,2.453,175,2.279,176,2.924,180,3.969,181,2.924,190,2.13,194,3.614,195,2.662,204,3.614,205,2.662,208,2.924,210,3.33,211,2.279,212,3.969,214,2,223,2.662,224,3.275,226,3.275,227,2.662,228,3.275,242,2.453,278,2.662,302,2.453,341,3.969,342,2.924,349,3.969,350,2.924,351,3.969,418,3.275,544,2.662,739,3.275,740,3.807,741,3.275,742,3.807,743,5.167,744,3.807,745,4.445,746,3.275,747,5.167,748,3.094,749,3.275,750,2.924,751,5.167,752,2.924]],["title/interfaces/Metadata.html",[61,0.686,252,0.557]],["body/interfaces/Metadata.html",[3,0.204,4,0.204,5,0.178,8,0.462,20,0.018,21,0.815,22,0.553,34,2.492,39,0.32,51,0.014,52,0.014,61,1.263,68,0.94,74,1.162,83,1.079,248,2.041,252,1.109,253,3.193,254,1.542,255,2.328,256,2.471,257,2.471,258,1.61,259,1.939,260,1.618,261,2.236,262,1.542,263,3.041,264,2.471,265,3.041,266,2.471,267,2.471,268,2.037,269,3.588,270,2.199,271,2.471]],["title/components/MyConcertsComponent.html",[53,0.47,128,0.96]],["body/components/MyConcertsComponent.html",[3,0.103,4,0.103,5,0.09,8,0.234,9,0.91,10,1.89,12,0.953,14,2.522,17,1.267,19,1.413,20,0.019,21,0.717,22,0.511,23,1.348,25,1.348,27,0.5,29,0.358,39,0.103,40,0.302,41,1.404,42,0.952,44,1.266,45,1.429,51,0.009,52,0.009,53,0.569,54,0.648,55,1.15,56,0.782,57,0.782,58,0.782,59,0.782,61,0.441,62,2.344,63,2.235,64,1.206,66,1.206,68,0.583,70,1.429,73,0.821,74,0.59,83,0.987,87,2.827,89,1.821,90,1.669,91,2.052,96,1.792,97,1.429,103,0.782,104,1.206,105,1.206,106,0.782,107,1.655,108,0.782,109,0.782,110,0.648,111,0.712,112,0.782,113,0.618,114,1.74,115,0.782,116,0.618,117,0.782,118,0.618,119,0.953,120,0.782,121,0.648,122,0.648,123,0.782,124,0.648,125,0.782,126,0.618,127,0.782,128,1.308,129,0.782,130,0.618,131,0.782,132,0.618,133,0.782,134,0.648,135,0.782,136,0.782,137,0.618,138,0.782,139,0.782,140,0.648,141,0.746,142,1.206,143,0.648,144,0.782,145,0.648,146,0.746,147,0.618,148,0.746,149,0.782,150,0.782,218,4.889,219,4.452,247,3.254,259,2.051,260,2.236,268,1.097,283,2.818,294,1.792,300,1.704,311,1.669,314,2.203,315,2.014,322,1.538,323,2.853,332,1.254,333,1.429,334,1.545,338,3.811,364,1.669,369,3.562,373,2.372,380,2.653,386,3.156,395,2.574,412,2.605,415,1.538,417,1.335,429,2.415,442,1.669,454,3.023,477,1.538,487,1.429,490,1.669,491,2.574,502,4.264,523,2.223,531,3.254,534,3.165,535,3.165,537,3.165,553,2.827,557,3.165,559,3.531,641,1.833,665,2.827,724,2.203,753,2.052,754,4.492,755,3.68,756,4.492,757,3.864,758,3.68,759,3.68,760,3.815,761,2.386,762,2.386,763,6.203,764,3.165,765,3.68,766,2.386,767,3.68,768,2.386,769,2.203,770,2.059,771,4.958,772,2.386,773,3.68,774,2.386,775,2.574,776,2.574,777,2.386,778,2.386,779,2.386,780,2.386,781,2.386,782,2.386,783,2.386,784,2.386,785,1.833,786,3.68,787,2.386,788,2.386,789,3.68,790,3.68,791,3.68,792,3.165,793,2.386]],["title/components/MyNftComponent.html",[53,0.47,130,0.96]],["body/components/MyNftComponent.html",[1,4.237,3,0.176,4,0.118,5,0.103,6,2.084,8,0.267,9,1.003,10,1.593,12,1.051,17,1.179,19,1.051,20,0.019,21,0.643,22,0.515,23,1.003,25,1.003,27,0.575,29,0.407,30,4.435,31,1.897,34,1.139,35,2.084,39,0.118,40,0.344,41,1.519,44,1.395,51,0.01,52,0.01,53,0.616,54,0.737,55,1.268,56,0.889,57,0.889,58,0.889,59,0.889,61,0.502,62,2.389,63,2.278,64,1.33,66,1.33,68,0.643,70,1.624,73,1.395,74,1.003,89,2.008,92,1.748,93,1.748,95,1.897,96,1.082,103,0.889,104,1.33,105,1.33,106,0.889,107,1.768,108,0.889,109,0.889,110,0.737,111,0.809,112,0.889,113,0.703,114,1.496,115,0.889,116,0.703,117,0.889,118,0.703,119,1.496,120,0.889,121,1.101,122,1.567,123,0.889,124,0.737,125,0.889,126,0.703,127,0.889,128,0.703,129,0.889,130,1.397,131,0.889,132,0.703,133,0.889,134,0.737,135,0.889,136,0.889,137,0.703,138,0.889,139,0.889,140,0.737,141,0.848,142,1.33,143,0.737,144,0.889,145,0.737,146,0.848,147,0.703,148,0.848,149,0.889,150,0.889,233,4.237,248,2.425,261,1.395,270,1.897,283,2.151,284,1.624,291,1.21,293,2.837,294,1.082,300,1.843,302,1.748,308,1.268,315,1.938,334,1.703,380,2.833,386,3.299,387,5.401,398,1.703,409,1.897,412,1.703,415,1.748,436,2.334,437,3.116,438,2.334,440,1.796,442,2.837,443,2.334,474,2.27,480,1.343,481,1.624,487,1.624,490,1.897,491,2.837,502,2.615,509,2.334,541,2.615,560,3.49,604,2.084,607,1.897,612,4.18,628,3.018,644,2.334,794,4.653,795,2.334,796,4.859,797,4.057,798,4.057,799,2.713,800,4.057,801,2.713,802,4.057,803,2.713,804,3.49,805,4.057,806,4.057,807,2.713,808,2.713,809,2.713,810,2.334,811,2.713,812,2.713,813,4.057,814,4.057,815,4.057,816,4.057,817,4.057,818,4.057,819,4.057,820,4.057,821,6.058,822,4.057,823,2.837,824,2.713,825,4.057]],["title/components/MyOffersComponent.html",[53,0.47,132,0.96]],["body/components/MyOffersComponent.html",[3,0.084,4,0.084,5,0.074,8,0.191,9,0.774,10,1.731,12,0.811,17,1.302,19,1.019,20,0.019,21,0.59,22,0.491,23,0.972,25,1.221,27,0.453,29,0.292,39,0.084,40,0.246,41,1.409,42,1.568,44,1.55,51,0.007,52,0.007,53,0.498,54,0.528,55,0.979,56,0.637,57,0.637,58,0.637,59,0.637,61,0.36,62,2.263,63,2.158,64,1.027,66,1.027,68,0.496,73,1.7,74,1.305,83,0.751,96,0.775,103,0.637,104,1.027,105,1.027,106,0.637,107,1.478,108,0.637,109,0.637,110,0.528,111,0.58,112,0.637,113,0.504,114,1.586,115,0.637,116,0.504,117,0.637,118,0.504,119,0.811,120,0.637,121,0.528,122,1.806,123,0.637,124,0.528,125,0.637,126,0.504,127,0.637,128,0.504,129,0.637,130,0.504,131,0.637,132,1.168,133,0.637,134,0.528,135,0.637,136,0.637,137,0.504,138,0.637,139,0.637,140,0.528,141,0.608,142,1.027,143,0.528,144,0.637,145,0.528,146,0.608,147,0.504,148,0.608,149,0.637,150,0.637,235,4.531,249,3.579,258,1.245,259,1.344,260,1.7,261,1.077,262,1.731,268,0.934,270,2.311,283,2.944,291,1.575,294,1.568,300,1.491,308,0.909,315,0.775,334,1.315,372,2.557,380,2.368,398,2.217,401,2.469,410,1.088,411,3.456,412,1.315,416,1.7,429,1.995,440,1.386,448,2.427,450,3.404,451,3.817,452,2.018,454,2.959,474,2.2,480,0.962,541,2.018,545,1.752,565,1.875,567,2.405,617,3.162,623,1.875,628,2.955,637,1.491,638,0.637,639,1.253,640,1.493,642,1.164,643,1.493,654,1.493,655,1.672,656,1.253,660,3.877,661,3.877,662,3.877,663,3.877,664,2.905,679,2.523,724,1.164,725,2.066,727,2.368,729,2.2,730,2.905,760,3.694,770,1.088,775,2.19,776,2.19,794,4.976,804,2.694,823,2.19,826,1.672,827,3.931,828,3.131,829,3.931,830,3.931,831,3.931,832,2.694,833,4.507,834,2.694,835,1.672,836,3.131,837,2.694,838,1.944,839,2.694,840,4.266,841,1.944,842,1.944,843,3.131,844,2.694,845,4.507,846,1.944,847,3.131,848,3.131,849,1.944,850,2.018,851,1.944,852,3.931,853,1.944,854,1.944,855,1.944,856,1.944,857,1.493,858,3.131,859,1.944,860,3.131,861,1.944,862,1.36,863,1.672,864,1.944,865,1.944,866,1.672,867,1.493,868,1.493,869,1.672,870,1.672,871,1.944,872,1.944,873,1.944,874,3.131,875,1.944,876,3.131,877,1.944,878,1.944,879,1.944,880,1.944,881,1.944,882,3.131,883,3.131,884,3.877,885,2.405,886,2.405,887,3.877,888,3.877,889,3.877,890,3.877,891,2.694,892,4.507,893,3.877,894,2.694,895,1.493,896,1.493,897,1.493,898,1.944]],["title/interfaces/NFT.html",[248,1.275,252,0.557]],["body/interfaces/NFT.html",[3,0.198,4,0.198,5,0.173,8,0.449,20,0.018,21,0.545,22,0.594,34,2.447,39,0.318,51,0.014,52,0.014,61,1.358,68,0.923,74,1.129,83,1.044,248,2.207,252,1.103,253,2.725,254,1.498,255,2.261,256,2.4,257,2.4,258,1.683,259,2.19,260,1.571,261,2.526,262,1.498,263,3,264,2.4,265,3.434,266,2.4,267,2.4,268,1.362,269,2.4,270,3.16,271,2.4]],["title/components/NavigationBarComponent.html",[53,0.47,134,1.006]],["body/components/NavigationBarComponent.html",[3,0.101,4,0.101,5,0.088,8,0.355,9,0.893,10,2.189,12,0.936,13,1.63,14,2.398,17,1.257,19,0.604,20,0.019,21,0.528,22,0.198,23,0.576,25,1.472,27,0.494,29,0.35,39,0.101,40,0.295,41,1.559,42,2.521,44,2.049,45,2.651,49,1.371,51,0.009,52,0.009,53,0.561,54,0.633,55,1.13,56,0.764,57,0.764,58,0.764,59,0.764,61,0.431,62,2.335,63,2.227,64,1.185,66,1.185,70,2.164,83,0.812,95,1.63,96,0.93,97,1.396,98,1.396,101,1.154,103,0.764,104,1.185,105,1.185,106,0.764,107,1.635,108,0.764,109,0.764,110,0.633,111,0.695,112,0.764,113,0.604,114,1.638,115,0.764,116,0.604,117,0.764,118,0.604,119,1.398,120,0.764,121,0.633,122,0.633,123,0.764,124,0.633,125,0.764,126,0.604,127,0.764,128,0.604,129,0.764,130,0.604,131,0.764,132,0.604,133,0.764,134,1.354,135,2.018,136,0.764,137,0.604,138,2.218,139,0.764,140,0.633,141,0.729,142,1.185,143,0.633,144,0.764,145,0.633,146,0.729,147,0.604,148,1.13,149,0.764,150,0.764,184,4.855,198,2.528,214,1.225,239,2.005,242,3.478,247,3.478,248,0.802,249,3.478,291,2.041,294,1.766,308,1.09,311,3.096,314,2.651,315,0.93,323,2.948,332,1.225,333,1.396,335,3.109,364,1.63,409,2.07,462,1.502,474,2.023,480,1.154,481,1.396,487,2.651,495,1.791,516,5.124,520,5.745,542,1.63,545,2.023,641,1.791,723,2.005,738,1.791,792,3.109,899,5.437,900,2.005,901,4.427,902,3.614,903,4.987,904,4.987,905,4.987,906,4.987,907,4.987,908,4.987,909,4.987,910,3.839,911,2.331,912,2.331,913,3.614,914,2.986,915,2.331,916,4.987,917,4.987,918,2.331,919,2.331,920,2.331,921,2.331,922,4.987,923,2.331,924,2.005,925,2.331,926,2.331,927,2.331,928,2.331,929,2.005,930,2.331,931,3.614,932,3.614,933,5.71,934,5.71,935,4.427,936,4.427,937,2.331,938,2.331,939,2.331,940,3.614,941,3.614,942,3.614,943,3.614,944,3.614,945,3.614,946,2.776,947,3.614,948,3.614,949,3.109,950,3.614,951,3.614,952,2.331,953,2.331,954,2.331,955,2.331,956,2.331,957,2.331,958,2.331,959,3.614,960,2.331,961,2.331,962,2.331]],["title/injectables/NftMarketplaceService.html",[0,1.406,617,2.219]],["body/injectables/NftMarketplaceService.html",[0,1.286,2,1.202,3,0.093,4,0.093,5,0.081,8,0.211,9,0.838,10,2.415,12,0.878,13,1.502,14,2.317,17,1.314,19,1.551,20,0.019,21,0.714,22,0.491,23,1.48,25,1.56,26,3.585,27,0.505,29,0.323,32,1.286,33,1.502,36,1.502,37,1.202,38,1.128,39,0.093,40,0.272,41,1.491,42,2.567,44,2.251,45,2.03,49,2.093,51,0.008,52,0.008,73,1.64,74,1.038,83,1.026,114,1.551,122,1.713,258,1.412,259,2.065,260,2.059,261,1.898,262,2.068,268,1.422,283,3.231,291,1.786,372,2.557,396,2.371,401,2.23,412,2.317,416,2.059,429,2.849,440,1.501,448,1.722,494,3.336,591,2.185,617,2.03,621,2.371,628,3.088,637,1.809,638,1.111,639,4.218,650,1.847,667,3.859,683,2.937,725,1.128,727,3.638,729,1.202,730,4.148,731,3.074,760,3.336,769,3.585,770,3.351,775,2.371,776,2.371,832,2.916,834,2.916,837,2.916,840,3.664,844,2.916,850,3.723,857,1.65,893,2.916,914,2.03,963,1.847,964,2.937,965,4.769,966,2.604,967,3.39,968,4.769,969,3.39,970,3.39,971,2.148,972,2.148,973,2.148,974,4.599,975,4.413,976,2.148,977,2.148,978,2.916,979,2.148,980,2.604,981,2.604,982,3.39,983,2.148,984,2.148,985,3.39,986,2.148,987,3.39,988,2.148,989,3.39,990,2.148,991,2.148,992,2.604,993,2.148,994,2.148,995,5.192,996,1.847,997,2.148,998,1.847,999,1.847,1000,2.148,1001,1.847,1002,1.65,1003,2.148,1004,2.148,1005,2.148,1006,4.769,1007,2.148,1008,2.148,1009,2.148,1010,2.148,1011,1.502,1012,2.371,1013,1.502,1014,1.65,1015,2.148]],["title/interfaces/OwnedNFTs.html",[34,1.556,252,0.557]],["body/interfaces/OwnedNFTs.html",[3,0.207,4,0.207,5,0.181,8,0.469,20,0.018,21,0.57,22,0.51,34,3.031,39,0.321,51,0.014,52,0.014,61,1.211,68,0.949,74,1.18,83,1.053,248,2.361,252,1.112,253,2.801,254,1.565,255,2.363,256,2.508,257,2.508,258,1.702,259,1.952,260,1.642,261,2.252,262,1.565,263,3.061,264,2.508,265,3.061,266,2.508,267,2.508,268,1.424,269,2.508,270,2.232,271,3.607]],["title/components/PageNotFoundComponent.html",[53,0.47,137,0.96]],["body/components/PageNotFoundComponent.html",[3,0.18,4,0.18,5,0.157,12,1.586,17,0.846,20,0.018,21,0.653,27,0.38,29,0.623,39,0.18,40,0.525,51,0.013,52,0.013,53,0.776,54,1.125,55,1.71,56,1.359,57,1.359,58,1.359,59,1.359,61,0.767,62,2.512,63,2.395,64,1.793,66,1.793,103,1.359,104,1.793,105,1.793,106,1.359,107,2.135,108,1.359,109,1.359,110,1.125,111,1.236,112,1.359,113,1.074,114,1.417,115,1.359,116,1.074,117,1.359,118,1.074,119,1.417,120,1.359,121,1.125,122,1.125,123,1.359,124,1.125,125,1.359,126,1.074,127,1.359,128,1.074,129,1.359,130,1.074,131,1.359,132,1.074,133,1.359,134,1.125,135,1.359,136,1.359,137,1.687,138,2.41,139,1.359,140,1.125,141,1.296,142,1.793,143,1.125,144,1.359,145,1.125,146,1.296,147,1.074,148,1.296,149,1.359,150,1.359,200,3.826,300,1.572,362,2.32,465,2.899,466,2.899,1016,4.706,1017,3.566,1018,6.511,1019,6.123,1020,5.47,1021,4.145,1022,5.47,1023,4.145,1024,4.145]],["title/modules/PipesModule.html",[151,2.219,748,2.219]],["body/modules/PipesModule.html",[3,0.212,4,0.212,5,0.185,20,0.019,27,0.634,29,0.734,39,0.212,40,0.619,51,0.014,52,0.014,153,2.419,154,3.194,164,3.641,165,2.927,166,2.927,168,3.919,170,2.927,172,3.641,210,3.919,211,2.927,251,5.23,702,4.918,748,4.523,1002,3.755,1025,4.205,1026,4.205,1027,4.205,1028,4.918,1029,4.888,1030,4.888,1031,4.888,1032,4.888]],["title/components/ReselledTicketComponent.html",[53,0.47,140,1.006]],["body/components/ReselledTicketComponent.html",[3,0.109,4,0.109,5,0.095,8,0.247,9,0.947,10,1.521,12,0.993,17,1.249,19,0.993,20,0.019,21,0.619,22,0.501,23,0.947,25,0.947,27,0.475,29,0.378,39,0.109,40,0.319,41,1.622,42,1.003,44,1.318,51,0.009,52,0.009,53,0.588,54,0.683,55,1.198,56,0.824,57,0.824,58,0.824,59,0.824,61,0.465,62,2.363,63,2.253,64,1.256,66,1.256,68,0.607,73,1.596,74,1.283,83,0.87,96,1.003,103,0.824,104,1.256,105,1.256,106,0.824,107,1.701,108,0.824,109,0.824,110,0.683,111,0.75,112,0.824,113,0.651,114,0.993,115,0.824,116,0.651,117,0.824,118,0.651,119,0.993,120,0.824,121,0.683,122,1.04,123,0.824,124,0.683,125,0.824,126,0.651,127,0.824,128,0.651,129,0.824,130,0.651,131,0.824,132,0.651,133,0.824,134,0.683,135,0.824,136,0.824,137,0.651,138,0.824,139,0.824,140,1.409,141,1.972,142,1.256,143,0.683,144,0.824,145,0.683,146,0.786,147,0.651,148,0.786,149,0.824,150,0.824,258,1.388,260,1.318,261,1.318,262,1.831,268,0.75,283,2.055,291,1.143,294,1.003,300,1.76,308,1.176,315,1.528,334,1.609,362,1.407,372,2.473,373,2.991,380,2.727,398,2.471,401,1.791,411,1.759,416,2.024,419,1.932,429,2.055,448,2.42,450,3.345,451,3.108,452,2.469,454,2.779,474,2.597,476,1.759,477,1.621,480,1.245,481,1.506,541,2.469,542,1.759,617,3.524,623,2.294,628,3.294,637,1.968,638,0.824,639,1.621,640,1.932,654,1.932,667,3.345,679,2.904,724,1.506,725,2.727,727,2.438,731,2.469,752,4.846,769,2.294,770,2.144,823,2.679,835,2.163,840,1.932,850,3.6,857,1.932,862,1.759,863,2.163,866,2.163,867,1.932,868,1.932,869,2.163,870,2.163,884,4.464,885,2.943,886,2.943,887,4.464,888,4.464,889,4.464,890,4.464,891,3.296,894,3.296,895,1.932,896,1.932,897,1.932,964,2.679,1033,5.426,1034,1.932,1035,3.992,1036,3.296,1037,4.641,1038,2.943,1039,3.296,1040,2.163,1041,3.831,1042,2.514,1043,3.296,1044,2.163,1045,2.163,1046,2.514,1047,3.831,1048,2.514,1049,2.514,1050,2.514,1051,2.514]],["title/interfaces/Sector.html",[252,0.557,398,1.556]],["body/interfaces/Sector.html",[3,0.205,4,0.205,5,0.179,8,0.465,20,0.018,21,0.817,22,0.622,27,0.433,39,0.283,51,0.014,52,0.014,68,0.944,83,1.003,252,0.979,254,1.552,258,1.724,398,2.502,409,3.458,416,1.628,448,2.547,523,2.343,531,3.05,637,2.805,638,1.552,670,3.31,671,3.636,672,4.787,673,4.787,674,4.787,675,5.258,676,5.258,677,3.31,678,3.636,679,2.649,680,3.31]],["title/components/SectorComponent.html",[53,0.47,143,1.006]],["body/components/SectorComponent.html",[3,0.113,4,0.113,5,0.098,8,0.255,9,0.97,12,1.017,17,1.301,19,1.017,20,0.019,21,0.711,22,0.449,23,0.97,25,1.17,27,0.433,29,0.39,39,0.113,40,0.329,41,0.812,42,1.035,49,0.985,51,0.009,52,0.009,53,0.6,54,0.705,55,1.227,56,0.851,57,0.851,58,0.851,59,0.851,61,0.48,62,2.374,63,2.264,64,1.287,66,1.287,68,0.622,73,1.35,74,0.97,83,0.369,89,2.343,96,1.035,101,2.343,103,0.851,104,1.287,105,1.287,106,0.851,107,1.729,108,0.851,109,0.851,110,0.705,111,0.774,112,0.851,113,0.673,114,1.017,115,0.851,116,0.673,117,0.851,118,0.673,119,1.017,120,0.851,121,0.705,122,0.705,123,0.851,124,0.705,125,0.851,126,0.673,127,0.851,128,0.673,129,0.851,130,0.673,131,0.851,132,0.673,133,0.851,134,0.705,135,0.851,136,0.851,137,0.673,138,0.851,139,0.851,140,0.705,141,0.812,142,1.287,143,1.432,144,0.851,145,0.705,146,0.812,147,0.673,148,0.812,149,0.851,150,0.851,190,1.453,241,1.994,258,1.116,284,2.35,291,1.777,294,1.888,300,0.985,308,1.214,314,1.555,315,1.565,316,1.994,338,3.905,357,3.376,364,1.816,369,3.831,398,2.738,401,2.649,409,1.835,412,2.379,416,1.35,440,1.738,448,2.045,451,2.35,452,3.84,462,1.673,470,3.376,485,4.538,494,2.745,497,1.994,503,3.376,545,3.335,555,5.126,559,2.745,562,3.015,563,3.69,564,3.376,565,2.35,566,3.376,567,4.052,569,4.071,570,5.126,576,2.233,623,2.35,642,1.555,643,1.994,664,2.53,665,4.052,672,1.816,673,1.816,674,1.816,677,1.816,679,2.197,724,2.35,738,1.994,839,3.376,862,1.816,867,3.015,1038,3.015,1052,2.233,1053,4.733,1054,3.925,1055,5.275,1056,5.275,1057,3.925,1058,4.733,1059,3.925,1060,4.733,1061,3.925,1062,2.596,1063,2.596,1064,2.596,1065,4.733,1066,2.596,1067,2.596,1068,3.925,1069,2.596,1070,3.925,1071,2.596,1072,2.596,1073,3.925,1074,2.596,1075,2.233,1076,2.596,1077,3.925,1078,3.925,1079,1.994,1080,2.233,1081,2.596,1082,2.596,1083,2.596,1084,2.596,1085,2.596,1086,2.596,1087,2.596,1088,2.596,1089,2.596,1090,2.596,1091,2.596,1092,2.596,1093,2.596,1094,2.596,1095,2.596,1096,2.596,1097,2.596,1098,2.596,1099,2.596,1100,2.596,1101,2.596,1102,3.925,1103,3.925,1104,2.596,1105,2.596,1106,3.925,1107,2.596,1108,3.925,1109,2.596]],["title/interfaces/SellerOffer.html",[252,0.557,729,2.074]],["body/interfaces/SellerOffer.html",[3,0.225,4,0.225,5,0.196,8,0.509,20,0.018,22,0.536,27,0.577,39,0.294,51,0.015,52,0.015,68,0.999,83,1.059,252,1.02,254,1.699,258,1.486,262,1.699,372,2.294,416,2.336,448,1.871,637,2.391,638,1.699,656,3.34,725,2.723,726,3.625,727,3.569,728,3.981,729,3.527,730,4.554,731,4.554]],["title/injectables/SnackbarService.html",[0,1.406,910,2.389]],["body/injectables/SnackbarService.html",[0,2.055,2,2.286,3,0.311,4,0.177,5,0.155,8,0.401,9,1.339,12,1.404,17,1.322,19,1.677,20,0.019,21,0.772,22,0.551,23,1.6,25,1.711,27,0.496,29,0.613,37,2.286,38,2.146,39,0.177,40,0.518,41,1.277,49,2.306,51,0.013,52,0.013,83,1.032,197,3.138,198,2.857,286,4.669,291,2.065,910,3.492,1110,3.514,1111,7.064,1112,7.064,1113,4.085,1114,6.473,1115,4.085,1116,7.608,1117,5.417,1118,4.085,1119,6.923,1120,6.078,1121,5.417,1122,4.085,1123,5.417,1124,4.085,1125,6.078,1126,6.078]],["title/components/StandardTicketComponent.html",[53,0.47,145,1.006]],["body/components/StandardTicketComponent.html",[3,0.095,4,0.095,5,0.083,8,0.215,9,0.85,10,1.393,12,0.891,17,1.23,19,1.248,20,0.019,21,0.664,22,0.513,23,1.191,25,1.191,27,0.441,29,0.329,39,0.095,40,0.277,41,0.684,42,1.372,44,1.183,49,1.304,51,0.008,52,0.008,53,0.539,54,0.594,55,1.075,56,0.717,57,0.717,58,0.717,59,0.717,61,0.405,62,2.311,63,2.204,64,1.128,66,1.128,68,0.545,73,1.801,74,1.051,83,0.489,96,0.872,103,0.717,104,1.128,105,1.128,106,0.717,107,1.579,108,0.717,109,0.717,110,0.594,111,0.652,112,0.717,113,0.567,114,0.891,115,0.717,116,0.567,117,0.717,118,0.567,119,0.891,120,0.717,121,0.594,122,0.594,123,0.717,124,0.594,125,0.717,126,0.567,127,0.717,128,0.567,129,0.717,130,0.567,131,0.717,132,0.567,133,0.717,134,0.594,135,0.717,136,0.717,137,0.567,138,0.717,139,0.717,140,0.594,141,0.684,142,1.128,143,0.594,144,0.717,145,1.308,146,1.884,147,0.567,148,0.684,149,0.717,150,0.717,258,1.55,261,1.183,262,1.717,268,1.026,291,1.437,294,0.872,300,0.83,308,1.023,315,1.372,334,1.444,362,1.224,369,1.224,372,2.808,373,2.739,379,3.656,386,2.922,395,1.53,396,2.406,398,2.761,401,2.6,411,3.889,412,1.785,415,1.41,416,2.072,417,1.224,419,3.265,429,2.319,448,2.335,450,3.105,451,2.885,452,2.217,454,3.33,474,2.379,476,1.53,477,1.41,480,1.083,481,1.31,539,1.882,541,2.217,542,1.53,589,1.882,621,4.214,623,2.545,628,2.696,637,2.406,638,0.717,664,3.105,667,3.584,679,2.696,680,3.37,750,4.761,764,4.784,769,2.059,770,1.925,785,2.642,823,2.406,862,2.406,885,2.642,886,2.642,895,1.68,896,1.68,897,1.68,929,2.959,964,2.406,975,2.406,1034,1.68,1035,3.656,1036,2.959,1038,2.642,1039,2.959,1040,1.882,1043,2.959,1044,1.882,1045,1.882,1127,5.332,1128,4.25,1129,3.439,1130,4.25,1131,2.187,1132,2.187,1133,3.439,1134,2.187,1135,3.439,1136,3.439,1137,4.818,1138,3.439,1139,5.238,1140,2.187,1141,3.439,1142,3.439,1143,4.25,1144,3.439,1145,3.656,1146,4.25,1147,2.187,1148,2.187,1149,2.187,1150,3.439,1151,2.187,1152,2.187,1153,2.187,1154,2.187,1155,2.187,1156,3.439,1157,2.187,1158,2.187,1159,2.187,1160,2.187,1161,2.187,1162,2.187,1163,2.187,1164,2.187,1165,2.187,1166,2.187,1167,2.187,1168,2.187,1169,2.187,1170,2.187,1171,2.187,1172,2.187,1173,2.187,1174,2.187,1175,2.187,1176,3.439,1177,2.187,1178,2.187,1179,2.187,1180,2.187,1181,2.187,1182,2.187,1183,2.187,1184,4.818,1185,4.818,1186,4.818,1187,4.818,1188,3.439]],["title/injectables/Ticked1155Service.html",[0,1.406,386,1.947]],["body/injectables/Ticked1155Service.html",[0,1.098,2,0.988,3,0.077,4,0.077,5,0.067,8,0.173,9,0.715,10,2.443,12,0.75,13,1.234,14,2.12,17,1.343,19,1.704,20,0.019,21,0.785,22,0.56,23,1.626,25,1.644,26,3.939,27,0.43,29,0.265,36,1.234,37,0.988,38,0.927,39,0.077,40,0.224,41,1.331,42,2.723,44,2.365,49,2.353,51,0.007,52,0.007,73,1.464,74,0.909,83,1.079,114,1.442,119,0.75,258,1.433,259,2.064,260,2.472,261,1.464,262,1.748,268,1.269,283,3.282,291,1.66,327,2.49,369,3.115,372,2.36,386,1.521,396,2.024,398,1.787,401,2.361,409,1.72,410,2.825,412,1.215,416,1.265,417,0.988,429,2.626,440,1.281,448,1.537,456,2.977,553,2.223,559,2.024,563,2.977,591,1.865,621,3.893,627,3.662,628,2.382,631,3.662,637,1.614,638,0.949,667,3.588,683,2.573,757,3.165,760,2.024,769,3.333,770,3.471,771,2.49,775,2.024,776,2.024,850,1.865,914,1.733,946,3.27,964,2.024,966,2.223,974,4.276,975,3.893,980,3.27,981,3.27,992,2.223,996,1.518,998,1.518,999,1.518,1001,1.518,1002,1.356,1011,1.234,1012,2.024,1013,1.234,1014,1.356,1075,2.49,1189,1.518,1190,2.894,1191,2.894,1192,2.894,1193,2.894,1194,2.894,1195,2.894,1196,2.894,1197,2.894,1198,2.894,1199,2.894,1200,1.765,1201,2.894,1202,1.765,1203,2.894,1204,1.765,1205,2.894,1206,1.765,1207,2.49,1208,2.894,1209,1.765,1210,2.894,1211,1.765,1212,2.894,1213,1.765,1214,2.894,1215,1.765,1216,2.894,1217,1.765,1218,2.894,1219,1.765,1220,2.894,1221,1.765,1222,2.894,1223,1.765,1224,2.894,1225,5.566,1226,1.765,1227,2.894,1228,1.765,1229,2.894,1230,1.765,1231,2.894,1232,1.765,1233,1.765,1234,1.765,1235,6.412,1236,1.765,1237,2.49,1238,2.49,1239,2.49,1240,1.765,1241,1.765,1242,1.765,1243,1.765,1244,1.765,1245,1.765,1246,1.765,1247,1.765,1248,1.765,1249,1.765,1250,1.765,1251,1.765,1252,1.765,1253,1.765]],["title/injectables/TickedFactoryService.html",[0,1.406,323,1.835]],["body/injectables/TickedFactoryService.html",[0,1.458,2,1.414,3,0.11,4,0.11,5,0.096,8,0.248,9,0.95,10,2.388,12,1.206,17,1.29,19,1.527,20,0.019,21,0.812,22,0.476,23,1.457,25,1.561,26,3.53,27,0.513,29,0.379,32,1.512,33,1.767,37,1.414,38,1.327,39,0.11,40,0.32,41,1.455,42,2.632,44,2.226,49,2.236,51,0.009,52,0.009,73,0.869,74,0.624,83,1.048,111,1.146,114,1.637,119,0.996,122,1.044,258,1.097,259,1.884,260,2.433,268,1.758,274,3.95,280,2.689,283,3.175,291,1.884,323,1.903,332,3.4,369,3.43,401,1.181,409,2.176,412,2.184,417,1.414,429,2.865,440,1.702,502,3.95,523,1.25,563,2.689,591,2.478,638,1.26,664,2.478,683,3.255,769,3.783,770,3.755,850,2.478,868,2.953,914,3.53,966,2.953,974,4.852,975,4.418,978,3.307,980,2.953,981,3.575,1011,1.767,1012,2.689,1013,1.767,1014,1.94,1079,4.708,1080,3.307,1207,3.307,1237,2.173,1238,2.173,1239,2.173,1254,2.173,1255,3.844,1256,4.654,1257,3.844,1258,5.202,1259,3.844,1260,3.844,1261,2.526,1262,3.844,1263,2.526,1264,3.844,1265,3.844,1266,5.202,1267,2.526,1268,5.597,1269,2.526,1270,2.526,1271,3.844,1272,2.526,1273,2.526,1274,3.844,1275,2.526,1276,4.475,1277,3.844,1278,3.844,1279,2.526,1280,3.844,1281,3.844,1282,2.526,1283,2.526,1284,5.202,1285,2.526,1286,3.844,1287,2.526,1288,2.526,1289,2.526,1290,2.526,1291,2.526,1292,2.526,1293,2.526]],["title/interfaces/Ticket.html",[252,0.557,416,1.275]],["body/interfaces/Ticket.html",[3,0.211,4,0.211,5,0.185,8,0.479,20,0.018,21,0.582,22,0.606,27,0.447,39,0.287,51,0.014,52,0.014,68,0.962,83,1.012,252,0.993,254,1.599,258,1.678,398,2.048,409,3.478,416,2.088,448,2.57,523,2.414,531,3.143,637,2.752,638,1.599,670,3.411,671,3.747,672,3.411,673,3.411,674,3.411,675,3.747,676,3.747,677,4.839,678,5.315,679,3.872,680,4.839]],["title/interfaces/TokenMetadata.html",[252,0.557,263,1.733]],["body/interfaces/TokenMetadata.html",[3,0.21,4,0.21,5,0.184,8,0.476,20,0.018,21,0.578,22,0.412,34,2.539,39,0.322,51,0.014,52,0.014,61,1.219,68,0.958,74,1.198,83,1.072,248,2.08,252,1.116,253,2.828,254,1.589,255,2.398,256,2.546,257,2.546,258,1.628,259,1.966,260,1.667,261,2.267,262,1.589,263,3.228,264,3.627,265,3.082,266,2.546,267,2.546,268,1.445,269,2.546,270,2.266,271,2.546]],["title/interfaces/TokenUri.html",[252,0.557,265,1.733]],["body/interfaces/TokenUri.html",[3,0.207,4,0.207,5,0.181,8,0.469,20,0.018,21,0.57,22,0.51,34,2.515,39,0.321,51,0.014,52,0.014,61,1.211,68,0.949,74,1.18,83,1.081,248,2.06,252,1.112,253,2.801,254,1.565,255,2.363,256,2.508,257,2.508,258,1.619,259,1.952,260,1.642,261,2.252,262,1.565,263,3.061,264,2.508,265,3.21,266,3.607,267,3.607,268,1.424,269,2.508,270,2.232,271,2.508]],["title/modules/UserModule.html",[151,2.219,163,2.389]],["body/modules/UserModule.html",[3,0.185,4,0.185,5,0.161,20,0.019,27,0.695,29,0.639,39,0.185,40,0.539,51,0.013,52,0.013,119,1.103,121,1.901,122,1.511,130,1.814,132,1.814,153,2.106,154,2.924,160,3.919,163,4.825,164,3.333,165,2.548,166,2.548,168,3.587,170,3.333,172,3.333,173,4.275,174,2.743,175,2.548,176,3.269,190,2.382,194,3.893,195,2.976,204,3.893,205,2.976,208,3.269,210,3.587,211,2.548,212,4.275,214,2.236,233,2.976,234,3.661,235,2.976,236,3.661,341,4.275,342,3.269,349,4.275,350,3.269,351,4.275,544,2.976,607,2.976,745,4.788,746,3.661,748,3.333,749,3.661,810,3.661,1294,3.661,1295,3.661,1296,4.256,1297,4.256]],["title/injectables/WalletService.html",[0,1.406,14,1.556]],["body/injectables/WalletService.html",[0,2.135,2,2.423,3,0.188,4,0.188,5,0.164,8,0.425,9,1.391,10,2.307,14,2.363,17,1.352,20,0.019,22,0.479,23,1.391,25,1.546,26,3.965,27,0.516,29,0.65,37,2.423,38,2.275,39,0.188,40,0.549,42,2.245,44,2.151,49,2.372,51,0.013,52,0.013,68,0.892,291,1.679,410,3.5,412,1.818,440,1.917,591,2.791,611,5.405,638,1.845,914,4.435,946,3.326,949,4.842,992,4.324,1011,3.028,1012,3.028,1013,3.028,1298,3.725,1299,6.622,1300,6.622,1301,6.622,1302,4.33,1303,4.33,1304,5.629,1305,5.629,1306,4.842,1307,5.629,1308,4.33,1309,4.33,1310,4.33,1311,4.33,1312,4.33,1313,4.33,1314,4.33,1315,4.33,1316,4.33,1317,4.33,1318,4.33,1319,4.33]],["title/pipes/WeiToEthPipe.html",[701,2.389,1028,2.389]],["body/pipes/WeiToEthPipe.html",[3,0.214,4,0.214,5,0.187,9,1.219,17,1.007,19,1.278,20,0.018,21,0.793,22,0.419,23,1.219,25,1.511,27,0.56,29,0.741,39,0.214,40,0.625,49,1.87,51,0.014,52,0.014,61,0.912,83,1.034,268,1.471,291,1.823,334,2.071,429,2.183,448,2.691,450,3.94,480,2.441,637,2.827,638,2.004,701,3.94,703,3.788,712,5.259,1028,3.94,1320,5.259,1321,4.242,1322,6.113,1323,4.931,1324,6.113,1325,4.931]],["title/components/WhitelistComponent.html",[53,0.47,147,0.96]],["body/components/WhitelistComponent.html",[3,0.223,4,0.129,5,0.113,8,0.293,9,1.076,10,1.685,12,1.128,17,1.28,19,0.773,20,0.019,21,0.613,22,0.48,23,0.738,25,1.076,27,0.471,29,0.448,39,0.129,40,0.378,41,1.361,44,1.026,49,1.651,51,0.01,52,0.01,53,0.651,54,0.81,55,1.361,56,0.978,57,0.978,58,0.978,59,0.978,61,0.552,62,2.42,63,2.308,64,1.427,66,1.427,68,0.69,83,0.891,87,4.339,89,2.155,101,1.477,103,0.978,104,1.427,105,1.427,106,0.978,107,1.852,108,0.978,109,0.978,110,0.81,111,0.89,112,0.978,113,0.773,114,1.128,115,0.978,116,0.773,117,0.978,118,0.773,119,1.128,120,0.978,121,0.81,122,0.81,123,0.978,124,0.81,125,0.978,126,0.773,127,0.978,128,0.773,129,0.978,130,0.773,131,0.978,132,0.773,133,0.978,134,0.81,135,0.978,136,0.978,137,0.773,138,0.978,139,0.978,140,0.81,141,0.933,142,1.427,143,0.81,144,0.978,145,0.81,146,0.933,147,1.463,148,1.606,149,0.978,150,0.978,260,2.282,291,1.684,294,1.19,300,1.132,315,1.736,322,1.923,323,3.104,332,1.568,333,1.787,338,3.877,395,3.044,410,1.67,440,1.321,456,3.95,544,2.087,545,3.161,565,3.382,602,2.567,611,5.198,623,3.382,626,3.744,785,3.947,910,4.172,914,3.596,924,2.567,1079,4.613,1276,6.17,1306,4.859,1326,2.567,1327,5.138,1328,4.353,1329,5.138,1330,6.474,1331,5.648,1332,5.648,1333,4.353,1334,2.984,1335,2.984,1336,2.984,1337,2.984,1338,2.984,1339,2.984,1340,4.353,1341,4.353,1342,2.984,1343,5.138,1344,2.984,1345,2.984,1346,2.984,1347,2.984,1348,2.984,1349,2.984,1350,4.353,1351,4.353]],["title/coverage.html",[1352,4.365]],["body/coverage.html",[0,2.454,1,2.289,5,0.124,6,2.514,7,2.815,14,1.374,20,0.018,22,0.278,32,2.785,34,1.374,40,0.415,51,0.011,52,0.011,53,0.938,54,0.888,60,2.815,61,0.605,110,0.888,113,0.848,116,0.848,118,0.848,121,0.888,122,1.263,124,0.888,126,0.848,128,0.848,130,0.848,132,0.848,134,0.888,137,0.848,140,0.888,143,0.888,145,0.888,147,0.848,184,2.514,200,2.289,215,2.514,216,2.289,218,2.514,219,2.289,223,2.289,227,2.289,229,2.289,233,2.289,235,2.289,248,1.125,252,1.107,253,1.53,255,3.367,259,0.976,261,1.125,263,1.53,265,1.53,272,2.109,273,3.573,276,2.109,277,2.815,278,2.289,279,2.815,317,2.514,319,2.815,320,2.815,323,1.62,332,1.719,338,3.529,365,3.573,366,2.815,386,1.719,398,1.374,412,1.374,416,1.125,510,2.815,523,1.62,547,2.815,606,2.815,607,2.289,608,2.815,617,1.959,639,2.109,642,1.959,670,3.785,682,2.815,701,2.998,702,2.109,704,2.815,705,2.815,716,2.815,724,4.568,725,1.719,726,3.785,727,1.719,729,1.831,732,2.815,733,2.815,750,2.514,752,2.514,753,2.815,794,3.573,795,2.815,826,2.815,899,2.815,900,2.815,910,2.109,963,2.815,1016,2.815,1017,2.815,1028,2.109,1033,2.815,1034,3.573,1052,2.815,1110,2.815,1127,2.815,1189,2.815,1254,2.815,1298,2.815,1320,2.815,1321,2.815,1326,2.815,1352,2.815,1353,2.815,1354,3.272,1355,3.272,1356,4.651,1357,3.272,1358,3.272,1359,4.651,1360,4.651,1361,3.272,1362,3.272,1363,3.272,1364,3.272,1365,6.655,1366,5.412,1367,4.651,1368,3.272,1369,3.272,1370,3.272,1371,3.272,1372,3.272,1373,3.272,1374,3.272,1375,3.272,1376,3.272,1377,4.651,1378,4.651,1379,2.815,1380,3.272,1381,5.894,1382,6.92,1383,3.272,1384,3.272,1385,3.272,1386,3.272,1387,3.272,1388,3.272,1389,2.815,1390,4.651,1391,2.815,1392,3.272,1393,4.651,1394,4.651,1395,3.272,1396,3.272]],["title/dependencies.html",[154,2.344,1397,2.656]],["body/dependencies.html",[20,0.019,29,0.749,31,3.487,51,0.015,52,0.015,154,2.62,174,3.967,175,3.686,190,2.79,211,2.986,214,2.62,461,4.289,638,1.635,1398,4.986,1399,7.469,1400,4.986,1401,6.155,1402,4.986,1403,4.986,1404,4.986,1405,4.986,1406,4.986,1407,4.986,1408,4.986,1409,4.986,1410,4.986,1411,5.295,1412,4.986,1413,4.986,1414,4.289,1415,4.986,1416,4.986,1417,4.986,1418,4.986,1419,4.986,1420,4.986,1421,4.986,1422,4.986,1423,4.289,1424,4.289,1425,4.986,1426,4.986,1427,4.986,1428,4.986,1429,4.986,1430,4.986,1431,4.986,1432,4.986,1433,4.986,1434,4.986]],["title/index.html",[8,0.303,1435,3.088,1436,3.088]],["body/index.html",[20,0.016,51,0.016,52,0.016,84,4.278,454,3.335,505,4.278,1353,4.791,1411,5.661,1423,4.791,1424,5.661,1437,5.569,1438,5.569,1439,5.569,1440,5.569,1441,5.569,1442,6.581,1443,7.005,1444,5.569,1445,5.569,1446,5.569,1447,5.569,1448,5.569,1449,5.569,1450,5.569,1451,6.581,1452,5.569,1453,5.569,1454,6.581,1455,5.569,1456,5.569]],["title/modules.html",[153,2.512]],["body/modules.html",[20,0.016,51,0.016,52,0.016,152,3.935,153,2.784,160,3.148,161,3.626,162,3.626,163,3.626,175,4.434,748,3.369,1145,4.839,1457,7.405,1458,7.405,1459,7.504,1460,5.625]],["title/overview.html",[1461,4.365]],["body/overview.html",[2,2.164,14,2.483,20,0.018,40,0.49,51,0.012,52,0.012,54,1.891,55,1.209,110,1.605,113,1.532,116,1.532,118,1.532,121,1.605,124,1.605,126,1.532,128,1.532,130,1.532,132,1.532,134,1.605,137,1.532,140,1.605,143,1.605,145,1.605,147,1.532,152,5.349,153,1.914,154,2.743,155,3.326,156,3.326,157,3.326,158,3.326,159,3.326,160,3.701,161,4.719,162,4.873,163,4.719,164,3.127,165,2.315,166,2.315,213,2.704,254,1.267,317,2.97,336,3.326,337,3.326,401,2.442,702,4.49,703,2.97,739,3.326,741,3.326,748,4.242,1025,3.326,1026,3.326,1027,3.326,1028,4.49,1294,3.326,1295,3.326,1379,3.326,1461,3.326,1462,5.221,1463,3.866,1464,3.866,1465,3.866]],["title/properties.html",[68,0.707,1397,2.656]],["body/properties.html",[20,0.017,51,0.016,52,0.016,68,0.954,1414,5.178,1466,6.019]],["title/routes.html",[213,3.549]],["body/routes.html",[20,0.016,51,0.016,52,0.016,213,4.244]],["title/miscellaneous/variables.html",[1467,2.656,1468,3.838]],["body/miscellaneous/variables.html",[8,0.542,20,0.018,22,0.557,32,4.32,51,0.015,52,0.015,73,2.25,74,1.617,410,3.086,440,2.441,482,5.628,1389,4.744,1391,4.744,1467,4.744,1468,4.744,1469,5.514,1470,5.514,1471,6.542,1472,5.514,1473,5.514,1474,5.514,1475,5.514,1476,5.514,1477,5.514,1478,5.514]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":724,"title":{},"body":{"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1414,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.000000001",{"_index":691,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["0.11.4",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":953,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["0x0000000000000000000000000000000000000000",{"_index":870,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["0x2df7a6c36e8edeaaf59d09cb4230b660e0283e88",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0x9e12441b535419cc59b8f122bc26ebec1b06e719",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":401,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"overview.html":{}}}],["1.0.1",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["1.3.15",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1465,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["10.9.1",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":462,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["1000",{"_index":442,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{}}}],["100px",{"_index":492,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["10px",{"_index":315,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["12",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["14",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["14.2.0",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["14.2.4",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1105,"title":{},"body":{"components/SectorComponent.html":{}}}],["150px",{"_index":600,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["15px",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":1379,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16.0.3",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1463,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":467,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["2",{"_index":1464,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":721,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/MyConcertsComponent.html":{}}}],["22",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["220px",{"_index":493,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["25",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":491,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{}}}],["25px",{"_index":501,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MarketplaceComponent.html":{}}}],["28",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":957,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["3/15",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":360,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["30px",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["4.7.3",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["4/13",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":1022,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["41",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":661,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["5/12",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["5/17",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":310,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["500px",{"_index":602,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/WhitelistComponent.html":{}}}],["5px",{"_index":503,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/SectorComponent.html":{}}}],["6",{"_index":1462,"title":{},"body":{"overview.html":{}}}],["60",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["673ab7",{"_index":961,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["683ab72e",{"_index":958,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["683ab74e",{"_index":498,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["7.5.0",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["750px",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["77",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["8.4.4",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":437,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{}}}],["8594",{"_index":540,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["8595",{"_index":455,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["9990",{"_index":955,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["_image",{"_index":433,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["_nft",{"_index":806,"title":{},"body":{"components/MyNftComponent.html":{}}}],["absolute",{"_index":793,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["access",{"_index":1349,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["accessors",{"_index":1061,"title":{},"body":{"components/SectorComponent.html":{}}}],["account",{"_index":946,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{}}}],["account_balance_wallet",{"_index":948,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["account_circle",{"_index":947,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["accounts",{"_index":1299,"title":{},"body":{"injectables/WalletService.html":{}}}],["accounts[0",{"_index":1318,"title":{},"body":{"injectables/WalletService.html":{}}}],["achtung",{"_index":603,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["activatedroute",{"_index":385,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["activatedroutesnapshot",{"_index":326,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["activelink",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["add",{"_index":559,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["address",{"_index":260,"title":{},"body":{"interfaces/Attribute.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"components/WhitelistComponent.html":{}}}],["adds",{"_index":1068,"title":{},"body":{"components/SectorComponent.html":{}}}],["addsector",{"_index":1055,"title":{},"body":{"components/SectorComponent.html":{}}}],["addsectors",{"_index":553,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["addsectors(address",{"_index":1201,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["addsectors(sectors",{"_index":557,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{}}}],["admin",{"_index":916,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["alchemyapi",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alchemyapiservice",{"_index":1,"title":{"injectables/AlchemyApiService.html":{}},"body":{"injectables/AlchemyApiService.html":{},"components/MyNftComponent.html":{},"coverage.html":{}}}],["align",{"_index":466,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["alltickets",{"_index":1143,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["already",{"_index":929,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/StandardTicketComponent.html":{}}}],["amount",{"_index":372,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["amount.mul(0.000000001",{"_index":692,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["amount.mul(1000000000",{"_index":695,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["amount.mul(1000000000000000000",{"_index":699,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["angular",{"_index":1453,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":28,"title":{},"body":{"injectables/AlchemyApiService.html":{},"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"components/CreateConcertComponent.html":{},"modules/MarketplaceModule.html":{},"components/SectorComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/card",{"_index":350,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/checkbox",{"_index":346,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/core",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/ConcertManagementModule.html":{}}}],["angular/material/datepicker",{"_index":344,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/dialog",{"_index":302,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyNftComponent.html":{}}}],["angular/material/form",{"_index":746,"title":{},"body":{"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/input",{"_index":342,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/menu",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":348,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/snack",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"injectables/SnackbarService.html":{}}}],["angular/material/stepper",{"_index":353,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/tabs",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{}}}],["angular/platform",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"modules/MarketplaceModule.html":{},"components/NavigationBarComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["api.service",{"_index":809,"title":{},"body":{"components/MyNftComponent.html":{}}}],["api.service.ts",{"_index":7,"title":{},"body":{"injectables/AlchemyApiService.html":{},"coverage.html":{}}}],["api.service.ts:11",{"_index":18,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["api.service.ts:18",{"_index":24,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["app",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["app.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":54,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":586,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["appmodule",{"_index":152,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":1156,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["approutingmodule",{"_index":160,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":631,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["approve",{"_index":657,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["approved",{"_index":627,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["approvemarketplace",{"_index":613,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["approves",{"_index":620,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["arguments",{"_index":1341,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["artifacts/contracts/nftmarketplace.sol/nftmarketplace.json",{"_index":994,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["artifacts/contracts/ticked1155.sol/ticked1155.json",{"_index":1234,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["artifacts/contracts/tickedfactory.sol/tickedfactory.json",{"_index":1283,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["async",{"_index":10,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["attr.value",{"_index":821,"title":{},"body":{"components/MyNftComponent.html":{}}}],["attribute",{"_index":253,"title":{"interfaces/Attribute.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["attributes",{"_index":269,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["audience",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["audiencedialogdata",{"_index":272,"title":{"interfaces/AudienceDialogData.html":{}},"body":{"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"coverage.html":{}}}],["audiencelayoutcomponent",{"_index":110,"title":{"components/AudienceLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authorganizatorguard",{"_index":229,"title":{"guards/AuthOrganizatorGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthOrganizatorGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":931,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["authorize",{"_index":1264,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["authorizeaccess",{"_index":1255,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["authorizeaccess(address",{"_index":1262,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["authorized",{"_index":936,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["auto",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MarketplaceComponent.html":{},"components/NavigationBarComponent.html":{}}}],["availabilty",{"_index":1142,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["available",{"_index":1145,"title":{},"body":{"components/StandardTicketComponent.html":{},"modules.html":{}}}],["availabletickets",{"_index":1150,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["availabletokenids",{"_index":676,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["await",{"_index":44,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["back",{"_index":587,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["background",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{}}}],["balance",{"_index":270,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["bar",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"components/NavigationBarComponent.html":{},"injectables/SnackbarService.html":{}}}],["bar'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["bar.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":902,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.scss",{"_index":901,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts",{"_index":900,"title":{},"body":{"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:107",{"_index":923,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:12",{"_index":911,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:25",{"_index":912,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:36",{"_index":918,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:54",{"_index":920,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:72",{"_index":915,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:89",{"_index":919,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:98",{"_index":921,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar/navigation",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":565,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["beta.34",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1162,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["bignumber",{"_index":637,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"pipes/WeiToEthPipe.html":{}}}],["bignumber.from(0",{"_index":852,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["block",{"_index":309,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["boolean",{"_index":409,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{}}}],["bootstrap",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":499,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MarketplaceComponent.html":{}}}],["bottom",{"_index":316,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/FooterComponent.html":{},"components/SectorComponent.html":{}}}],["box",{"_index":471,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["browse",{"_index":1459,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["btn",{"_index":314,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["button",{"_index":485,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/SectorComponent.html":{}}}],["buy",{"_index":667,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["buying",{"_index":1043,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["buyticket",{"_index":964,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["buyticket(address",{"_index":1203,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["buyticket(concertaddr",{"_index":972,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["buyticket(owner",{"_index":1041,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["buyticket(tokenid",{"_index":1133,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["bysigner",{"_index":980,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["calculate",{"_index":1141,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["calls",{"_index":1163,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["canactivate",{"_index":321,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["canactivate(route",{"_index":325,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["canactivate:[authorganizatorguard",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":668,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["capacity",{"_index":445,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["card",{"_index":508,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["catch(e",{"_index":998,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["center",{"_index":362,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["chain",{"_index":1158,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["change",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/MyConcertsComponent.html":{},"components/WhitelistComponent.html":{}}}],["changed",{"_index":595,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["changedate",{"_index":758,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["changedate(concertaddress",{"_index":765,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["changepermissions",{"_index":1331,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["changes",{"_index":395,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["changes['sector'].currentvalue.availabletokenids",{"_index":1152,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["changes['sector'].currentvalue.name",{"_index":1154,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["charged",{"_index":663,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["check",{"_index":456,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"injectables/Ticked1155Service.html":{},"components/WhitelistComponent.html":{}}}],["check_circle_outline",{"_index":1187,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["checkaddress",{"_index":1329,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["checkpermissions",{"_index":1332,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["checks",{"_index":626,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/WhitelistComponent.html":{}}}],["children",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choose",{"_index":1350,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["chosen",{"_index":397,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["class",{"_index":40,"title":{"classes/EtherUnitConverter.html":{}},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":681,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["click",{"_index":536,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["close",{"_index":286,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSellComponent.html":{},"injectables/SnackbarService.html":{}}}],["closes",{"_index":292,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["cluster_appmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_concertmanagementmodule",{"_index":336,"title":{},"body":{"modules/ConcertManagementModule.html":{},"overview.html":{}}}],["cluster_concertmanagementmodule_declarations",{"_index":337,"title":{},"body":{"modules/ConcertManagementModule.html":{},"overview.html":{}}}],["cluster_marketplacemodule",{"_index":739,"title":{},"body":{"modules/MarketplaceModule.html":{},"overview.html":{}}}],["cluster_marketplacemodule_declarations",{"_index":741,"title":{},"body":{"modules/MarketplaceModule.html":{},"overview.html":{}}}],["cluster_marketplacemodule_imports",{"_index":740,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["cluster_pipesmodule",{"_index":1025,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1027,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1026,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1294,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1295,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1296,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":1169,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["collection",{"_index":646,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["color",{"_index":487,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{}}}],["commoninf",{"_index":550,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["commonmodule",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["comp",{"_index":1081,"title":{},"body":{"components/SectorComponent.html":{}}}],["comp/marketplace.component",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{}}}],["comp/marketplace.component.ts",{"_index":733,"title":{},"body":{"components/MarketplaceComponent.html":{},"coverage.html":{}}}],["comp/marketplace.component.ts:8",{"_index":736,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["compodoc",{"_index":1454,"title":{},"body":{"index.html":{}}}],["component",{"_index":53,"title":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["components",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"overview.html":{}}}],["components/concert",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/footer/footer.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["components/marketplace/concert",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/marketplace/marketplace",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/marketplace/marketplace.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navigation",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["components/page",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/user/my",{"_index":232,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/user/user.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["concert",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["concert'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["concert.component",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{}}}],["concert.component.html",{"_index":549,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.scss",{"_index":548,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts",{"_index":547,"title":{},"body":{"components/CreateConcertComponent.html":{},"coverage.html":{}}}],["concert.component.ts:12",{"_index":574,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:14",{"_index":573,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:19",{"_index":556,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:27",{"_index":568,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:30",{"_index":575,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:36",{"_index":561,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:51",{"_index":558,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.contractaddress",{"_index":535,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{}}}],["concert.model",{"_index":728,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/SellerOffer.html":{}}}],["concert.name",{"_index":534,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{}}}],["concert.name.tolocalelowercase().includes(searchtext",{"_index":715,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["concert/create",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"components/CreateConcertComponent.html":{},"coverage.html":{}}}],["concert:hover",{"_index":543,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["concertaddr",{"_index":730,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/SellerOffer.html":{}}}],["concertaddress",{"_index":373,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["concertdate",{"_index":374,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["concertdescription",{"_index":375,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["concertimage",{"_index":572,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concertmanagementmodule",{"_index":161,"title":{"modules/ConcertManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["concertname",{"_index":376,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["concertorg",{"_index":513,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["concerts",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["concerts'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["concerts.component",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{}}}],["concerts.component.html",{"_index":755,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.scss",{"_index":754,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts",{"_index":753,"title":{},"body":{"components/MyConcertsComponent.html":{},"coverage.html":{}}}],["concerts.component.ts:12",{"_index":761,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:20",{"_index":777,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:21",{"_index":778,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:23",{"_index":772,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:34",{"_index":768,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:45",{"_index":762,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:55",{"_index":774,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:65",{"_index":766,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.filter((concert",{"_index":714,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["concerts.pipe",{"_index":1032,"title":{},"body":{"modules/PipesModule.html":{}}}],["concerts.pipe.ts",{"_index":705,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"coverage.html":{}}}],["concerts.pipe.ts:17",{"_index":708,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["concerts/my",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"components/MyConcertsComponent.html":{},"coverage.html":{}}}],["concertsectors",{"_index":551,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concertsectorscomponent",{"_index":113,"title":{"components/ConcertSectorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["concertsellcomponent",{"_index":116,"title":{"components/ConcertSellComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirm",{"_index":665,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{}}}],["confirmsectors",{"_index":1056,"title":{},"body":{"components/SectorComponent.html":{}}}],["connect",{"_index":949,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/WalletService.html":{}}}],["connected",{"_index":930,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["connects",{"_index":913,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["connectwallet",{"_index":903,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["console.log(e.error.message",{"_index":999,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["const",{"_index":42,"title":{},"body":{"injectables/AlchemyApiService.html":{},"modules/AppRoutingModule.html":{},"components/ConcertSectorsComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["constructor(alchemyapiservice",{"_index":799,"title":{},"body":{"components/MyNftComponent.html":{}}}],["constructor(dialogref",{"_index":287,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["constructor(formbuilder",{"_index":1062,"title":{},"body":{"components/SectorComponent.html":{}}}],["constructor(nftmarketplaceservice",{"_index":835,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["constructor(route",{"_index":384,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["constructor(snackbar",{"_index":1113,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["constructor(ticked1155service",{"_index":1131,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["constructor(tickedfactoryservice",{"_index":322,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/WhitelistComponent.html":{}}}],["constructor(walletservice",{"_index":13,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["contain",{"_index":1177,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["container",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{}}}],["contains",{"_index":660,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["content",{"_index":477,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["contract",{"_index":259,"title":{"interfaces/Contract.html":{}},"body":{"interfaces/Attribute.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["contract['addsectors'](sectors",{"_index":1240,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['balance",{"_index":1010,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['buyticket'](concertaddr",{"_index":1000,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['buyticket'](tokenid",{"_index":1241,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['createandminttickets",{"_index":1236,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['createevent",{"_index":1287,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['date",{"_index":1247,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['deleteoffer'](concertaddr",{"_index":1003,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['description",{"_index":1246,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['getdepcontracts'](address",{"_index":1291,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['getlistedticket'](concertaddr",{"_index":1009,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['getoffersbyseller",{"_index":1008,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['getorganizers",{"_index":1290,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['getsectors",{"_index":1248,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['getsellerids'](concertaddr",{"_index":1007,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['getsoldtokenids'](sector",{"_index":1249,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['image",{"_index":1244,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['insertoffer'](concertaddr",{"_index":1005,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['isapprovedforall'](account",{"_index":1243,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['name",{"_index":1245,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['owner",{"_index":1288,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['setapprovalforall'](operator",{"_index":1252,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['setdate'](newdate",{"_index":1251,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['setorganizatorpermission'](address",{"_index":1289,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['ticketattr'](tokenid",{"_index":1250,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['updateoffer'](concertaddr",{"_index":1004,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['whitelist'](address",{"_index":1285,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['withdraw'](this.walletservice.getwalletaddress",{"_index":997,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['withdraworgcredits'](this.walletservice.getwalletaddress",{"_index":1242,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contractaddress",{"_index":531,"title":{},"body":{"components/ConcertSellComponent.html":{},"interfaces/DepConcert.html":{},"components/MyConcertsComponent.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["contractnftmarketplaceaddress",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contractsaddress",{"_index":552,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["contracttickedfactoryaddress",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converts",{"_index":1324,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["correct",{"_index":594,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["corrently",{"_index":1307,"title":{},"body":{"injectables/WalletService.html":{}}}],["cover",{"_index":484,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["coverage",{"_index":1352,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{}}}],["createandminttickets",{"_index":1190,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["createandminttickets(address",{"_index":1205,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["createconcert",{"_index":554,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["createconcertcomponent",{"_index":118,"title":{"components/CreateConcertComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createconcertcontract",{"_index":1256,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["createconcertcontract(name",{"_index":1267,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["createconcertform",{"_index":1058,"title":{},"body":{"components/SectorComponent.html":{}}}],["createoffer",{"_index":614,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["createofferdialogcomponent",{"_index":121,"title":{"components/CreateOfferDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createofferdialogdata",{"_index":276,"title":{"interfaces/CreateOfferDialogData.html":{}},"body":{"interfaces/AudienceDialogData.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"coverage.html":{}}}],["creates",{"_index":562,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/SectorComponent.html":{}}}],["current",{"_index":848,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currentlisting",{"_index":845,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currentlisting.seller",{"_index":878,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currentlisting.tokenid",{"_index":877,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currently",{"_index":396,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["custom",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["dapp",{"_index":1437,"title":{},"body":{"index.html":{}}}],["data",{"_index":284,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"components/SectorComponent.html":{}}}],["data.nft",{"_index":645,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["date",{"_index":502,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["date(stringtime!)).gettime",{"_index":580,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["date(this.newdate!)).gettime",{"_index":787,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["date:'medium",{"_index":443,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["date:\\'medium",{"_index":509,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["declarations",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["decoration",{"_index":496,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["decorators",{"_index":295,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["deep",{"_index":506,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["delete",{"_index":840,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{}}}],["delete_forever",{"_index":1103,"title":{},"body":{"components/SectorComponent.html":{}}}],["deleteoffer",{"_index":832,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["deleteoffer(concertaddr",{"_index":837,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["deletes",{"_index":839,"title":{},"body":{"components/MyOffersComponent.html":{},"components/SectorComponent.html":{}}}],["deletesector",{"_index":1057,"title":{},"body":{"components/SectorComponent.html":{}}}],["deletesector(sectorindex",{"_index":1070,"title":{},"body":{"components/SectorComponent.html":{}}}],["deleting",{"_index":1167,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["depconcert",{"_index":523,"title":{"interfaces/DepConcert.html":{}},"body":{"components/ConcertSellComponent.html":{},"interfaces/DepConcert.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"interfaces/Sector.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["dependencies",{"_index":154,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployedconcerts",{"_index":756,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["deprecated",{"_index":1155,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["desc",{"_index":1268,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["description",{"_index":268,"title":{},"body":{"interfaces/Attribute.html":{},"components/ConcertSectorsComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{}}}],["details",{"_index":494,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{}}}],["dev",{"_index":1445,"title":{},"body":{"index.html":{}}}],["development",{"_index":1441,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":293,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["dialog'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["dialog.component",{"_index":810,"title":{},"body":{"components/MyNftComponent.html":{},"modules/UserModule.html":{}}}],["dialog.component.html",{"_index":610,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.scss",{"_index":609,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts",{"_index":608,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:19",{"_index":635,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":636,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":632,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":618,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":634,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":633,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":624,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":619,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":629,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":622,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:85",{"_index":625,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog/create",{"_index":607,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":285,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["direction",{"_index":895,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["directive",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["directives",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["display",{"_index":308,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["display_type",{"_index":256,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["displays",{"_index":1119,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["docgen",{"_index":1424,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["documentation",{"_index":1353,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["domsanitizer",{"_index":303,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["don't",{"_index":1347,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["dotenv",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["duration",{"_index":359,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["dynamic",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":867,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{}}}],["edit",{"_index":892,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["editing",{"_index":843,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["element",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["encapsulation",{"_index":367,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["environment",{"_index":32,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/TickedFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.alchemyapi",{"_index":47,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["environment.contractnftmarketplaceaddress",{"_index":650,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["environment.contracttickedfactoryaddress",{"_index":1292,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["error",{"_index":1111,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["error(message",{"_index":1117,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["eth",{"_index":451,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["eth.pipe",{"_index":1030,"title":{},"body":{"modules/PipesModule.html":{}}}],["eth.pipe.ts",{"_index":1321,"title":{},"body":{"pipes/WeiToEthPipe.html":{},"coverage.html":{}}}],["eth.pipe.ts:16",{"_index":1323,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["eth_requestaccounts",{"_index":1314,"title":{},"body":{"injectables/WalletService.html":{}}}],["ether",{"_index":698,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethers",{"_index":638,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"dependencies.html":{}}}],["ethers.contract",{"_index":1014,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["ethers.providers.web3provider(window.ethereum",{"_index":1011,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["ethers.utils.formatether(amount",{"_index":693,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethers.utils.formatether(price",{"_index":1325,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["ethers.utils.parseunits((price.mul(amount)).tostring",{"_index":1001,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["ethers.utils.parseunits(amount.tostring",{"_index":697,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethertogwei(amount",{"_index":700,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethertowei",{"_index":684,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethertowei(amount",{"_index":686,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["etherunitconverter",{"_index":642,"title":{"classes/EtherUnitConverter.html":{}},"body":{"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{},"coverage.html":{}}}],["etherunitconverter.ethertowei(this.price",{"_index":655,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["event",{"_index":792,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["eventemitter",{"_index":1065,"title":{},"body":{"components/SectorComponent.html":{}}}],["events",{"_index":1439,"title":{},"body":{"index.html":{}}}],["everyone",{"_index":666,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["except",{"_index":597,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["execution",{"_index":1170,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["export",{"_index":39,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["exports",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PipesModule.html":{}}}],["factory",{"_index":1281,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service",{"_index":333,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"components/WhitelistComponent.html":{}}}],["factory.service.ts",{"_index":1254,"title":{},"body":{"injectables/TickedFactoryService.html":{},"coverage.html":{}}}],["factory.service.ts:11",{"_index":1261,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:21",{"_index":1263,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:36",{"_index":1269,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:53",{"_index":1279,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:65",{"_index":1275,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:70",{"_index":1273,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:75",{"_index":1272,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:80",{"_index":1270,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["false",{"_index":440,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":662,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["fff",{"_index":468,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["field",{"_index":544,"title":{},"body":{"components/ConcertSellComponent.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["filter",{"_index":1031,"title":{},"body":{"modules/PipesModule.html":{}}}],["filterconcerts",{"_index":706,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["filterconcertspipe",{"_index":702,"title":{"pipes/FilterConcertsPipe.html":{}},"body":{"pipes/FilterConcertsPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["filtered",{"_index":711,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["filters",{"_index":709,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["find",{"_index":789,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["fires",{"_index":769,"title":{},"body":{"components/MyConcertsComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["fit",{"_index":483,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["fixed",{"_index":723,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["flex",{"_index":474,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["flexbox",{"_index":473,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["float",{"_index":495,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{}}}],["font",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["footer",{"_index":717,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["footer.component.html",{"_index":719,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":718,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":124,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":862,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["form",{"_index":545,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["formarray",{"_index":1078,"title":{},"body":{"components/SectorComponent.html":{}}}],["formbuilder",{"_index":555,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["forms",{"_index":567,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{}}}],["formsmodule",{"_index":351,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":1018,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["found.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1020,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1019,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1017,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:8",{"_index":1021,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":1159,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["full",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["function",{"_index":291,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["future",{"_index":596,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["gap",{"_index":542,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["gateway",{"_index":267,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["getbalance",{"_index":965,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getcontract",{"_index":966,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["getcontract(address",{"_index":1208,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getcontract(bysigner",{"_index":978,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/TickedFactoryService.html":{}}}],["getdate",{"_index":1191,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getdate(address",{"_index":1210,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getdepcontracts",{"_index":1257,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["getdepcontracts(address",{"_index":1271,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["getdescription",{"_index":1192,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getdescription(address",{"_index":1212,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getimage",{"_index":1193,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getimage(address",{"_index":1214,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getlistedticket",{"_index":967,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getlistedticket(concertaddr",{"_index":982,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getlistedticket(offer.concertaddr",{"_index":864,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["getlistedticket(this.concertaddress",{"_index":1049,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["getname",{"_index":1194,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getname(address",{"_index":1216,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getnfts/?owner",{"_index":48,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["getoffersbyseller",{"_index":968,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getorganizers",{"_index":1258,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["getsectors",{"_index":1075,"title":{},"body":{"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["getsectors(address",{"_index":1218,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getsectorsoldids",{"_index":1195,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getsectorsoldids(address",{"_index":1220,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getsellerids",{"_index":969,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getsellerids(concertaddr",{"_index":985,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getticketattr",{"_index":1196,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getticketattr(address",{"_index":1222,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getting",{"_index":1435,"title":{"index.html":{}},"body":{}}],["getusernfts",{"_index":11,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["getwalletaddress",{"_index":1300,"title":{},"body":{"injectables/WalletService.html":{}}}],["goerli.g.alchemy.com/v2/9xmq5x8fqjewnnufjsxkhh5tmlncnstg",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gotoadminpanel",{"_index":904,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotoconcert",{"_index":515,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["gotoconcert(concertaddress",{"_index":518,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["gotoconcertform",{"_index":905,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomarketplace",{"_index":906,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomyconcerts",{"_index":907,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomynfts",{"_index":908,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomyoffers",{"_index":909,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["grant",{"_index":1343,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["granted",{"_index":1265,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["graph",{"_index":1460,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":488,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["grow",{"_index":956,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["guard",{"_index":317,"title":{"guards/AuthOrganizatorGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":318,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["gweitoether(amount",{"_index":696,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["gweitowei(amount",{"_index":694,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["h2",{"_index":1023,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["h3",{"_index":1024,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["hardhat",{"_index":1411,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["header",{"_index":504,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["height",{"_index":463,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["here",{"_index":537,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{}}}],["highlight_off",{"_index":1186,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["home",{"_index":944,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["horizontalposition",{"_index":361,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["html",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["http",{"_index":15,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["http://localhost:4200",{"_index":1447,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":16,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["httpclientmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["https://eth",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":261,"title":{"interfaces/Id.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["id's",{"_index":1166,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["id.tonumber",{"_index":1180,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["identifier",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1172,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["if(authorization",{"_index":932,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["if(changes['sector'].currentvalue",{"_index":1148,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["if(islogged",{"_index":927,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["if(isowner",{"_index":939,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["if(sector.isnumerable",{"_index":1095,"title":{},"body":{"components/SectorComponent.html":{}}}],["if(this.checkaddress",{"_index":1345,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["if(this.newdate",{"_index":784,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["if(this.permission",{"_index":1338,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["if(this.sellerticketsmap.has(offer.concertaddr",{"_index":871,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["if(ticket.listing.seller",{"_index":869,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["if(window.ethereum",{"_index":1310,"title":{},"body":{"injectables/WalletService.html":{}}}],["image",{"_index":274,"title":{},"body":{"interfaces/AudienceDialogData.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"injectables/TickedFactoryService.html":{}}}],["img",{"_index":307,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{}}}],["implements",{"_index":334,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"pipes/WeiToEthPipe.html":{}}}],["import",{"_index":27,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["important",{"_index":313,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["info(message",{"_index":1121,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["information",{"_index":564,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["informations",{"_index":560,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyNftComponent.html":{}}}],["inject",{"_index":299,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":296,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AlchemyApiService.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AlchemyApiService.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["inner",{"_index":1109,"title":{},"body":{"components/SectorComponent.html":{}}}],["input",{"_index":623,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["input.input",{"_index":1106,"title":{},"body":{"components/SectorComponent.html":{}}}],["inputs",{"_index":1038,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["insert",{"_index":989,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["insertoffer",{"_index":970,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["insertoffer(concertaddr",{"_index":987,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["interacts",{"_index":974,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["interface",{"_index":252,"title":{"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"overview.html":{}}}],["isapprovedforall",{"_index":1197,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["isapprovedforall(address",{"_index":1224,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["islogged",{"_index":925,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["ismarketplaceapproved",{"_index":612,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["isnumerable",{"_index":672,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["isnumerablestring",{"_index":1090,"title":{},"body":{"components/SectorComponent.html":{}}}],["isowner",{"_index":937,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["it's",{"_index":1161,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["items",{"_index":478,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["iterate",{"_index":1164,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["justify",{"_index":476,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["layout",{"_index":280,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["layout'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["layout.component",{"_index":418,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"modules/MarketplaceModule.html":{}}}],["layout.component.html",{"_index":282,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.scss",{"_index":281,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts",{"_index":279,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:11",{"_index":289,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts:14",{"_index":298,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts:15",{"_index":297,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts:21",{"_index":290,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout/audience",{"_index":278,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"modules/MarketplaceModule.html":{},"coverage.html":{}}}],["left",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{}}}],["legend",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["library_add",{"_index":942,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["link",{"_index":737,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["links",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":764,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{}}}],["listedticket",{"_index":725,"title":{"interfaces/ListedTicket.html":{}},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["listelem.listing.amount",{"_index":891,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.listing.price",{"_index":887,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.listing.seller",{"_index":890,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.ticket.seatnumber",{"_index":894,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.ticket.sectorname",{"_index":884,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listing",{"_index":727,"title":{"interfaces/Listing.html":{}},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["local_offer",{"_index":950,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["lock",{"_index":943,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["log",{"_index":952,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["logged",{"_index":992,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{}}}],["login",{"_index":1301,"title":{},"body":{"injectables/WalletService.html":{}}}],["make",{"_index":589,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/StandardTicketComponent.html":{}}}],["management",{"_index":941,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["management.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["management.module.ts",{"_index":339,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["management/concert",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{}}}],["management/create",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateConcertComponent.html":{},"coverage.html":{}}}],["management/my",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyConcertsComponent.html":{},"coverage.html":{}}}],["management/sector/sector.component.ts",{"_index":1052,"title":{},"body":{"components/SectorComponent.html":{},"coverage.html":{}}}],["management/sector/sector.component.ts:13",{"_index":1064,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:15",{"_index":1066,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:17",{"_index":1074,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:19",{"_index":1063,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:25",{"_index":1076,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:32",{"_index":1067,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:48",{"_index":1071,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:56",{"_index":1069,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/whitelist/whitelist.component",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management/whitelist/whitelist.component.ts",{"_index":1326,"title":{},"body":{"components/WhitelistComponent.html":{},"coverage.html":{}}}],["management/whitelist/whitelist.component.ts:12",{"_index":1336,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:13",{"_index":1337,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:14",{"_index":1333,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:25",{"_index":1334,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:37",{"_index":1335,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["map",{"_index":411,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["margin",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["marketplace",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateOfferDialogComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/NavigationBarComponent.html":{}}}],["marketplace'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["marketplace.component.html",{"_index":735,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["marketplace.component.scss",{"_index":734,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["marketplace.service",{"_index":640,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["marketplace.service.ts",{"_index":963,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"coverage.html":{}}}],["marketplace.service.ts:101",{"_index":983,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:106",{"_index":977,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:113",{"_index":979,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:12",{"_index":971,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:22",{"_index":991,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:41",{"_index":973,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:60",{"_index":976,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:72",{"_index":990,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:84",{"_index":988,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:89",{"_index":986,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:94",{"_index":984,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace/sell",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavigationBarComponent.html":{}}}],["marketplace:hover",{"_index":960,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["marketplacecomponent",{"_index":126,"title":{"components/MarketplaceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marketplacemodule",{"_index":162,"title":{"modules/MarketplaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarketplaceModule.html":{},"modules.html":{},"overview.html":{}}}],["martketplace",{"_index":882,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["mat",{"_index":507,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["mat_dialog_data",{"_index":301,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":356,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matbuttonmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matcardmodule",{"_index":349,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matcheckboxmodule",{"_index":345,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matching",{"_index":52,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":343,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matdialog",{"_index":387,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["matdialogmodule",{"_index":747,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["matdialogref",{"_index":288,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["matformfieldmodule",{"_index":745,"title":{},"body":{"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["maticonmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matinputmodule",{"_index":341,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matmenumodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":340,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matselectmodule",{"_index":347,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matsnackbar",{"_index":1114,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":352,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["mattabsmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{}}}],["max",{"_index":601,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["maxheight",{"_index":436,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["maxwidth",{"_index":438,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["medium",{"_index":604,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["message",{"_index":1120,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["metadata",{"_index":61,"title":{"interfaces/Metadata.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"components/MarketplaceComponent.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["metamask",{"_index":1305,"title":{},"body":{"injectables/WalletService.html":{}}}],["metamask/providers",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1313,"title":{},"body":{"injectables/WalletService.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["mf",{"_index":722,"title":{},"body":{"components/FooterComponent.html":{}}}],["migrate",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["min",{"_index":599,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["mint",{"_index":771,"title":{},"body":{"components/MyConcertsComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["minted",{"_index":679,"title":{},"body":{"interfaces/DepConcert.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"interfaces/Ticket.html":{}}}],["mintedbyorg",{"_index":675,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["mintnow",{"_index":1084,"title":{},"body":{"components/SectorComponent.html":{}}}],["mintnowstring",{"_index":1096,"title":{},"body":{"components/SectorComponent.html":{}}}],["minttickets",{"_index":759,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["minttickets(contractaddress",{"_index":767,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["miscellaneous",{"_index":1467,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mocha",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["module",{"_index":151,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}},"body":{}}],["modules",{"_index":153,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":776,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["more",{"_index":539,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ms",{"_index":472,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["myconcertscomponent",{"_index":128,"title":{"components/MyConcertsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mynftcomponent",{"_index":130,"title":{"components/MyNftComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["myofferscomponent",{"_index":132,"title":{"components/MyOffersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":21,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"interfaces/Attribute.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"components/MarketplaceComponent.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["name:string",{"_index":671,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["nav",{"_index":738,"title":{},"body":{"components/MarketplaceComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["navigate",{"_index":1446,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["navigationbarcomponent",{"_index":134,"title":{"components/NavigationBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationdetails",{"_index":933,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["new",{"_index":412,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["newdate",{"_index":757,"title":{},"body":{"components/MyConcertsComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["newdateunix",{"_index":786,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["newlisting",{"_index":876,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["next",{"_index":489,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["nft",{"_index":248,"title":{"interfaces/NFT.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["nft's",{"_index":814,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["nft.balance",{"_index":820,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UserModule.html":{}}}],["nft.component.html",{"_index":797,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.scss",{"_index":796,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts",{"_index":795,"title":{},"body":{"components/MyNftComponent.html":{},"coverage.html":{}}}],["nft.component.ts:16",{"_index":807,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts:17",{"_index":800,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts:25",{"_index":801,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts:33",{"_index":803,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.contract.address",{"_index":817,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.id.tokenid",{"_index":818,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.id.tokenmetadata.tokentype",{"_index":819,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.metadata.description",{"_index":816,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.metadata.name",{"_index":815,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.model",{"_index":275,"title":{},"body":{"interfaces/AudienceDialogData.html":{},"interfaces/CreateOfferDialogData.html":{}}}],["nft/my",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyNftComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["nft:hover",{"_index":824,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft\\'s",{"_index":825,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nftmarketplace",{"_index":993,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nftmarketplace.abi",{"_index":1015,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nftmarketplaceservice",{"_index":617,"title":{"injectables/NftMarketplaceService.html":{}},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["nftmarketplaceservice.getcontract",{"_index":1006,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nftmarketplaceservice.getcontract(true",{"_index":995,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nfts",{"_index":922,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["nfts.ownednfts.length",{"_index":813,"title":{},"body":{"components/MyNftComponent.html":{}}}],["ng",{"_index":505,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["ngonchanges",{"_index":1129,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ngonchanges(changes",{"_index":1136,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ngoninit",{"_index":380,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["node",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":497,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/SectorComponent.html":{}}}],["npm",{"_index":1455,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1451,"title":{},"body":{"index.html":{}}}],["number",{"_index":258,"title":{},"body":{"interfaces/Attribute.html":{},"components/ConcertSectorsComponent.html":{},"interfaces/Contract.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["numberable",{"_index":1102,"title":{},"body":{"components/SectorComponent.html":{}}}],["numbers",{"_index":1104,"title":{},"body":{"components/SectorComponent.html":{}}}],["numerable",{"_index":886,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["numerated",{"_index":822,"title":{},"body":{"components/MyNftComponent.html":{}}}],["object",{"_index":482,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":30,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/MyNftComponent.html":{}}}],["offer",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["offer.sellerid",{"_index":865,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{}}}],["offers'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["offers.component",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UserModule.html":{}}}],["offers.component.html",{"_index":828,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.scss",{"_index":827,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts",{"_index":826,"title":{},"body":{"components/MyOffersComponent.html":{},"coverage.html":{}}}],["offers.component.ts:14",{"_index":853,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:15",{"_index":855,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:17",{"_index":856,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:19",{"_index":854,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:20",{"_index":851,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:21",{"_index":836,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:27",{"_index":841,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:52",{"_index":842,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:63",{"_index":846,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:80",{"_index":838,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:88",{"_index":849,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers/my",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyOffersComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["onchanges",{"_index":1128,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["oninit",{"_index":300,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["openeditform",{"_index":833,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["opens",{"_index":804,"title":{},"body":{"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{}}}],["openupdateform",{"_index":829,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["openzeppelin/contracts",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["openzeppelin/solidity",{"_index":1456,"title":{},"body":{"index.html":{}}}],["operator",{"_index":1225,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["optional",{"_index":23,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["org",{"_index":528,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["organizator",{"_index":664,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["organizator.guard",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["organizator.guard.ts",{"_index":320,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"coverage.html":{}}}],["organizator.guard.ts:10",{"_index":324,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["organizator.guard.ts:17",{"_index":329,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["organizer",{"_index":1266,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["organizing",{"_index":1438,"title":{},"body":{"index.html":{}}}],["out",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outer",{"_index":1107,"title":{},"body":{"components/SectorComponent.html":{}}}],["output",{"_index":1077,"title":{},"body":{"components/SectorComponent.html":{}}}],["outputs",{"_index":1059,"title":{},"body":{"components/SectorComponent.html":{}}}],["overview",{"_index":1461,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownednfts",{"_index":34,"title":{"interfaces/OwnedNFTs.html":{}},"body":{"injectables/AlchemyApiService.html":{},"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["owner",{"_index":850,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["p",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["pack",{"_index":475,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["package",{"_index":1397,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["page",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["pagenotfoundcomponent",{"_index":137,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel",{"_index":917,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["panelclass",{"_index":1126,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["param",{"_index":429,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"pipes/WeiToEthPipe.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["path",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'sell",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'sell/:address",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pay",{"_index":1168,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["people",{"_index":457,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["perm_data_setting",{"_index":940,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["permission",{"_index":1330,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["permissions",{"_index":1276,"title":{},"body":{"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["phrase",{"_index":710,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["pipe",{"_index":701,"title":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{}},"body":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":703,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{},"overview.html":{}}}],["pipesmodule",{"_index":748,"title":{"modules/PipesModule.html":{}},"body":{"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":712,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{}}}],["position",{"_index":311,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["possible",{"_index":1144,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["prev",{"_index":486,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["previous",{"_index":592,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["price",{"_index":448,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"pipes/WeiToEthPipe.html":{}}}],["primary",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":41,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["production",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":26,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["properties",{"_index":68,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"properties.html":{}}}],["protected",{"_index":611,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["provide",{"_index":357,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/SectorComponent.html":{}}}],["provided",{"_index":566,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["providedin",{"_index":37,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["provider",{"_index":591,"title":{},"body":{"components/CreateConcertComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["provider.getsigner",{"_index":1013,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["provider.send(\"eth_requestaccounts",{"_index":1317,"title":{},"body":{"injectables/WalletService.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{}}}],["public",{"_index":283,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["publish",{"_index":790,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["push",{"_index":1178,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["radius",{"_index":500,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MarketplaceComponent.html":{}}}],["raw",{"_index":266,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["reactiveformsmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{}}}],["reading",{"_index":1157,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["red",{"_index":605,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["redirects",{"_index":520,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{}}}],["redirectto",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":615,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["refuse",{"_index":1351,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["relative",{"_index":312,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["resell",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["reselled",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["reselledticketcomponent",{"_index":140,"title":{"components/ReselledTicketComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reseller",{"_index":889,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["resellers",{"_index":392,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["resellersoffers",{"_index":381,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["resells",{"_index":439,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["reset",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resultarray",{"_index":1176,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["resultarray.push(ticketid.tonumber",{"_index":1182,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["results",{"_index":51,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":49,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["returns",{"_index":25,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["revoke",{"_index":658,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["revokemarketplaceapproval",{"_index":616,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["revokes",{"_index":630,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["rgb(250",{"_index":490,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{}}}],["right",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["root",{"_index":38,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["root'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["route",{"_index":330,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{}}}],["router",{"_index":516,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{}}}],["routermodule",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forroot(routes",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":328,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["routes",{"_index":213,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["routing.module.ts",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":896,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["run",{"_index":1443,"title":{},"body":{"index.html":{}}}],["running",{"_index":1448,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":31,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/MyNftComponent.html":{},"dependencies.html":{}}}],["safehtml",{"_index":304,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["scale(1.01",{"_index":898,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["scale(1.02",{"_index":481,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["schematics",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["scss",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":533,"title":{},"body":{"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{}}}],["searchtext",{"_index":514,"title":{},"body":{"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{}}}],["searchtext.tolocalelowercase",{"_index":713,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["seat",{"_index":823,"title":{},"body":{"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["seatnumber",{"_index":678,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["seats",{"_index":452,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["seatstart",{"_index":673,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["seatstop",{"_index":674,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["sector",{"_index":398,"title":{"interfaces/Sector.html":{}},"body":{"components/ConcertSectorsComponent.html":{},"interfaces/DepConcert.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["sector'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["sector.availabletokenids.length",{"_index":446,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.component.html",{"_index":1054,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.component.scss",{"_index":1053,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.isnumerable",{"_index":1091,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.mintnow",{"_index":1097,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.name",{"_index":444,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.price",{"_index":449,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.seatstart",{"_index":453,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.seatstop",{"_index":447,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector/sector.component",{"_index":354,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["sectorcomponent",{"_index":143,"title":{"components/SectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sectorform",{"_index":1083,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorindex",{"_index":1072,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorname",{"_index":677,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["sectors",{"_index":369,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["sectors'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["sectors.component",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{}}}],["sectors.component.html",{"_index":371,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.scss",{"_index":370,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts",{"_index":366,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"coverage.html":{}}}],["sectors.component.ts:16",{"_index":403,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:17",{"_index":407,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:18",{"_index":406,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:19",{"_index":405,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:20",{"_index":404,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:22",{"_index":408,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:23",{"_index":413,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:24",{"_index":402,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:25",{"_index":388,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:34",{"_index":389,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:48",{"_index":394,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:56",{"_index":399,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:69",{"_index":390,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors/concert",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSectorsComponent.html":{},"modules/MarketplaceModule.html":{},"coverage.html":{}}}],["sectorsarray",{"_index":1087,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(\"0",{"_index":1099,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(etherunitconverter.ethertowei(sector.price).tostring",{"_index":1100,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(isnumerablestring",{"_index":1092,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(mintnowstring",{"_index":1098,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(sector.seatstart.tostring",{"_index":1093,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(sector.seatstop.tostring",{"_index":1094,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(sector.sectorname",{"_index":1089,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsevent",{"_index":1060,"title":{},"body":{"components/SectorComponent.html":{}}}],["security",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":538,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["selectedsector",{"_index":377,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["selectedstandardtickets",{"_index":378,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["selector",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["selectsector",{"_index":382,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["selectsector(index",{"_index":393,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sell",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSellComponent.html":{}}}],["sell'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["sell.component",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{}}}],["sell.component.html",{"_index":512,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.scss",{"_index":511,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts",{"_index":510,"title":{},"body":{"components/ConcertSellComponent.html":{},"coverage.html":{}}}],["sell.component.ts:11",{"_index":517,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:18",{"_index":524,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:19",{"_index":522,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:20",{"_index":525,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:22",{"_index":521,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:35",{"_index":519,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell/concert",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSellComponent.html":{},"modules/MarketplaceModule.html":{},"coverage.html":{}}}],["seller",{"_index":656,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"interfaces/SellerOffer.html":{}}}],["sellerid",{"_index":731,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{}}}],["sellerids",{"_index":1037,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["selleroffer",{"_index":729,"title":{"interfaces/SellerOffer.html":{}},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["selleroffers",{"_index":830,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["sellertickets.key",{"_index":883,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["sellerticketsmap",{"_index":831,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["selling",{"_index":805,"title":{},"body":{"components/MyNftComponent.html":{}}}],["sellticket",{"_index":798,"title":{},"body":{"components/MyNftComponent.html":{}}}],["sellticket(_nft",{"_index":802,"title":{},"body":{"components/MyNftComponent.html":{}}}],["serve",{"_index":1444,"title":{},"body":{"index.html":{}}}],["server",{"_index":1442,"title":{},"body":{"index.html":{}}}],["services/auth",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/wallet.service",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":868,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["setapprovalforall",{"_index":1198,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setapprovalforall(address",{"_index":1227,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setdate",{"_index":1199,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setdate(address",{"_index":1229,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setorganizatorpermission",{"_index":1259,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["setorganizatorpermission(address",{"_index":1274,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["sets",{"_index":1135,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["shopping_cart",{"_index":951,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["showlayout",{"_index":383,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["shows",{"_index":400,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["signer",{"_index":1012,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["signer.getaddress",{"_index":1319,"title":{},"body":{"injectables/WalletService.html":{}}}],["simplechanges",{"_index":1137,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["size",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["slide",{"_index":464,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["slide:hover",{"_index":479,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["smartcontract",{"_index":975,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["snackbar",{"_index":1116,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":910,"title":{"injectables/SnackbarService.html":{}},"body":{"components/NavigationBarComponent.html":{},"injectables/SnackbarService.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["sold",{"_index":680,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/StandardTicketComponent.html":{},"interfaces/Ticket.html":{}}}],["soldtickets",{"_index":1139,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["soldtickets.some(id",{"_index":1179,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["solidity",{"_index":1423,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["someone",{"_index":866,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["specified",{"_index":763,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["specify",{"_index":659,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["specifying",{"_index":1080,"title":{},"body":{"components/SectorComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["spin",{"_index":1108,"title":{},"body":{"components/SectorComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["src/app/app.component.ts",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/concert",{"_index":338,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":716,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:8",{"_index":720,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/marketplace/audience",{"_index":277,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/concert",{"_index":365,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/marketplace",{"_index":732,"title":{},"body":{"components/MarketplaceComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/marketplace.module.ts",{"_index":742,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["src/app/components/marketplace/reselled",{"_index":1033,"title":{},"body":{"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/standard",{"_index":1127,"title":{},"body":{"components/StandardTicketComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation",{"_index":899,"title":{},"body":{"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["src/app/components/page",{"_index":1016,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/user/create",{"_index":606,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/user/my",{"_index":794,"title":{},"body":{"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"coverage.html":{}}}],["src/app/components/user/user.module.ts",{"_index":1297,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/pipes/filter",{"_index":704,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipes.module",{"_index":749,"title":{},"body":{"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1029,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/pipes/wei",{"_index":1320,"title":{},"body":{"pipes/WeiToEthPipe.html":{},"coverage.html":{}}}],["src/app/services/alchemy",{"_index":6,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/MyNftComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":319,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/nft",{"_index":639,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/ticked",{"_index":332,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/ticked1155.service",{"_index":415,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/StandardTicketComponent.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts",{"_index":1189,"title":{},"body":{"injectables/Ticked1155Service.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:102",{"_index":1213,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:107",{"_index":1211,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:11",{"_index":1200,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:112",{"_index":1219,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:117",{"_index":1221,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:122",{"_index":1223,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:127",{"_index":1230,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:132",{"_index":1228,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:137",{"_index":1209,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:25",{"_index":1206,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:41",{"_index":1202,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:55",{"_index":1204,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:69",{"_index":1232,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:87",{"_index":1226,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:92",{"_index":1215,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:97",{"_index":1217,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/snackbar.service",{"_index":924,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/WhitelistComponent.html":{}}}],["src/app/services/snackbar.service.ts",{"_index":1110,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/services/snackbar.service.ts:19",{"_index":1118,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/snackbar.service.ts:29",{"_index":1124,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/snackbar.service.ts:39",{"_index":1122,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/snackbar.service.ts:7",{"_index":1115,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/wallet.service",{"_index":641,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["src/app/services/wallet.service.ts",{"_index":1298,"title":{},"body":{"injectables/WalletService.html":{},"coverage.html":{}}}],["src/app/services/wallet.service.ts:10",{"_index":1309,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/wallet.service.ts:18",{"_index":1303,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/wallet.service.ts:27",{"_index":1302,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/wallet.service.ts:9",{"_index":1308,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/utils/etherunitconverter",{"_index":643,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{}}}],["src/app/utils/etherunitconverter.ts",{"_index":682,"title":{},"body":{"classes/EtherUnitConverter.html":{},"coverage.html":{}}}],["src/app/utils/etherunitconverter.ts:10",{"_index":689,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["src/app/utils/etherunitconverter.ts:22",{"_index":687,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["src/environments/environment",{"_index":33,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/TickedFactoryService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/concert.model",{"_index":417,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["src/types/concert.model.ts",{"_index":670,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["src/types/dialogs.model",{"_index":305,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["src/types/dialogs.model.ts",{"_index":273,"title":{},"body":{"interfaces/AudienceDialogData.html":{},"interfaces/CreateOfferDialogData.html":{},"coverage.html":{}}}],["src/types/marketplace.model",{"_index":857,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{}}}],["src/types/marketplace.model.ts",{"_index":726,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["src/types/nft.model",{"_index":35,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["src/types/nft.model.ts",{"_index":255,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["standard",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["standardticketcomponent",{"_index":145,"title":{"components/StandardTicketComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1436,"title":{"index.html":{}},"body":{}}],["state",{"_index":327,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"injectables/Ticked1155Service.html":{}}}],["statements",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":683,"title":{},"body":{"classes/EtherUnitConverter.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["status",{"_index":1207,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["step",{"_index":598,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["sticky",{"_index":959,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["still",{"_index":791,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["store",{"_index":1171,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["string",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["stringtime",{"_index":577,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["structure",{"_index":563,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["styles",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["styleurls",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["success",{"_index":1112,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["success(message",{"_index":1123,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["support",{"_index":1457,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":590,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["svg",{"_index":1458,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":461,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"dependencies.html":{}}}],["swiper/angular",{"_index":744,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["swiper/css",{"_index":458,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["swiper/css/bundle",{"_index":460,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["swiper/css/pagination",{"_index":459,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["swipermodule",{"_index":743,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["table",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":593,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["tap",{"_index":808,"title":{},"body":{"components/MyNftComponent.html":{}}}],["template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["templateurl",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["test",{"_index":1452,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1450,"title":{},"body":{"index.html":{}}}],["text",{"_index":465,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["themepalette",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["think",{"_index":1160,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.accounts",{"_index":1311,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.accounts[0",{"_index":1316,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.address",{"_index":1339,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.alchemyapiservice.getusernfts",{"_index":811,"title":{},"body":{"components/MyNftComponent.html":{}}}],["this.amount",{"_index":654,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["this.balance",{"_index":858,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.commoninf.get('concertdate')?.getrawvalue().tostring",{"_index":578,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.commoninf.get('concertdescription')?.getrawvalue",{"_index":583,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.commoninf.get('concertimage')?.getrawvalue",{"_index":584,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.commoninf.get('concertname')?.getrawvalue",{"_index":582,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.concertaddress",{"_index":419,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["this.concertdate",{"_index":427,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.concertdescription",{"_index":425,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.concertname",{"_index":423,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.concertorg",{"_index":526,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.concerts",{"_index":529,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.concertsectors",{"_index":585,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.deployedconcerts",{"_index":779,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.dialogref.close",{"_index":306,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["this.form.controls['sectors",{"_index":1082,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.formbuilder.array",{"_index":1073,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.formbuilder.group",{"_index":569,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["this.http.get(url",{"_index":50,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["this.ismarketplaceapproved",{"_index":647,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.links[0",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.listing.push(ticket",{"_index":1050,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.matdialog.open(audiencelayoutcomponent",{"_index":435,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.matdialog.open(createofferdialogcomponent",{"_index":812,"title":{},"body":{"components/MyNftComponent.html":{}}}],["this.nft",{"_index":644,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["this.nft.contract.address",{"_index":649,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.nft.id.tokenid",{"_index":653,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.nftmarketplaceservice",{"_index":863,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["this.nftmarketplaceservice.buyticket",{"_index":1051,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.nftmarketplaceservice.deleteoffer(concertaddr",{"_index":880,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.getbalance",{"_index":859,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.getoffersbyseller",{"_index":861,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.getsellerids(this.concertaddress",{"_index":1048,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.nftmarketplaceservice.insertoffer",{"_index":652,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.nftmarketplaceservice.updateoffer(concertaddr",{"_index":879,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.withdraw",{"_index":881,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.openupdateform",{"_index":875,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.permission",{"_index":1342,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.route.snapshot.parammap.get('address",{"_index":420,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.router.navigate(['sell",{"_index":532,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.router.navigate(navigationdetails",{"_index":934,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.sectors",{"_index":421,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.sectors.push(sectorform",{"_index":1085,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.sectors.removeat(sectorindex",{"_index":1086,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.sectors.value",{"_index":1088,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.sectors[index",{"_index":432,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.sectorsevent.emit(sectorsarray",{"_index":1101,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.selectedsector",{"_index":431,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.selectedstandardtickets",{"_index":430,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.sellerids",{"_index":1047,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.selleroffers",{"_index":860,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.sellerticketsmap.get(offer.concertaddr",{"_index":872,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.sellerticketsmap.set(offer.concertaddr",{"_index":874,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.snackbar.open(message",{"_index":1125,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.error(\"access",{"_index":935,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.snackbarservice.error(\"specify",{"_index":1340,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.snackbarservice.info(\"this",{"_index":1348,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.snackbarservice.info(\"you",{"_index":928,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.ticked1155service.addsectors(address",{"_index":782,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.ticked1155service.buyticket",{"_index":1183,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticked1155service.createandminttickets(contractaddress",{"_index":781,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.ticked1155service.getdate(this.concertaddress",{"_index":428,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getdescription(this.concertaddress",{"_index":426,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getimage(this.concertaddress",{"_index":434,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getname(this.concertaddress",{"_index":424,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getsectors(this.concertaddress",{"_index":422,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getsectorsoldids",{"_index":1153,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticked1155service.getticketattr(this.concertaddress",{"_index":1174,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticked1155service.isapprovedforall",{"_index":648,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.ticked1155service.setapprovalforall",{"_index":651,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.ticked1155service.setdate(concertaddress",{"_index":788,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.ticked1155service.withdraw(concertaddress",{"_index":783,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.tickedfactoryservice.authorizeaccess",{"_index":335,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/NavigationBarComponent.html":{}}}],["this.tickedfactoryservice.authorizeaccess(this.checkaddress",{"_index":1346,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.tickedfactoryservice.createconcertcontract",{"_index":581,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.tickedfactoryservice.getdepcontracts",{"_index":780,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.tickedfactoryservice.getdepcontracts(org",{"_index":530,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.tickedfactoryservice.getorganizers",{"_index":527,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.tickedfactoryservice.setorganizatorpermission(this.address",{"_index":1344,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.tickedfactoryservice.validateowner",{"_index":938,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.ticketsmap.clear",{"_index":1149,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticketsmap.set(tokenid",{"_index":1175,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.validateavailability",{"_index":1151,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.wallet",{"_index":1315,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletservice.getwalletaddress",{"_index":45,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["this.walletservice.login",{"_index":926,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["through",{"_index":1165,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticked",{"_index":945,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["ticked1155",{"_index":1233,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["ticked1155.abi",{"_index":1253,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["ticked1155service",{"_index":386,"title":{"injectables/Ticked1155Service.html":{}},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"coverage.html":{}}}],["ticked1155service.getcontract(address",{"_index":1235,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["tickedapp",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["tickedfactory",{"_index":1282,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickedfactory.abi",{"_index":1293,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickedfactoryservice",{"_index":323,"title":{"injectables/TickedFactoryService.html":{}},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["tickedfactoryservice.getcontract",{"_index":1284,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickedfactoryservice.getcontract(true",{"_index":1286,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickerattr",{"_index":1147,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket",{"_index":416,"title":{"interfaces/Ticket.html":{}},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["ticket'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["ticket.component",{"_index":751,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["ticket.component.html",{"_index":1036,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.scss",{"_index":1035,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts",{"_index":1034,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"coverage.html":{}}}],["ticket.component.ts:13",{"_index":1040,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:14",{"_index":1132,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:15",{"_index":1046,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["ticket.component.ts:16",{"_index":1045,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:17",{"_index":1039,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:23",{"_index":1044,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:44",{"_index":1042,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["ticket.component.ts:53",{"_index":1140,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:72",{"_index":1134,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.value.price",{"_index":1185,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.value.seatnumber",{"_index":1188,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.value.sectorname",{"_index":1184,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket/reselled",{"_index":752,"title":{},"body":{"modules/MarketplaceModule.html":{},"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["ticket/standard",{"_index":750,"title":{},"body":{"modules/MarketplaceModule.html":{},"components/StandardTicketComponent.html":{},"coverage.html":{}}}],["ticket:hover",{"_index":897,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticketid",{"_index":1146,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticketid.tonumber",{"_index":1181,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["tickets",{"_index":454,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"index.html":{}}}],["tickets?.push(ticket",{"_index":873,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["ticketsmap",{"_index":379,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/StandardTicketComponent.html":{}}}],["title",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{}}}],["today",{"_index":441,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["toggle",{"_index":1079,"title":{},"body":{"components/SectorComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["toggles",{"_index":391,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["token",{"_index":628,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["tokenid",{"_index":262,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["tokenmetadata",{"_index":263,"title":{"interfaces/TokenMetadata.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["tokens",{"_index":621,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["tokentype",{"_index":264,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["tokenuri",{"_index":265,"title":{"interfaces/TokenUri.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["top",{"_index":364,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["totalcount",{"_index":271,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["trading",{"_index":1440,"title":{},"body":{"index.html":{}}}],["trait_type",{"_index":257,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["transaction",{"_index":770,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["transaction.wait",{"_index":1238,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["transform",{"_index":480,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"pipes/WeiToEthPipe.html":{}}}],["transform(concerts",{"_index":707,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["transform(price",{"_index":1322,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["true",{"_index":410,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1277,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["try",{"_index":996,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["ts",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":1237,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["tx.status",{"_index":1239,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["type",{"_index":22,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":785,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["underline",{"_index":546,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["unique",{"_index":888,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["unit",{"_index":1449,"title":{},"body":{"index.html":{}}}],["unixtimestamp",{"_index":579,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["unknown",{"_index":981,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["update",{"_index":893,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["updateoffer",{"_index":834,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["updateoffer(concertaddr",{"_index":844,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["updates",{"_index":847,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["url",{"_index":46,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateConcertComponent.html":{}}}],["urltree",{"_index":331,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["use",{"_index":1173,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["user",{"_index":1306,"title":{},"body":{"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["usermodule",{"_index":163,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["uses",{"_index":1304,"title":{},"body":{"injectables/WalletService.html":{}}}],["usevalue",{"_index":358,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["validate",{"_index":1280,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["validateavailability",{"_index":1130,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["validateavailability(alltickets",{"_index":1138,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["validateowner",{"_index":1260,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["validateowner(address",{"_index":1278,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["validators",{"_index":576,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["validators.minlength(8",{"_index":571,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["validators.required",{"_index":570,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["variable",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1468,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1466,"title":{},"body":{"properties.html":{}}}],["vertically",{"_index":469,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["verticalposition",{"_index":363,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["viewencapsulation",{"_index":414,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["viewencapsulation.none",{"_index":368,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["void",{"_index":294,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["waffle",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["wallet",{"_index":914,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["wallet.service",{"_index":36,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["walletaddres",{"_index":43,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["walletservice",{"_index":14,"title":{"injectables/WalletService.html":{}},"body":{"injectables/AlchemyApiService.html":{},"modules/AppModule.html":{},"guards/AuthOrganizatorGuard.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{},"coverage.html":{},"overview.html":{}}}],["warn",{"_index":669,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["warning",{"_index":588,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["webkit",{"_index":470,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/SectorComponent.html":{}}}],["wei",{"_index":1002,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"modules/PipesModule.html":{},"injectables/Ticked1155Service.html":{}}}],["weitoeth",{"_index":450,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"pipes/WeiToEthPipe.html":{}}}],["weitoether",{"_index":685,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["weitoether(amount",{"_index":688,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["weitoethpipe",{"_index":1028,"title":{"pipes/WeiToEthPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/WeiToEthPipe.html":{},"coverage.html":{},"overview.html":{}}}],["weitogwei(amount",{"_index":690,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["white",{"_index":962,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["whitelist",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["whitelist.component.html",{"_index":1328,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["whitelist.component.scss",{"_index":1327,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["whitelist/whitelist.component",{"_index":355,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["whitelistcomponent",{"_index":147,"title":{"components/WhitelistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["width",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["window?.ethereum.request",{"_index":1312,"title":{},"body":{"injectables/WalletService.html":{}}}],["withdraw",{"_index":760,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["withdraw(address",{"_index":1231,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["withdraw(concertaddress",{"_index":773,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["withdraws",{"_index":775,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["without",{"_index":885,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["wrap",{"_index":541,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["z",{"_index":954,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["zone.js",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlchemyApiService.html":{"url":"injectables/AlchemyApiService.html","title":"injectable - AlchemyApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlchemyApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alchemy-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserNfts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alchemy-api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserNfts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserNfts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alchemy-api.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { OwnedNFTs } from 'src/types/nft.model';\nimport { WalletService } from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlchemyApiService {\n\n  constructor(\n    private walletService: WalletService,\n    private http: HttpClient\n  ) { }\n\n  async getUserNfts(): Promise> {\n    const walletAddres = await this.walletService.getWalletAddress()\n    const url = environment.alchemyApi + \"/getNFTs/?owner=\" + walletAddres\n    return this.http.get(url)\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeLink\n                            \n                            \n                                background\n                            \n                            \n                                links\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.links[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        background\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThemePalette\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['sell', 'resell']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tickeDapp'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tickeDapp';\n  links = ['sell', 'resell'];\n  activeLink = this.links[0];\n  background: ThemePalette = 'primary';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n/* TO CHANGE */\np {\n    padding-left: 20px;\n    font-size: 12px;\n  }\n  .container {\n    margin-right: auto;\n    margin-left: auto;\n    padding: 20px 15px 30px;\n    width: 750px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nNavigationBarComponent\n\nNavigationBarComponent\n\nAppModule -->\n\nNavigationBarComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nConcertManagementModule\n\nConcertManagementModule\n\nAppModule -->\n\nConcertManagementModule->AppModule\n\n\n\n\n\nMarketplaceModule\n\nMarketplaceModule\n\nAppModule -->\n\nMarketplaceModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nAppModule -->\n\nWalletService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NavigationBarComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WalletService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ConcertManagementModule\n                        \n                        \n                            MarketplaceModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component'\nimport { WalletService } from './services/wallet.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { ConcertManagementModule } from './components/concert-management/concert-management.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { MarketplaceModule } from './components/marketplace/marketplace.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { UserModule } from './components/user/user.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    NavigationBarComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatButtonModule, \n    ReactiveFormsModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatIconModule,\n    // custom\n    ConcertManagementModule,\n    MarketplaceModule,\n    UserModule\n  ],\n  providers: [\n    WalletService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateConcertComponent } from './components/concert-management/create-concert/create-concert.component';\nimport { MyConcertsComponent } from './components/concert-management/my-concerts/my-concerts.component';\nimport { WhitelistComponent } from './components/concert-management/whitelist/whitelist.component';\nimport { ConcertSectorsComponent } from './components/marketplace/concert-sectors/concert-sectors.component';\nimport { MarketplaceComponent } from './components/marketplace/marketplace-comp/marketplace.component';\nimport { ConcertSellComponent } from './components/marketplace/concert-sell/concert-sell.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { AuthOrganizatorGuard } from './services/auth-organizator.guard';\nimport { MyNftComponent } from './components/user/my-nft/my-nft.component';\nimport { MyOffersComponent } from './components/user/my-offers/my-offers.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/marketplace/sell', pathMatch: 'full' },\n  { path: 'marketplace', component: MarketplaceComponent,\n    children:[\n      {\n        path:'sell',\n        component: ConcertSellComponent\n      },\n      {\n        path:'sell/:address',\n        component: ConcertSectorsComponent\n      },\n    ] \n  },\n  { path: 'create-concert', canActivate:[AuthOrganizatorGuard], component: CreateConcertComponent },\n  { path: 'my-concerts', canActivate:[AuthOrganizatorGuard], component: MyConcertsComponent },\n  { path: 'my-nft', component: MyNftComponent },\n  { path: 'my-offers', component: MyOffersComponent },\n  { path: 'whitelist', component: WhitelistComponent },\n  { path: '**', component:  PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), CommonModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Attribute.html":{"url":"interfaces/Attribute.html","title":"interface - Attribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Attribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display_type\n                                        \n                                \n                                \n                                        \n                                            trait_type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trait_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trait_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudienceDialogData.html":{"url":"interfaces/AudienceDialogData.html","title":"interface - AudienceDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudienceDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/dialogs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NFT } from \"./nft.model\";\n\nexport interface AudienceDialogData {\n    image: string;\n}\n\nexport interface CreateOfferDialogData {\n    nft: NFT;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AudienceLayoutComponent.html":{"url":"components/AudienceLayoutComponent.html","title":"component - AudienceLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AudienceLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/audience-layout/audience-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-audience-layout\n            \n\n            \n                styleUrls\n                ./audience-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./audience-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: AudienceDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AudienceDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:21\n                \n            \n\n\n            \n                \n                    Function closes dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudienceDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { AudienceDialogData } from 'src/types/dialogs.model';\n\n@Component({\n  selector: 'app-audience-layout',\n  templateUrl: './audience-layout.component.html',\n  styleUrls: ['./audience-layout.component.scss']\n})\nexport class AudienceLayoutComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: AudienceDialogData,\n  ) { }\n\n  /**\n   * Function closes dialog \n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n     Audience layout\n\n    \n        \n    \n\n    \n        Close\n    \n\n    \n\n    \n                \n                    ./audience-layout.component.scss\n                \n                img {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n}\n\n.dialog {\n    position: relative !important;\n}\n\n.btn-close {\n    position: relative !important;\n    left: 10px;\n    bottom: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Audience layout                            Close    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AudienceLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthOrganizatorGuard.html":{"url":"guards/AuthOrganizatorGuard.html","title":"guard - AuthOrganizatorGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthOrganizatorGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth-organizator.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-organizator.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-organizator.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { WalletService } from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthOrganizatorGuard implements CanActivate {\n  \n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private walletService: WalletService,\n  ) {}\n  \n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise {\n    \n      return this.tickedFactoryService.authorizeAccess(\n         await this.walletService.getWalletAddress()\n      );\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConcertManagementModule.html":{"url":"modules/ConcertManagementModule.html","title":"module - ConcertManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ConcertManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConcertManagementModule\n\n\n\ncluster_ConcertManagementModule_declarations\n\n\n\n\nCreateConcertComponent\n\nCreateConcertComponent\n\n\n\nConcertManagementModule\n\nConcertManagementModule\n\nConcertManagementModule -->\n\nCreateConcertComponent->ConcertManagementModule\n\n\n\n\n\nMyConcertsComponent\n\nMyConcertsComponent\n\nConcertManagementModule -->\n\nMyConcertsComponent->ConcertManagementModule\n\n\n\n\n\nSectorComponent\n\nSectorComponent\n\nConcertManagementModule -->\n\nSectorComponent->ConcertManagementModule\n\n\n\n\n\nWhitelistComponent\n\nWhitelistComponent\n\nConcertManagementModule -->\n\nWhitelistComponent->ConcertManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/concert-management/concert-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateConcertComponent\n                        \n                        \n                            MyConcertsComponent\n                        \n                        \n                            SectorComponent\n                        \n                        \n                            WhitelistComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CreateConcertComponent } from './create-concert/create-concert.component';\nimport { MyConcertsComponent } from './my-concerts/my-concerts.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { SectorComponent } from './sector/sector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WhitelistComponent } from './whitelist/whitelist.component';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [\n    CreateConcertComponent,\n    MyConcertsComponent,\n    SectorComponent,\n    WhitelistComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatTabsModule, \n    MatCardModule,\n    MatStepperModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 3000,\n                                                        horizontalPosition: 'center',\n                                                        verticalPosition: 'top'}}\n  ]\n})\nexport class ConcertManagementModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConcertSectorsComponent.html":{"url":"components/ConcertSectorsComponent.html","title":"component - ConcertSectorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConcertSectorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/concert-sectors/concert-sectors.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-concert-sectors\n            \n\n            \n                styleUrls\n                ./concert-sectors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./concert-sectors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                concertAddress\n                            \n                            \n                                concertDate\n                            \n                            \n                                concertDescription\n                            \n                            \n                                concertName\n                            \n                            \n                                sectors\n                            \n                            \n                                selectedSector\n                            \n                            \n                                selectedStandardTickets\n                            \n                            \n                                ticketsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                resellersOffers\n                            \n                            \n                                selectSector\n                            \n                            \n                                    Async\n                                showLayout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, ticked1155Service: Ticked1155Service, matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resellersOffers\n                        \n                    \n                \n            \n            \n                \nresellersOffers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:69\n                \n            \n\n\n            \n                \n                    Function that toggles for resellers offers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSector\n                        \n                    \n                \n            \n            \n                \nselectSector(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:48\n                \n            \n\n\n            \n                \n                    Function that changes currently chosen sector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIndex of sector\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showLayout\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLayout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:56\n                \n            \n\n\n            \n                \n                    Function that shows dialog with layout\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sectors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sector[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStandardTickets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { Sector, Ticket } from 'src/types/concert.model';\nimport { AudienceLayoutComponent } from '../audience-layout/audience-layout.component';\n\n@Component({\n  selector: 'app-concert-sectors',\n  templateUrl: './concert-sectors.component.html',\n  styleUrls: ['./concert-sectors.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ConcertSectorsComponent implements OnInit {\n\n  concertAddress!: string;\n  sectors: Sector[] = [];\n  concertName: string = '';\n  concertDescription: string = '';\n  concertDate!: number;\n\n  selectedSector!: Sector;\n  ticketsMap: Map = new Map;\n  amount = 1;\n  selectedStandardTickets: boolean = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private ticked1155Service: Ticked1155Service,\n    private matDialog: MatDialog,\n  ) { }\n\n\n  async ngOnInit() {\n    this.concertAddress = this.route.snapshot.paramMap.get('address')!;\n    \n    this.sectors = await this.ticked1155Service.getSectors(this.concertAddress);\n    this.concertName = await this.ticked1155Service.getName(this.concertAddress);\n    this.concertDescription = await this.ticked1155Service.getDescription(this.concertAddress);\n    this.concertDate = await this.ticked1155Service.getDate(this.concertAddress);\n  }\n\n  /**\n   * Function that changes currently chosen sector \n   * \n   * @param index - Index of sector \n   */\n  selectSector(index: number) {\n    this.selectedStandardTickets = true;\n    this.selectedSector = this.sectors[index];\n  }\n\n  /**\n   * Function that shows dialog with layout  \n   */\n  async showLayout(){\n    const _image = await this.ticked1155Service.getImage(this.concertAddress);\n    let dialogRef = this.matDialog.open(AudienceLayoutComponent, {\n      maxHeight: '80%',\n      maxWidth: '80%',\n      data: { image: _image }\n    });\n  }\n\n  // resells\n  /**\n   * Function that toggles for resellers offers  \n   */\n  resellersOffers() {\n    this.selectedStandardTickets = false;\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{ concertName }}\n        \n            today\n            {{ concertDate * 1000 | date:'medium' }}\n        \n    \n    \n        {{ concertDescription }}\n    \n\n\n    \n        \n            \n                {{sector.name}}\n                \n                    \n                         Capacity: {{sector.availableTokenIds.length}} \n                    \n                    \n                         Capacity: {{ sector.seatStop }} \n                    \n                \n            \n            \n                 Ticket price: {{ sector.price | weiToEth }} ETH \n                \n                     Seats from {{ sector.seatStart }} to {{ sector.seatStop }} \n                \n                \n                     Capacity: {{ sector.seatStop }} \n                \n            \n                     Tickets &#8595;\n                 \n            -->\n            \n        \n     \n    \n    \n        \n            \n                \n                    RESELLERS OFFERS\n                \n            \n            \n                Check offers from other people\n            \n        \n    \n\n\n\n\n\n    Audience layout \n\n\n\n    \n\n    \n\n\n    \n\n    \n\n\n    \n\n    \n                \n                    ./concert-sectors.component.scss\n                \n                @import \"~swiper/css\";\n@import \"~swiper/css/pagination\";\n@import \"~swiper/css/bundle\";\n\n\n.swiper {\n  width: 100%;\n  height: 100%;\n}\n\n.swiper-slide {\n  text-align: center;\n  font-size: 18px;\n  background: #fff;\n\n  /* Center slide text vertically */\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  -webkit-justify-content: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  -webkit-align-items: center;\n  align-items: center;\n}\n\n.swiper-slide:hover {\n    transform: scale(1.02);\n}\n\n.swiper-slide img {\n  display: block;\n  object-fit: cover;\n}\n\n.swiper-button-prev {\n  color: grey;\n}\n.swiper-button-next {\n  color: grey;\n}\n\n.sector {\n  padding: 10px;\n  margin: 10px;\n  background-color: rgb(250, 250, 250);\n  height: 100px;\n  width: 220px;\n}\n    \n.btn-details {\n    float: right;\n}\n\na {\n    text-decoration: none;\n}\n\n.info {\n  background-color: #683ab74e;\n  border-radius: 25px;\n}\n\n.concert-date {\n  float: right;\n  padding: 5px;\n}\n\n.concert-name {\n  padding: 10px;\n}\n\n.concert-description {\n  padding: 10px;\n}\n\n.sector-header {\n  ::ng-deep {\n    .mat-card-title {\n      margin: auto;\n      text-align: center;\n    }\n  }\n}\n\n.sector-content {\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ concertName }}                    today            {{ concertDate * 1000 | date:\\'medium\\' }}                        {{ concertDescription }}                                            {{sector.name}}                                                             Capacity: {{sector.availableTokenIds.length}}                                                                  Capacity: {{ sector.seatStop }}                                                                              Ticket price: {{ sector.price | weiToEth }} ETH                                      Seats from {{ sector.seatStart }} to {{ sector.seatStop }}                                                      Capacity: {{ sector.seatStop }}                                                  Tickets ↓                             -->                                                                                         RESELLERS OFFERS                                                        Check offers from other people                            Audience layout                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConcertSectorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConcertSellComponent.html":{"url":"components/ConcertSellComponent.html","title":"component - ConcertSellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConcertSellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/concert-sell/concert-sell.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-concert-sell\n            \n\n            \n                styleUrls\n                ./concert-sell.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./concert-sell.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                concertOrg\n                            \n                            \n                                    Public\n                                concerts\n                            \n                            \n                                    Public\n                                searchText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConcert\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToConcert\n                        \n                    \n                \n            \n            \n                \ngoToConcert(concertAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:35\n                \n            \n\n\n            \n                \n                    Function that redirects to chosen concert\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        concertOrg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        concerts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DepConcert[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { DepConcert } from 'src/types/concert.model';\n\n@Component({\n  selector: 'app-concert-sell',\n  templateUrl: './concert-sell.component.html',\n  styleUrls: ['./concert-sell.component.scss']\n})\nexport class ConcertSellComponent implements OnInit {\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private router: Router,\n  ) { }\n\n  public concerts: DepConcert[] = [];\n  public concertOrg: string[] = [];\n  public searchText = '';\n\n  async ngOnInit() {\n    this.concertOrg = await this.tickedFactoryService.getOrganizers();\n    for (let org of this.concertOrg) {\n      this.concerts = await this.tickedFactoryService.getDepContracts(org)\n    }\n  }\n\n  /**\n   * Function that redirects to chosen concert\n   *\n   * @param contractAddress - Address of concert contract \n   * \n   */\n  goToConcert(concertAddress: string) {\n    this.router.navigate(['sell', concertAddress]);\n  }\n\n}\n\n    \n\n    \n        \n    \n        search\n        \n            Search...\n        \n        \n        \n            close\n        \n    \n\n\n\n    \n        \n            \n            {{concert.name}}\n            {{concert.contractAddress}}\n            \n            \n                \n                     Click here to see more details &#8594;\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./concert-sell.component.scss\n                \n                .concert-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n}\n\n.concert {\n    padding: 10px;\n    margin: 10px;\n    background-color: rgb(250, 250, 250);\n}\n\n.concert:hover {\n    transform: scale(1.02);\n}\n\n.btn-details {\n    float: right;\n}\n\na {\n    text-decoration: none;\n}\n.search {\n    text-align: center;\n}\n\n.search-field {\n    width: 80%;\n\n    ::ng-deep {\n        .mat-form-field-flex {\n            border-radius: 25px !important;\n        }\n\n        .mat-form-field-underline {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            search                    Search...                                    close                                                {{concert.name}}            {{concert.contractAddress}}                                                             Click here to see more details →                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConcertSellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contract.html":{"url":"interfaces/Contract.html","title":"interface - Contract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateConcertComponent.html":{"url":"components/CreateConcertComponent.html","title":"component - CreateConcertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateConcertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/create-concert/create-concert.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-concert\n            \n\n            \n                styleUrls\n                ./create-concert.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-concert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commonInf\n                            \n                            \n                                concertSectors\n                            \n                            \n                                    Public\n                                contractsAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSectors\n                            \n                            \n                                    Public\n                                    Async\n                                createConcert\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSectors\n                        \n                    \n                \n            \n            \n                \naddSectors(sectors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:51\n                \n            \n\n\n            \n                \n                    Function that add sectors to concert informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createConcert\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConcert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:36\n                \n            \n\n\n            \n                \n                    Function that creates structure of information based on provided data in forms\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commonInf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    concertName: ['', Validators.required],\n    concertDescription: ['', Validators.required, Validators.minLength(8)],\n    concertDate: ['', Validators.required],\n    concertImage: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertSectors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contractsAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\n\n@Component({\n  selector: 'app-create-concert',\n  templateUrl: './create-concert.component.html',\n  styleUrls: ['./create-concert.component.scss']\n})\nexport class CreateConcertComponent implements OnInit {\n\n  concertSectors: string [] = [];\n\n  commonInf = this.formBuilder.group({\n    concertName: ['', Validators.required],\n    concertDescription: ['', Validators.required, Validators.minLength(8)],\n    concertDate: ['', Validators.required],\n    concertImage: ['', Validators.required],\n  })\n\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public contractsAddress: string[] = [];\n\n\n  /**\n   * Function that creates structure of information based on provided data in forms\n   */\n  public async createConcert() {\n    let stringTime = this.commonInf.get('concertDate')?.getRawValue().toString();\n    let unixTimestamp = (new Date(stringTime!)).getTime() / 1000;\n    this.tickedFactoryService.createConcertContract(\n      this.commonInf.get('concertName')?.getRawValue(),\n      this.commonInf.get('concertDescription')?.getRawValue(),\n      unixTimestamp,\n      this.commonInf.get('concertImage')?.getRawValue(),\n      this.concertSectors\n    )\n  }\n\n  /**\n   * Function that add sectors to concert informations\n   */\n  addSectors(sectors: string[]) {\n    this.concertSectors = sectors\n  }\n\n}\n    \n\n    \n        \n\n    \n        \n            \n                \n                    Name\n                    \n                \n            \n            \n                \n                    Description\n                    \n                    \n                \n            \n            \n                \n                    Image of audience layout (URL)\n                    \n                    \n                \n            \n            \n                \n                    Date\n                    \n                \n            \n        \n        \n            Apply\n        \n    \n    \n        \n\n        Back\n    \n    \n        warning\n        \n            \n                Make sure that all data provider in previous tabs is correct! \n                Informations cannot be changed in future - except date.\n            \n        \n         Create Contract Concert\n    \n\n\n\n\n\n\n      \n    \n\n    \n                \n                    ./create-concert.component.scss\n                \n                .step {\n    display: block;\n    margin: auto !important;\n}\n\n.form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n\n.form-full-width {\n    width: 100%;\n}\n.info-achtung {\n    padding: 10px;\n    font-size: medium;\n    color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Name                                                                                                Description                                                                                                                    Image of audience layout (URL)                                                                                                                    Date                                                                            Apply                                Back                warning                                    Make sure that all data provider in previous tabs is correct!                 Informations cannot be changed in future - except date.                             Create Contract Concert          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateConcertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOfferDialogComponent.html":{"url":"components/CreateOfferDialogComponent.html","title":"component - CreateOfferDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOfferDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-offer-dialog\n            \n\n            \n                styleUrls\n                ./create-offer-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-offer-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                amount\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                isMarketplaceApproved\n                            \n                            \n                                    Public\n                                nft\n                            \n                            \n                                    Protected\n                                price\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approveMarketplace\n                            \n                            \n                                    Async\n                                createOffer\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                revokeMarketplaceApproval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateOfferDialogData, ticked1155Service: Ticked1155Service, walletService: WalletService, nftMarketplaceService: NftMarketplaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateOfferDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nftMarketplaceService\n                                                  \n                                                        \n                                                                        NftMarketplaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        approveMarketplace\n                        \n                    \n                \n            \n            \n                \napproveMarketplace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:47\n                \n            \n\n\n            \n                \n                    Function that approves marketplace contract for all tokens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOffer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:71\n                \n            \n\n\n            \n                \n                    Function that creates offer based on form input\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:85\n                \n            \n\n\n            \n                \n                    Function checks if marketplace is approved for token\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revokeMarketplaceApproval\n                        \n                    \n                \n            \n            \n                \nrevokeMarketplaceApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:59\n                \n            \n\n\n            \n                \n                    Function that revokes approval for all tokens for marketplace contract\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOfferDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMarketplaceApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NFT\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BigNumber } from 'ethers';\nimport { NftMarketplaceService } from 'src/app/services/smartcontracts/nft-marketplace.service';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport EtherUnitConverter from 'src/app/utils/EtherUnitConverter';\nimport { environment } from 'src/environments/environment';\nimport { CreateOfferDialogData } from 'src/types/dialogs.model';\nimport { NFT } from 'src/types/nft.model';\n\n@Component({\n  selector: 'app-create-offer-dialog',\n  templateUrl: './create-offer-dialog.component.html',\n  styleUrls: ['./create-offer-dialog.component.scss']\n})\nexport class CreateOfferDialogComponent implements OnInit {\n\n  public isMarketplaceApproved: boolean = false;\n  public nft!: NFT;\n  protected amount: number = 1;\n  protected price!: number;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: CreateOfferDialogData,\n    private ticked1155Service: Ticked1155Service,\n    private walletService: WalletService,\n    private nftMarketplaceService: NftMarketplaceService,\n  ) {\n      this.nft = data.nft;\n   }\n\n  async ngOnInit() {\n    // check if collection is approved\n    this.isMarketplaceApproved = await this.ticked1155Service.isApprovedForAll(\n      this.nft.contract.address,\n      await this.walletService.getWalletAddress(),\n      environment.contractNftMarketplaceAddress,\n    )\n  }\n  \n  /**\n   * Function that approves marketplace contract for all tokens\n   *\n   */\n  approveMarketplace() {\n    this.ticked1155Service.setApprovalForAll(\n      this.nft.contract.address,\n      environment.contractNftMarketplaceAddress,\n      true\n    )\n  }\n\n  /**\n   * Function that revokes approval for all tokens for marketplace contract\n   *\n   */\n  revokeMarketplaceApproval() {\n    this.ticked1155Service.setApprovalForAll(\n      this.nft.contract.address,\n      environment.contractNftMarketplaceAddress,\n      true\n    )\n  }\n\n  /**\n   * Function that creates offer based on form input\n   *\n   */\n  async createOffer() {\n    this.nftMarketplaceService.insertOffer(\n      this.nft.contract.address,\n      { tokenId: this.nft.id.tokenId,\n        amount: this.amount,\n        price: EtherUnitConverter.etherToWei(this.price),\n        seller: await this.walletService.getWalletAddress() }\n    )\n  }\n\n  /**\n   * Function checks if marketplace is approved for token\n   *\n   */\n  async refresh() {\n    this.isMarketplaceApproved = await this.ticked1155Service.isApprovedForAll(\n      this.nft.contract.address,\n      await this.walletService.getWalletAddress(),\n      environment.contractNftMarketplaceAddress,\n    )\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Approve marketplace\n        \n        \n            Refresh    \n        \n    \n\n    \n        \n            \n                Revoke marketplace approval\n            \n        \n\n        \n            \n                Specify your offer:\n            \n            \n                \n                    \n                        Amount\n                        \n                    \n                \n                \n                    \n                        Price* (1 token)\n                        \n                          ETH\n                    \n                \n                \n                    *price contains 5% fee that will be charged for organizator\n                \n            \n            \n                \n                    CONFIRM\n                \n                \n                    warning\n                    \n                    If you confirm everyone will be able to buy your ticket \n                    \n                    You can cancel your offer in My offers\n                \n            \n\n        \n    \n\n\n\n    \n\n    \n                \n                    ./create-offer-dialog.component.scss\n                \n                .info-warn {\n    padding: 10px;\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Approve marketplace                            Refresh                                                        Revoke marketplace approval                                                        Specify your offer:                                                                                    Amount                                                                                                                        Price* (1 token)                                                  ETH                                                                        *price contains 5% fee that will be charged for organizator                                                                            CONFIRM                                                    warning                                        If you confirm everyone will be able to buy your ticket                                         You can cancel your offer in My offers                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOfferDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOfferDialogData.html":{"url":"interfaces/CreateOfferDialogData.html","title":"interface - CreateOfferDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOfferDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/dialogs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            nft\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nft:         NFT\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NFT\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NFT } from \"./nft.model\";\n\nexport interface AudienceDialogData {\n    image: string;\n}\n\nexport interface CreateOfferDialogData {\n    nft: NFT;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DepConcert.html":{"url":"interfaces/DepConcert.html","title":"interface - DepConcert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DepConcert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/concert.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contractAddress\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contractAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\n\nexport interface DepConcert {\n    contractAddress: string,\n    name: string\n}\n\nexport interface Sector {\n    name:string;\n    isNumerable: boolean; \n    seatStart: number;\n    seatStop: number;\n    mintedByOrg: boolean;\n    price: BigNumber;\n    availableTokenIds: BigNumber[];\n}\n\nexport interface Ticket {\n    sectorName: string;\n    seatNumber: number;\n    minted: boolean;\n    price: BigNumber;\n    sold: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EtherUnitConverter.html":{"url":"classes/EtherUnitConverter.html","title":"class - EtherUnitConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EtherUnitConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/EtherUnitConverter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                etherToWei\n                            \n                            \n                                    Static\n                                weiToEther\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        etherToWei\n                        \n                    \n                \n            \n            \n                \n                    \n                    etherToWei(amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/EtherUnitConverter.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BigNumber\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        weiToEther\n                        \n                    \n                \n            \n            \n                \n                    \n                    weiToEther(amount: BigNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/EtherUnitConverter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BigNumber, ethers } from \"ethers\"\n\nexport default class EtherUnitConverter {\n    \n    // static weiToGwei(amount: number): number {\n    //     return amount * 0.000000001\n    //     return amount.mul(0.000000001)\n    // }\n\n    static weiToEther(amount: BigNumber): string {\n        return ethers.utils.formatEther(amount)\n    }\n\n    // static gweiToWei(amount: BigNumber): BigNumber {\n    //     return amount.mul(1000000000)\n    // }\n\n    // static gweiToEther(amount: BigNumber): BigNumber {\n    //     return amount.mul(0.000000001)\n    // }\n\n    static etherToWei(amount: number): BigNumber {\n        return ethers.utils.parseUnits(amount.toString(), \"ether\")\n        //return amount.mul(1000000000000000000)\n    }\n\n    // static etherToGwei(amount: BigNumber): BigNumber {\n    //     return amount.mul(1000000000)\n    // }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterConcertsPipe.html":{"url":"pipes/FilterConcertsPipe.html","title":"pipe - FilterConcertsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterConcertsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter-concerts.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filterConcerts\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(concerts: DepConcert[], searchText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter-concerts.pipe.ts:17\n                \n            \n\n\n            \n                \n                    Function filters contract concerts based on phrase\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concerts\n                                    \n                                                DepConcert[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAll concerts\n\n\n                                    \n                                \n                                \n                                    searchText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPhrase to search for\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DepConcert[]\n\n                    \n                    \n                        Filtered concerts\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DepConcert } from 'src/types/concert.model';\n\n@Pipe({\n  name: 'filterConcerts',\n})\nexport class FilterConcertsPipe implements PipeTransform {\n\n  /**\n   * Function filters contract concerts based on phrase\n   * \n   * @param concerts - All concerts\n   * @param searchText - Phrase to search for\n   * @returns Filtered concerts\n   *\n   */\n  transform(concerts: DepConcert[], searchText: string): DepConcert[] {\n    if (!concerts) {\n      return [];\n    }\n    if (!searchText) {\n      return concerts;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return concerts.filter((concert) => {\n      return concert.name.toLocaleLowerCase().includes(searchText);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \nTickeDapp 2022 MF\n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                .footer {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'TickeDapp 2022 MF'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id.html":{"url":"interfaces/Id.html","title":"interface - Id","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                                \n                                        \n                                            tokenMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenMetadata:         TokenMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListedTicket.html":{"url":"interfaces/ListedTicket.html","title":"interface - ListedTicket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListedTicket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/marketplace.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            listing\n                                        \n                                \n                                \n                                        \n                                            ticket\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listing:         Listing\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Listing\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ticket:         Ticket\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ticket\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\nimport { Ticket } from \"./concert.model\";\n\nexport interface Listing {\n  tokenId: number;\n  amount: number;\n  price: BigNumber;\n  seller: string;\n}\n\nexport interface ListedTicket {\n  listing: Listing,\n  ticket: Ticket,\n}\n\nexport interface SellerOffer {\n  concertAddr: string;\n  sellerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Listing.html":{"url":"interfaces/Listing.html","title":"interface - Listing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Listing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/marketplace.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seller\n                                        \n                                \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:     BigNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seller\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seller:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\nimport { Ticket } from \"./concert.model\";\n\nexport interface Listing {\n  tokenId: number;\n  amount: number;\n  price: BigNumber;\n  seller: string;\n}\n\nexport interface ListedTicket {\n  listing: Listing,\n  ticket: Ticket,\n}\n\nexport interface SellerOffer {\n  concertAddr: string;\n  sellerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarketplaceComponent.html":{"url":"components/MarketplaceComponent.html","title":"component - MarketplaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarketplaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/marketplace-comp/marketplace.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-marketplace\n            \n\n            \n                styleUrls\n                ./marketplace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./marketplace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/marketplace-comp/marketplace.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-marketplace',\n  templateUrl: './marketplace.component.html',\n  styleUrls: ['./marketplace.component.scss']\n})\nexport class MarketplaceComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n    \n                \n                    ./marketplace.component.scss\n                \n                .link {\n    margin: auto;\n}\n\n.nav-marketplace {\n    border-radius: 25px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarketplaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarketplaceModule.html":{"url":"modules/MarketplaceModule.html","title":"module - MarketplaceModule","body":"\n                   \n\n\n\n\n    Modules\n    MarketplaceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MarketplaceModule\n\n\n\ncluster_MarketplaceModule_imports\n\n\n\ncluster_MarketplaceModule_declarations\n\n\n\n\nAudienceLayoutComponent\n\nAudienceLayoutComponent\n\n\n\nMarketplaceModule\n\nMarketplaceModule\n\nMarketplaceModule -->\n\nAudienceLayoutComponent->MarketplaceModule\n\n\n\n\n\nConcertSectorsComponent\n\nConcertSectorsComponent\n\nMarketplaceModule -->\n\nConcertSectorsComponent->MarketplaceModule\n\n\n\n\n\nConcertSellComponent\n\nConcertSellComponent\n\nMarketplaceModule -->\n\nConcertSellComponent->MarketplaceModule\n\n\n\n\n\nMarketplaceComponent\n\nMarketplaceComponent\n\nMarketplaceModule -->\n\nMarketplaceComponent->MarketplaceModule\n\n\n\n\n\nReselledTicketComponent\n\nReselledTicketComponent\n\nMarketplaceModule -->\n\nReselledTicketComponent->MarketplaceModule\n\n\n\n\n\nStandardTicketComponent\n\nStandardTicketComponent\n\nMarketplaceModule -->\n\nStandardTicketComponent->MarketplaceModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nMarketplaceModule -->\n\nAppRoutingModule->MarketplaceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/marketplace/marketplace.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AudienceLayoutComponent\n                        \n                        \n                            ConcertSectorsComponent\n                        \n                        \n                            ConcertSellComponent\n                        \n                        \n                            MarketplaceComponent\n                        \n                        \n                            ReselledTicketComponent\n                        \n                        \n                            StandardTicketComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarketplaceComponent } from './marketplace-comp/marketplace.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ConcertSellComponent } from './concert-sell/concert-sell.component';\nimport { ConcertSectorsComponent } from './concert-sectors/concert-sectors.component';\nimport { SwiperModule } from \"swiper/angular\";\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AudienceLayoutComponent } from './audience-layout/audience-layout.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { StandardTicketComponent } from './standard-ticket/standard-ticket.component';\nimport { ReselledTicketComponent } from './reselled-ticket/reselled-ticket.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    MarketplaceComponent,\n    ConcertSellComponent,\n    ConcertSectorsComponent,\n    AudienceLayoutComponent,\n    StandardTicketComponent,\n    ReselledTicketComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatInputModule,\n    MatIconModule,\n    RouterModule,\n    SwiperModule,\n    FormsModule,\n    PipesModule\n  ]\n})\nexport class MarketplaceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         Attribute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Attribute[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyConcertsComponent.html":{"url":"components/MyConcertsComponent.html","title":"component - MyConcertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyConcertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/my-concerts/my-concerts.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-concerts\n            \n\n            \n                styleUrls\n                ./my-concerts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-concerts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deployedConcerts\n                            \n                            \n                                    Public\n                                newDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSectors\n                            \n                            \n                                changeDate\n                            \n                            \n                                    Public\n                                    Async\n                                mintTickets\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, walletService: WalletService, ticked1155Service: Ticked1155Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSectors\n                        \n                    \n                \n            \n            \n                \naddSectors(sectors: string[], address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:45\n                \n            \n\n\n            \n                \n                    Add sectors for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlist of new sectors\n\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(concertAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:65\n                \n            \n\n\n            \n                \n                    Changes date of concert for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        mintTickets\n                        \n                    \n                \n            \n            \n                \n                    \n                    mintTickets(contractAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:34\n                \n            \n\n\n            \n                \n                    Fires transaction that mint tickets for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    contractAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withdraw\n                        \n                    \n                \n            \n            \n                \nwithdraw(concertAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:55\n                \n            \n\n\n            \n                \n                    Withdraws money for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deployedConcerts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DepConcert[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { DepConcert } from 'src/types/concert.model';\n\n@Component({\n  selector: 'app-my-concerts',\n  templateUrl: './my-concerts.component.html',\n  styleUrls: ['./my-concerts.component.scss']\n})\nexport class MyConcertsComponent implements OnInit {\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private walletService: WalletService,\n    private ticked1155Service: Ticked1155Service,\n  ) { }\n\n  public deployedConcerts: DepConcert[] = [];\n  public newDate!: Date;\n\n  async ngOnInit() {\n    this.deployedConcerts = await this.tickedFactoryService.getDepContracts(\n      await this.walletService.getWalletAddress() )\n  }\n\n  /**\n   * Fires transaction that mint tickets for specified contract\n   *\n   * @param contractAddress - Address of concert contract \n   * \n   */\n  public async mintTickets(contractAddress: string) {\n    this.ticked1155Service.createAndMintTickets(contractAddress)\n  }\n\n  /**\n   * Add sectors for specified contract\n   *\n   * @param address - Address of concert contract\n   * @param sectors - list of new sectors\n   * \n   */\n  addSectors(sectors: string[], address: string) {\n    this.ticked1155Service.addSectors(address, sectors)\n  }\n\n   /**\n   * Withdraws money for specified contract\n   *\n   * @param contractAddress - Address of concert contract \n   * \n   */\n  withdraw(concertAddress: string) {\n    this.ticked1155Service.withdraw(concertAddress);\n  }\n\n   /**\n   * Changes date of concert for specified contract\n   *\n   * @param contractAddress - Address of concert contract\n   *  \n   */\n  changeDate(concertAddress: string) {\n    if(this.newDate != undefined) {\n      const newDateUnix = (new Date(this.newDate!)).getTime() / 1000;\n      this.ticked1155Service.setDate(concertAddress, newDateUnix);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        Here you can find your concerts:\n    \n\n    \n        \n        {{concert.name}}\n        {{concert.contractAddress}}\n        \n        \n            Withdraw\n        \n        \n            \n             Mint tickets and publish them! \n            \n        \n            You can still add some sectors, then you also have to mint them!\n        \n            \n        \n            Change event date:\n        \n        \n            \n                New date\n                \n            \n            \n                Confirm new date\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./my-concerts.component.scss\n                \n                .concert {\n    padding: 10px;\n    margin: 10px;\n    background-color: rgb(250, 250, 250);\n}\n\n.concert-content {\n    padding: 10px;\n}\n.btn-withdraw {\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 20px;\n}\n\n.btn-new-date {\n    margin-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Here you can find your concerts:                        {{concert.name}}        {{concert.contractAddress}}                            Withdraw                                         Mint tickets and publish them!                                 You can still add some sectors, then you also have to mint them!                                        Change event date:                                            New date                                                        Confirm new date                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyConcertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyNftComponent.html":{"url":"components/MyNftComponent.html","title":"component - MyNftComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyNftComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/my-nft/my-nft.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-nft\n            \n\n            \n                styleUrls\n                ./my-nft.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-nft.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMarketplaceApproved\n                            \n                            \n                                nft$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                sellTicket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alchemyApiService: AlchemyApiService, matDialog: MatDialog, ticked1155Service: Ticked1155Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/my-nft/my-nft.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alchemyApiService\n                                                  \n                                                        \n                                                                        AlchemyApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-nft/my-nft.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellTicket\n                        \n                    \n                \n            \n            \n                \nsellTicket(_nft: NFT)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-nft/my-nft.component.ts:33\n                \n            \n\n\n            \n                \n                    Function opens dialog for selling NFT\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _nft\n                                    \n                                                NFT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMarketplaceApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-nft/my-nft.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nft$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-nft/my-nft.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, tap } from 'rxjs';\nimport { AlchemyApiService } from 'src/app/services/alchemy-api.service';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { NFT, OwnedNFTs } from 'src/types/nft.model';\nimport { CreateOfferDialogComponent } from '../create-offer-dialog/create-offer-dialog.component';\n\n@Component({\n  selector: 'app-my-nft',\n  templateUrl: './my-nft.component.html',\n  styleUrls: ['./my-nft.component.scss']\n})\nexport class MyNftComponent implements OnInit {\n\n  nft$: Observable = new Observable();\n  public isMarketplaceApproved: boolean = false;\n\n  constructor(\n    private alchemyApiService: AlchemyApiService,\n    private matDialog: MatDialog,\n    private ticked1155Service: Ticked1155Service,\n  ) { }\n\n  async ngOnInit() {\n    this.nft$ = await (await this.alchemyApiService.getUserNfts())\n  }\n\n  /**\n   * Function opens dialog for selling NFT \n   * \n   */\n  sellTicket(_nft: NFT) {\n    this.matDialog.open(CreateOfferDialogComponent, {\n      maxHeight: '80%',\n      maxWidth: '80%',\n      data: { nft: _nft }\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n         You own: {{nfts.ownedNfts.length}} NFT's. \n         Your NFT's:\n        \n            \n\n                \n                    \n                        \n                             {{ nft.metadata.name }} \n                             {{ nft.metadata.description }} \n                        \n                        \n                            {{ nft.contract.address }}\n                        \n                    \n                    \n                         Token id: {{ nft.id.tokenId }} \n                         Token type:  {{ nft.id.tokenMetadata.tokenType }}\n                         Balance: {{nft.balance}} \n                        \n                             Concert informations: \n                            \n                                \n                                     Date: {{ attr.value * 1000 | date:'medium' }}\n                                \n                                \n                                     Sector: {{ attr.value }}\n                                \n                                \n                                    \n                                        Not numerated\n                                    \n                                     Seat: {{ attr.value }}\n                                    \n                                    \n                        \n                         \n                            \n                                Create offer\n                               \n                        \n                    \n                \n                        \n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./my-nft.component.scss\n                \n                .nft-container {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.nft {\n    padding: 10px;\n    margin: 10px;\n    background-color: rgb(250, 250, 250);\n}\n\n.nft:hover {\n    transform: scale(1.02);\n}\n.concert-info {\n    padding: 10px;\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             You own: {{nfts.ownedNfts.length}} NFT\\'s.          Your NFT\\'s:                                                                                                             {{ nft.metadata.name }}                              {{ nft.metadata.description }}                                                                             {{ nft.contract.address }}                                                                                         Token id: {{ nft.id.tokenId }}                          Token type:  {{ nft.id.tokenMetadata.tokenType }}                         Balance: {{nft.balance}}                                                      Concert informations:                                                                                                  Date: {{ attr.value * 1000 | date:\\'medium\\' }}                                                                                                     Sector: {{ attr.value }}                                                                                                                                            Not numerated                                                                         Seat: {{ attr.value }}                                                                                                                                                                                     Create offer                                                                                                                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyNftComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyOffersComponent.html":{"url":"components/MyOffersComponent.html","title":"component - MyOffersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyOffersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/my-offers/my-offers.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-offers\n            \n\n            \n                styleUrls\n                ./my-offers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-offers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Public\n                                openUpdateForm\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Private\n                                sellerOffers\n                            \n                            \n                                    Public\n                                sellerTicketsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteOffer\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openEditForm\n                            \n                            \n                                updateOffer\n                            \n                            \n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nftMarketplaceService: NftMarketplaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nftMarketplaceService\n                                                  \n                                                        \n                                                                        NftMarketplaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOffer\n                        \n                    \n                \n            \n            \n                \ndeleteOffer(concertAddr: string, tokenId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:80\n                \n            \n\n\n            \n                \n                    Function deletes offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of Token to delete\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditForm\n                        \n                    \n                \n            \n            \n                \nopenEditForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:52\n                \n            \n\n\n            \n                \n                    Function opens form for editing offer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOffer\n                        \n                    \n                \n            \n            \n                \nupdateOffer(concertAddr: string, currentListing: Listing)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:63\n                \n            \n\n\n            \n                \n                    Function updates offer based on input forms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    currentListing\n                                    \n                                                Listing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent offer\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdraw()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:88\n                \n            \n\n\n            \n                \n                    Withdraws money for owner\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BigNumber\n\n                    \n                \n                \n                    \n                        Default value : BigNumber.from(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openUpdateForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sellerOffers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SellerOffer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sellerTicketsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BigNumber } from 'ethers';\nimport { NftMarketplaceService } from 'src/app/services/smartcontracts/nft-marketplace.service';\nimport EtherUnitConverter from 'src/app/utils/EtherUnitConverter';\nimport { ListedTicket, Listing, SellerOffer } from 'src/types/marketplace.model';\n\n@Component({\n  selector: 'app-my-offers',\n  templateUrl: './my-offers.component.html',\n  styleUrls: ['./my-offers.component.scss']\n})\nexport class MyOffersComponent implements OnInit {\n\n  public balance: BigNumber = BigNumber.from(0);\n  private sellerOffers: SellerOffer[] = [];\n  // concert address -> offers for this concert\n  public sellerTicketsMap: Map = new Map;\n\n  public openUpdateForm = false;\n  public amount = 1;\n  public price!: number;\n\n  constructor(\n    private nftMarketplaceService: NftMarketplaceService\n  ) { }\n\n  async ngOnInit() {\n    this.balance = await this.nftMarketplaceService.getBalance();\n    this.sellerOffers = await this.nftMarketplaceService.getOffersBySeller();\n\n    for(let offer of this.sellerOffers){\n      const ticket: ListedTicket = await this.nftMarketplaceService\n                            .getListedTicket(offer.concertAddr, offer.sellerId)\n      // if someone delete his offer each value in map is set to 0\n      if(ticket.listing.seller != \"0x0000000000000000000000000000000000000000\"){\n        if(this.sellerTicketsMap.has(offer.concertAddr)){\n          let tickets = this.sellerTicketsMap.get(offer.concertAddr)\n          tickets?.push(ticket)\n          this.sellerTicketsMap.set(offer.concertAddr, tickets!)\n        } else {\n          let tickets: ListedTicket[] = [ticket]\n          this.sellerTicketsMap.set(offer.concertAddr, tickets)\n        }\n      }\n    }\n  }\n\n  /**\n   * Function opens form for editing offer \n   * \n   */\n  openEditForm() {\n    this.openUpdateForm = true;\n  }\n  \n  /**\n   * Function updates offer based on input forms\n   *\n   * @param concertAddr - Address of concert contract \n   * @param currentListing - Current offer \n   * \n   */\n  updateOffer(concertAddr: string, currentListing: Listing) {\n    const newListing = {\n      tokenId: currentListing.tokenId,\n      amount: this.amount,\n      price: EtherUnitConverter.etherToWei(this.price),\n      seller: currentListing.seller\n    }\n    this.nftMarketplaceService.updateOffer(concertAddr, newListing)\n  }\n\n  /**\n   * Function deletes offer \n   *\n   * @param concertAddr - Address of concert contract \n   * @param tokenId - ID of Token to delete \n   * \n   */\n  deleteOffer(concertAddr: string, tokenId: number) {\n    this.nftMarketplaceService.deleteOffer(concertAddr, tokenId)\n  }\n\n  /**\n   * Withdraws money for owner\n   *\n   */\n  async withdraw() {\n    const transaction = await this.nftMarketplaceService.withdraw();\n    this.balance = BigNumber.from(0);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        You own: {{ balance | weiToEth }} ETH on martketplace \n        \n        Withdraw ETH\n        \n    \n     Your offers: \n    \n\n        \n            Your ticket offers for concert: {{ sellerTickets.key }}\n        \n\n        \n            \n        \n                \n                    \n                        \n                            \n                                Sector: {{ listElem.ticket.sectorName }} \n                            \n                            \n                                Sector without numerable seats\n                            \n                        \n                        \n                            \n                                Price: {{ listElem.listing.price | weiToEth }} ETH\n                            \n                            \n                                Minted / Not unique\n                            \n                            \n                                Reseller:\n                            \n                            \n                                {{ listElem.listing.seller }}\n                            \n                            \n                                Amount: {{ listElem.listing.amount }}\n                            \n                            \n                                \n                                    EDIT \n                                \n                                \n                                    DELETE\n                                \n                            \n\n                            \n                                \n                                    \n                                        Amount\n                                        \n                                    \n                                \n                                \n                                    \n                                        Price* (1 token)\n                                        \n                                          ETH\n                                    \n                                    \n                                        *price contains 5% fee that will be charged for organizator\n                                    \n                                \n                                \n                                \n                                    Update offer \n                                \n                            \n\n                        \n        \n                    \n                 \n                \n                        \n                    \n                        \n                            \n                                Seat: {{ listElem.ticket.seatNumber }} \n                            \n                            \n                                Sector: {{ listElem.ticket.sectorName }}\n                            \n                        \n                        \n                            \n                                Price: {{ listElem.listing.price | weiToEth }} ETH\n                            \n                            \n                                Minted / Unique\n                            \n                            \n                                Reseller:\n                            \n                            \n                                {{ listElem.listing.seller }}\n                            \n        \n                            \n                                \n                                    EDIT \n                                \n                                \n                                    DELETE\n                                \n                            \n                            \n                                \n                                    \n                                        Price* (1 token)\n                                        \n                                          ETH\n                                    \n                                    \n                                        *price contains 5% fee that will be charged for organizator\n                                    \n                                \n                                \n                                \n                                    Update offer \n                                \n                            \n                        \n                    \n                \n        \n            \n         \n\n    \n\n\n\n    \n\n    \n                \n                    ./my-offers.component.scss\n                \n                .tickets {\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n}\n\n.ticket {\n  margin: 10px;\n}\n\n.ticket:hover {\n    transform: scale(1.01);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            You own: {{ balance | weiToEth }} ETH on martketplace                 Withdraw ETH                 Your offers:                         Your ticket offers for concert: {{ sellerTickets.key }}                                                                                                                                                            Sector: {{ listElem.ticket.sectorName }}                                                                                         Sector without numerable seats                                                                                                                                        Price: {{ listElem.listing.price | weiToEth }} ETH                                                                                        Minted / Not unique                                                                                        Reseller:                                                                                        {{ listElem.listing.seller }}                                                                                        Amount: {{ listElem.listing.amount }}                                                                                                                            EDIT                                                                                                     DELETE                                                                                                                                                                                                    Amount                                                                                                                                                                                                                        Price* (1 token)                                                                                  ETH                                                                                                                *price contains 5% fee that will be charged for organizator                                                                                                                                                                        Update offer                                                                                                                                                                                                                                                                                  Seat: {{ listElem.ticket.seatNumber }}                                                                                         Sector: {{ listElem.ticket.sectorName }}                                                                                                                                        Price: {{ listElem.listing.price | weiToEth }} ETH                                                                                        Minted / Unique                                                                                        Reseller:                                                                                        {{ listElem.listing.seller }}                                                                                                                                    EDIT                                                                                                     DELETE                                                                                                                                                                                                    Price* (1 token)                                                                                  ETH                                                                                                                *price contains 5% fee that will be charged for organizator                                                                                                                                                                        Update offer                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyOffersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NFT.html":{"url":"interfaces/NFT.html","title":"interface - NFT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NFT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            contract\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            tokenUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contract:         Contract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Contract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenUri:         TokenUri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenUri\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationBarComponent.html":{"url":"components/NavigationBarComponent.html","title":"component - NavigationBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation-bar/navigation-bar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation-bar\n            \n\n            \n                styleUrls\n                ./navigation-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connectWallet\n                            \n                            \n                                    Async\n                                goToAdminPanel\n                            \n                            \n                                    Async\n                                goToConcertForm\n                            \n                            \n                                goToMarketplace\n                            \n                            \n                                    Async\n                                goToMyConcerts\n                            \n                            \n                                goToMyNfts\n                            \n                            \n                                goToMyOffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService, tickedFactoryService: TickedFactoryService, router: Router, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navigation-bar/navigation-bar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connectWallet\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:25\n                \n            \n\n\n            \n                \n                    Function that connects wallet\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        goToAdminPanel\n                        \n                    \n                \n            \n            \n                \n                    \n                    goToAdminPanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:72\n                \n            \n\n\n            \n                \n                    Function that redirects to admin panel page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        goToConcertForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    goToConcertForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:36\n                \n            \n\n\n            \n                \n                    Function that redirects to concert-form page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMarketplace\n                        \n                    \n                \n            \n            \n                \ngoToMarketplace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:89\n                \n            \n\n\n            \n                \n                    Function that redirects to marketplace page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        goToMyConcerts\n                        \n                    \n                \n            \n            \n                \n                    \n                    goToMyConcerts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:54\n                \n            \n\n\n            \n                \n                    Function that redirects to my-concerts page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMyNfts\n                        \n                    \n                \n            \n            \n                \ngoToMyNfts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:98\n                \n            \n\n\n            \n                \n                    Function that redirects to my-nfts page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMyOffers\n                        \n                    \n                \n            \n            \n                \ngoToMyOffers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:107\n                \n            \n\n\n            \n                \n                    Function that redirects to my-offers page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { WalletService } from 'src/app/services/wallet.service';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.scss']\n})\nexport class NavigationBarComponent {\n\n  constructor(\n    private walletService: WalletService,\n    private tickedFactoryService: TickedFactoryService,\n    private router: Router,\n    private snackbarService: SnackbarService,\n  ) { }\n\n  /**\n   * Function that connects wallet\n   *\n   */\n  async connectWallet() {\n    let isLogged = await this.walletService.logIn();\n    if(isLogged){\n      this.snackbarService.info(\"You are already connected\")\n    }\n  }\n\n  /**\n   * Function that redirects to concert-form page\n   *\n   */\n  async goToConcertForm() {\n    const authorization: boolean = await this.tickedFactoryService.authorizeAccess(\n      await this.walletService.getWalletAddress()\n      );\n\n    if(authorization) {\n      const navigationDetails: string[] = ['/create-concert'];\n      this.router.navigate(navigationDetails);\n    } else {\n      this.snackbarService.error(\"Access not authorized!\")\n      return;\n    }\n  }\n\n  /**\n   * Function that redirects to my-concerts page\n   *\n   */\n  async goToMyConcerts() {\n    const authorization: boolean = await this.tickedFactoryService.authorizeAccess(\n      await this.walletService.getWalletAddress()\n      );\n\n    if(authorization) {\n      const navigationDetails: string[] = ['/my-concerts'];\n      this.router.navigate(navigationDetails);\n    } else {\n      this.snackbarService.error(\"Access not authorized!\")\n      return;\n    }\n  }\n\n  /**\n   * Function that redirects to admin panel page\n   *\n   */\n  async goToAdminPanel() {\n    const isOwner: boolean = await this.tickedFactoryService.validateOwner(\n      await this.walletService.getWalletAddress()\n    )\n    \n    if(isOwner){\n      const navigationDetails: string[] = ['/whitelist'];\n      this.router.navigate(navigationDetails);\n    } else {\n      this.snackbarService.error(\"Access not authorized!\")\n    }\n  }\n\n  /**\n   * Function that redirects to marketplace page\n   *\n   */\n  goToMarketplace() {\n    const navigationDetails: string[] = ['/marketplace/sell'];\n    this.router.navigate(navigationDetails);\n  }\n\n  /**\n   * Function that redirects to my-nfts page\n   *\n   */\n  goToMyNfts() {\n    const navigationDetails: string[] = ['/my-nft'];\n    this.router.navigate(navigationDetails);\n  }\n\n  /**\n   * Function that redirects to my-offers page\n   *\n   */\n  goToMyOffers() {\n    const navigationDetails: string[] = ['/my-offers'];\n    this.router.navigate(navigationDetails);\n  }\n\n}\n\n    \n\n    \n        \n    \n        perm_data_setting\n        Concert Management\n    \n\n    \n        \n            library_add\n            Create Concert\n        \n            event\n            My Concerts\n            \n            lock\n            Admin Panel\n    \n\n    \n        home\n        tickeD MARKETPLACE\n    \n\n    \n        My Account\n        account_circle\n    \n\n    \n        \n        account_balance_wallet\n        Connect wallet\n        \n         local_offer\n        My NFTs        \n        \n        shopping_cart\n        My Offers\n    \n\n\n    \n\n    \n                \n                    ./navigation-bar.component.scss\n                \n                .btn-log-in {\n    float: right;\n}\n\n.nav-container {\n    display: flex;\n    gap: 10px;\n    position: fixed;\n    top: 0px;\n    width: 100%;\n    z-index: 9990;\n}\n\n.btn-marketplace {\n    margin: auto;\n    flex-grow: 3;\n    background-color: #683ab72e;\n    position: sticky;\n}\n    \n.btn-marketplace:hover {\n    transform: scale(1.02);\n    background-color: #673AB7;\n    color: white;\n    position: sticky;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            perm_data_setting        Concert Management                            library_add            Create Concert                    event            My Concerts                        lock            Admin Panel                home        tickeD MARKETPLACE                My Account        account_circle                        account_balance_wallet        Connect wallet                 local_offer        My NFTs                        shopping_cart        My Offers    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NftMarketplaceService.html":{"url":"injectables/NftMarketplaceService.html","title":"injectable - NftMarketplaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NftMarketplaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smartcontracts/nft-marketplace.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                buyTicket\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOffer\n                            \n                            \n                                    Public\n                                    Async\n                                getBalance\n                            \n                            \n                                    Private\n                                    Static\n                                    Async\n                                getContract\n                            \n                            \n                                    Public\n                                    Async\n                                getListedTicket\n                            \n                            \n                                    Public\n                                    Async\n                                getOffersBySeller\n                            \n                            \n                                    Public\n                                    Async\n                                getSellerIds\n                            \n                            \n                                    Public\n                                    Async\n                                insertOffer\n                            \n                            \n                                    Public\n                                    Async\n                                updateOffer\n                            \n                            \n                                    Public\n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        buyTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyTicket(concertAddr: string, owner: string, tokenId: number, price: BigNumber, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:41\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to buy ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nOwner of smartcontract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \namount of tokens to buy (by default = 1)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOffer(concertAddr: string, tokenId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:60\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to delete ticket offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of token to delete\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        getContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(bySigner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    bySigner\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getListedTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    getListedTicket(concertAddr: string, sellerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sellerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getOffersBySeller\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOffersBySeller()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSellerIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSellerIds(concertAddr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        insertOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOffer(concertAddr: string, listing: Listing)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:84\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to insert ticket offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    listing\n                                    \n                                                Listing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew offer details\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOffer(concertAddr: string, listing: Listing)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:72\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to update ticket offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    listing\n                                    \n                                                Listing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew offer details\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdraw()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:22\n                \n            \n\n\n            \n                \n                    Withdraws money for currently logged wallet\n\n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BigNumber, ethers } from 'ethers';\nimport { environment } from 'src/environments/environment';\nimport { ListedTicket, Listing, SellerOffer } from 'src/types/marketplace.model';\n\nimport nftMarketplace from '../../../../artifacts/contracts/nftMarketplace.sol/nftMarketplace.json'\nimport { WalletService } from '../wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NftMarketplaceService {\n\n  constructor(\n    private walletService: WalletService,\n  ) { }\n\n  /**\n   * Withdraws money for currently logged wallet\n   * \n   */\n  public async withdraw(){\n    const contract = await NftMarketplaceService.getContract(true)\n    try {\n      return await contract['withdraw'](this.walletService.getWalletAddress())\n    } catch(e: any) {\n      console.log(e.error.message )\n    }\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to buy ticket\n   *\n   * @param concertAddr - Address of concert contract \n   * @param owner - Owner of smartcontract\n   * @param tokenId - ID of token to buy \n   * @param price - ID of token to buy \n   * @param amount - amount of tokens to buy (by default = 1)\n   * \n   */\n  public async buyTicket(\n    concertAddr: string, \n    owner: string, \n    tokenId: number,\n    price: BigNumber,\n    amount = 1) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['buyTicket'](concertAddr, owner, tokenId, amount, {\n      value: ethers.utils.parseUnits((price.mul(amount)).toString(), \"wei\")\n    })\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to delete ticket offer\n   *\n   * @param concertAddr - Address of concert contract \n   * @param tokenId - ID of token to delete \n   * \n   */\n  public async deleteOffer(concertAddr: string, tokenId: number) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['deleteOffer'](concertAddr, tokenId)\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to update ticket offer\n   *\n   * @param concertAddr - Address of concert contract \n   * @param listing - New offer details\n   * \n   */\n  public async updateOffer(concertAddr: string, listing: Listing) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['updateOffer'](concertAddr, listing)\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to insert ticket offer\n   *\n   * @param concertAddr - Address of concert contract \n   * @param listing - New offer details\n   * \n   */\n  public async insertOffer(concertAddr: string, listing: Listing) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['insertOffer'](concertAddr, listing)\n  }\n\n  public async getSellerIds(concertAddr: string): Promise{\n    const contract = await NftMarketplaceService.getContract()\n    return contract['getSellerIds'](concertAddr)\n  }\n  \n  public async getOffersBySeller(): Promise{\n    const contract = await NftMarketplaceService.getContract()\n    return contract['getOffersBySeller'](\n      await this.walletService.getWalletAddress()\n    )\n  }\n\n  public async getListedTicket(concertAddr: string, sellerId: string): Promise {\n    const contract = await NftMarketplaceService.getContract()\n    return contract['getListedTicket'](concertAddr, sellerId)\n  }\n\n  public async getBalance(): Promise{\n    const contract = await NftMarketplaceService.getContract()\n    return contract['balance'](\n      await this.walletService.getWalletAddress()\n    )\n  }\n\n  private static async getContract(bySigner= false) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    return new ethers.Contract(\n      environment.contractNftMarketplaceAddress,\n      nftMarketplace.abi,\n      bySigner ? signer : provider\n    )\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnedNFTs.html":{"url":"interfaces/OwnedNFTs.html","title":"interface - OwnedNFTs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OwnedNFTs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ownedNfts\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ownedNfts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownedNfts:         NFT[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NFT[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n     404 \n     Page not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                h2, h3 {\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     404      Page not found!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nFilterConcertsPipe\n\nFilterConcertsPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nFilterConcertsPipe->PipesModule\n\n\n\n\n\nWeiToEthPipe\n\nWeiToEthPipe\n\nPipesModule -->\n\nWeiToEthPipe->PipesModule\n\n\n\n\n\nFilterConcertsPipe \n\nFilterConcertsPipe \n\nFilterConcertsPipe  -->\n\nPipesModule->FilterConcertsPipe \n\n\n\n\n\nWeiToEthPipe \n\nWeiToEthPipe \n\nWeiToEthPipe  -->\n\nPipesModule->WeiToEthPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterConcertsPipe\n                        \n                        \n                            WeiToEthPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilterConcertsPipe\n                        \n                        \n                            WeiToEthPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WeiToEthPipe } from './wei-to-eth.pipe';\nimport { FilterConcertsPipe } from './filter-concerts.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    WeiToEthPipe,\n    FilterConcertsPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    WeiToEthPipe,\n    FilterConcertsPipe\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReselledTicketComponent.html":{"url":"components/ReselledTicketComponent.html","title":"component - ReselledTicketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReselledTicketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reselled-ticket\n            \n\n            \n                styleUrls\n                ./reselled-ticket.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reselled-ticket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                    Public\n                                listing\n                            \n                            \n                                    Private\n                                sellerIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyTicket\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                concertAddress\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nftMarketplaceService: NftMarketplaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nftMarketplaceService\n                                                  \n                                                        \n                                                                        NftMarketplaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        concertAddress\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyTicket\n                        \n                    \n                \n            \n            \n                \nbuyTicket(owner: string, tokenId: number, price: BigNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:44\n                \n            \n\n\n            \n                \n                    Function that fires transaction for buying ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of token owner\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nToken ID\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nToken price\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listing\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ListedTicket[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sellerIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BigNumber } from 'ethers';\nimport { NftMarketplaceService } from 'src/app/services/smartcontracts/nft-marketplace.service';\nimport { ListedTicket } from 'src/types/marketplace.model';\n\n@Component({\n  selector: 'app-reselled-ticket',\n  templateUrl: './reselled-ticket.component.html',\n  styleUrls: ['./reselled-ticket.component.scss']\n})\nexport class ReselledTicketComponent implements OnInit {\n\n  @Input() concertAddress!: string;\n\n  private sellerIds: string[] = []; \n  public listing: ListedTicket[] = [];\n  amount = 1;\n\n  constructor(\n    private nftMarketplaceService: NftMarketplaceService,\n  ) { }\n\n  async ngOnInit() {\n    this.sellerIds = await this.nftMarketplaceService.getSellerIds(this.concertAddress);\n    \n    for(let sellerId of this.sellerIds) {\n      const ticket: ListedTicket = await this.nftMarketplaceService\n                                          .getListedTicket(this.concertAddress, sellerId)\n      // if someone delete his offer each value in map is set to 0\n      if(ticket.listing.seller != \"0x0000000000000000000000000000000000000000\"){\n        this.listing.push(ticket);\n      }\n    }\n  }\n\n  /**\n   * Function that fires transaction for buying ticket \n   *\n   * @param owner - Address of token owner \n   * @param tokenId - Token ID \n   * @param price - Token price\n   * \n   */\n  buyTicket(owner: string, tokenId: number, price: BigNumber){\n    this.nftMarketplaceService.buyTicket(\n                                this.concertAddress,\n                                owner,\n                                tokenId,\n                                price,\n                                this.amount)\n  }\n\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                \n                    \n                        Sector: {{ listElem.ticket.sectorName }} \n                    \n                    \n                        Sector without numerable seats\n                    \n                \n                \n                    \n                        Price: {{ listElem.listing.price | weiToEth }} ETH\n                    \n                    \n                        Minted / Not unique\n                    \n                    \n                        Reseller:\n                    \n                    \n                        {{ listElem.listing.seller }}\n                    \n                    \n                        Amount: {{ listElem.listing.amount }}\n                    \n                    \n                        \n                            Number of tickets\n                            \n                        \n\n                        \n                            BUY\n                        \n                    \n                \n\n            \n         \n        \n                \n            \n                \n                    \n                        Seat: {{ listElem.ticket.seatNumber }} \n                    \n                    \n                        Sector: {{ listElem.ticket.sectorName }}\n                    \n                \n                \n                    \n                        Price: {{ listElem.listing.price | weiToEth }} ETH\n                    \n                    \n                        Minted / Unique\n                    \n                    \n                        Reseller:\n                    \n                    \n                        {{ listElem.listing.seller }}\n                    \n\n                    \n                        \n                            BUY\n                        \n                    \n                \n            \n        \n\n    \n \n    \n\n    \n                \n                    ./reselled-ticket.component.scss\n                \n                .tickets {\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n}\n\n.ticket {\n  margin: 10px;\n}\n\n.ticket:hover {\n    transform: scale(1.02);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Sector: {{ listElem.ticket.sectorName }}                                                                 Sector without numerable seats                                                                                                Price: {{ listElem.listing.price | weiToEth }} ETH                                                                Minted / Not unique                                                                Reseller:                                                                {{ listElem.listing.seller }}                                                                Amount: {{ listElem.listing.amount }}                                                                                            Number of tickets                                                                                                        BUY                                                                                                                                                                                 Seat: {{ listElem.ticket.seatNumber }}                                                                 Sector: {{ listElem.ticket.sectorName }}                                                                                                Price: {{ listElem.listing.price | weiToEth }} ETH                                                                Minted / Unique                                                                Reseller:                                                                {{ listElem.listing.seller }}                                                                                            BUY                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReselledTicketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sector.html":{"url":"interfaces/Sector.html","title":"interface - Sector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/concert.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableTokenIds\n                                        \n                                \n                                \n                                        \n                                            isNumerable\n                                        \n                                \n                                \n                                        \n                                            mintedByOrg\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seatStart\n                                        \n                                \n                                \n                                        \n                                            seatStop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableTokenIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableTokenIds:     BigNumber[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNumerable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNumerable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mintedByOrg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mintedByOrg:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:     BigNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seatStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seatStart:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seatStop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seatStop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\n\nexport interface DepConcert {\n    contractAddress: string,\n    name: string\n}\n\nexport interface Sector {\n    name:string;\n    isNumerable: boolean; \n    seatStart: number;\n    seatStop: number;\n    mintedByOrg: boolean;\n    price: BigNumber;\n    availableTokenIds: BigNumber[];\n}\n\nexport interface Ticket {\n    sectorName: string;\n    seatNumber: number;\n    minted: boolean;\n    price: BigNumber;\n    sold: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SectorComponent.html":{"url":"components/SectorComponent.html","title":"component - SectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/sector/sector.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sector\n            \n\n            \n                styleUrls\n                ./sector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSector\n                            \n                            \n                                confirmSectors\n                            \n                            \n                                deleteSector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                createConcertForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sectorsEvent\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sectors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/sector/sector.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        createConcertForm\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/concert-management/sector/sector.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sectorsEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/concert-management/sector/sector.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSector\n                        \n                    \n                \n            \n            \n                \naddSector()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/sector/sector.component.ts:32\n                \n            \n\n\n            \n                \n                    Function that adds new forms for sectors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmSectors\n                        \n                    \n                \n            \n            \n                \nconfirmSectors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/sector/sector.component.ts:56\n                \n            \n\n\n            \n                \n                    Function that creates structure of information based on provided data in forms\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSector\n                        \n                    \n                \n            \n            \n                \ndeleteSector(sectorIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/sector/sector.component.ts:48\n                \n            \n\n\n            \n                \n                    Function that deletes sector from structure\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectorIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    sectors: this.formBuilder.array([])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/sector/sector.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sectors\n                    \n                \n\n                \n                    \n                        getsectors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/concert-management/sector/sector.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport EtherUnitConverter from 'src/app/utils/EtherUnitConverter';\n\n@Component({\n  selector: 'app-sector',\n  templateUrl: './sector.component.html',\n  styleUrls: ['./sector.component.scss']\n})\nexport class SectorComponent {\n\n  // toggle for specifying button at the bottom of comp\n  @Input() createConcertForm: boolean = false;\n\n  @Output() sectorsEvent = new EventEmitter();\n\n  form = this.formBuilder.group({\n    sectors: this.formBuilder.array([])\n  })\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { }\n\n  get sectors() {\n    return this.form.controls['sectors'] as FormArray\n  }\n\n  /**\n   * Function that adds new forms for sectors\n   */\n  addSector() {\n    const sectorForm = this.formBuilder.group({\n      sectorName: ['', Validators.required],\n      isNumerable:  ['', Validators.required],\n      seatStart:  ['1', Validators.required],\n      seatStop:  ['', Validators.required],\n      mintNow:   ['', Validators.required],\n      price:  ['', Validators.required]\n    })\n\n    this.sectors.push(sectorForm)\n  }\n\n  /**\n   * Function that deletes sector from structure\n   */\n  deleteSector(sectorIndex: number) {\n    this.sectors.removeAt(sectorIndex)\n  }\n\n  \n  /**\n   * Function that creates structure of information based on provided data in forms\n   */\n  confirmSectors() {\n    let sectorsArray: string [] =[];\n    for(let sector of this.sectors.value){\n      sectorsArray.push(sector.sectorName)\n      let isNumerableString = sector.isNumerable ? \"1\" : \"0\"\n      sectorsArray.push(isNumerableString)\n      sectorsArray.push(sector.seatStart.toString())\n      sectorsArray.push(sector.seatStop.toString())\n      if(sector.isNumerable) {\n        let mintNowString = sector.mintNow ? \"1\" : \"0\"\n        sectorsArray.push(mintNowString)\n      } else {\n        sectorsArray.push(\"0\")\n      }\n      sectorsArray.push(EtherUnitConverter.etherToWei(sector.price).toString())\n    }\n    this.sectorsEvent.emit(sectorsArray);\n  }\n\n}\n\n    \n\n    \n        Provide details of each sector:\n\n\n    \n        \n            \n\n                \n                    Sector Name\n                    \n                \n\n                \n                    Numberable Seats\n                \n\n                \n                    \n                        Seats from\n                        \n                    \n                \n                \n                \n                    Seats to\n                    \n                \n\n                \n                    Price (1 ticket)\n                    \n                      ETH\n                \n\n                \n                    \n                        Minted by organizator\n                    \n                \n\n                \n                    delete_forever\n                \n            \n        \n    \n\n    \n        \n            add\n        \n\n        \n            \n                Confirm sectors\n            \n        \n\n        \n            \n                Confirm new sectors\n            \n        \n          \n\n\n    \n\n    \n                \n                    ./sector.component.scss\n                \n                .form {\n  width: 100%;\n}\n\n.form-full-width {\n  padding: 5px;\n}\n\n.form-numbers {\n  width: 15%;\n  padding: 5px;\n}\n\ninput.input-price::-webkit-outer-spin-button,\ninput.input-price::-webkit-inner-spin-button{\n  display: none;\n}\n\n.nav-button {\n  padding: 10px;\n}\n.sectors-btn {\n  margin-top: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Provide details of each sector:                                                            Sector Name                                                                        Numberable Seats                                                                            Seats from                                                                                                                Seats to                                                                        Price (1 ticket)                                          ETH                                                                            Minted by organizator                                                                        delete_forever                                                                add                                            Confirm sectors                                                        Confirm new sectors                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SellerOffer.html":{"url":"interfaces/SellerOffer.html","title":"interface - SellerOffer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SellerOffer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/marketplace.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            concertAddr\n                                        \n                                \n                                \n                                        \n                                            sellerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concertAddr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concertAddr:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\nimport { Ticket } from \"./concert.model\";\n\nexport interface Listing {\n  tokenId: number;\n  amount: number;\n  price: BigNumber;\n  seller: string;\n}\n\nexport interface ListedTicket {\n  listing: Listing,\n  ticket: Ticket,\n}\n\nexport interface SellerOffer {\n  concertAddr: string;\n  sellerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/snackbar.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:19\n                \n            \n\n\n            \n                \n                    Function displays error snackbar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        error snackbar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:39\n                \n            \n\n\n            \n                \n                    Function displays info snackbar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        info snackbar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:29\n                \n            \n\n\n            \n                \n                    Function displays success snackbar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        success snackbar\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(\n    private snackBar: MatSnackBar,\n  ) { }\n\n  /**\n   * Function displays error snackbar\n   * \n   * @returns error snackbar\n   * \n   */\n  error(message: string) {\n    return this.snackBar.open(message, \"Close\", {panelClass: ['snackbar-error']});\n  }\n\n  /**\n   * Function displays success snackbar\n   * \n   * @returns success snackbar\n   * \n   */\n  success(message: string) {\n    return this.snackBar.open(message, \"Close\", {panelClass: ['snackbar-success']});\n  }\n\n  /**\n   * Function displays info snackbar\n   * \n   * @returns info snackbar\n   * \n   */\n  info(message: string) {\n    return this.snackBar.open(message, \"Close\", {panelClass: ['snackbar-info']});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StandardTicketComponent.html":{"url":"components/StandardTicketComponent.html","title":"component - StandardTicketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StandardTicketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/standard-ticket/standard-ticket.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-standard-ticket\n            \n\n            \n                styleUrls\n                ./standard-ticket.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./standard-ticket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                ticketsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyTicket\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                validateAvailability\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                concertAddress\n                            \n                            \n                                sector\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ticked1155Service: Ticked1155Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        concertAddress\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sector\n                    \n                \n                \n                    \n                        Type :         Sector\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyTicket\n                        \n                    \n                \n            \n            \n                \nbuyTicket(tokenId: number, price: BigNumber, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:72\n                \n            \n\n\n            \n                \n                    Function that fires transaction for buying ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nToken ID\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nToken price\n\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \nAmount of tokens to buy (by default sets to 1)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAvailability\n                        \n                    \n                \n            \n            \n                \nvalidateAvailability(allTickets: BigNumber[], soldTickets: BigNumber[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that calculate tokens availabilty\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allTickets\n                                    \n                                            BigNumber[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of all possible tokens\n\n\n                                    \n                                \n                                \n                                    soldTickets\n                                    \n                                            BigNumber[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of already sold tickets\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        List of currently available tokens\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { BigNumber } from 'ethers';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { Sector, Ticket } from 'src/types/concert.model';\n\n@Component({\n  selector: 'app-standard-ticket',\n  templateUrl: './standard-ticket.component.html',\n  styleUrls: ['./standard-ticket.component.scss']\n})\nexport class StandardTicketComponent implements OnChanges {\n\n  @Input() concertAddress!: string;\n  @Input() sector!: Sector;\n  // map - ticketId -> tickerAttr\n  ticketsMap: Map = new Map;\n  amount = 1;\n\n  constructor(\n    private ticked1155Service: Ticked1155Service,\n  ) { }\n  \n  async ngOnChanges(changes: SimpleChanges) {\n    if(changes['sector'].currentValue == undefined || \n              this.concertAddress == undefined ){\n      return\n    }\n\n    this.ticketsMap.clear();\n    const availableTickets: number[] = this.validateAvailability(\n      changes['sector'].currentValue.availableTokenIds, \n      await this.ticked1155Service.getSectorSoldIds(\n        this.concertAddress, changes['sector'].currentValue.name)\n      );\n\n    for(let tokenId of availableTickets) {\n      // DEPRECATED APPROACH: because reading from chain is free I think it's better to make more calls than iterate \n      // in smartcontract through sectors and available id's and deleting them when they are sold (we have to pay for code execution)\n      // NEW APPROACH: store sold tickets ids in smartcontract map then use validateAvailability\n      const ticket = await this.ticked1155Service.getTicketAttr(this.concertAddress, tokenId);\n      this.ticketsMap.set(tokenId, ticket)\n    }\n  }\n\n  /**\n   * Function that calculate tokens availabilty \n   *\n   * @param allTickets - List of all possible tokens \n   * @param soldTickets - List of already sold tickets\n   * @returns List of currently available tokens\n   * \n   */\n  validateAvailability(allTickets: BigNumber[], soldTickets: BigNumber[]): number[] {\n      let resultArray: number[] = [];\n      for(let ticketId of allTickets){\n        // if soldTickets does not contain ticketId -> push\n        if( !soldTickets.some(id => id.toNumber() == ticketId.toNumber())) {\n          resultArray.push(ticketId.toNumber());\n        }\n      }\n      return resultArray;\n  }\n\n  /**\n   * Function that fires transaction for buying ticket \n   *\n   * @param tokenId - Token ID \n   * @param price - Token price\n   * @param amount - Amount of tokens to buy (by default sets to 1)\n   * \n   */\n  buyTicket(tokenId: number, price: BigNumber, amount = 1) {\n    this.ticked1155Service.buyTicket(\n      this.concertAddress, tokenId, price, amount)\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n            \n                \n                    \n                        Sector: {{ ticket.value.sectorName }}\n                    \n                \n                \n                    \n                        Sector without numerable seats\n                    \n                    \n                        Price: {{ ticket.value.price | weiToEth }} ETH\n                    \n                    \n                        Minted by organizator: \n                         \n                            highlight_off\n                        \n                        \n                            check_circle_outline \n                        \n                    \n\n                    \n                        \n                            Number of tickets\n                            \n                            \n                        \n                    \n                        \n                            BUY\n                        \n                    \n                    \n                \n\n            \n         \n        \n                \n            \n                \n                    \n                        Seat: {{ ticket.value.seatNumber }} \n                    \n                    \n                        Sector: {{ ticket.value.sectorName }}\n                    \n                \n                \n                    \n                        Price: {{ ticket.value.price | weiToEth }} ETH\n                    \n                    \n                        Minted by organizator: \n                         \n                            highlight_off\n                        \n                        \n                            check_circle_outline \n                        \n                    \n\n                    \n                        \n                            BUY\n                        \n                    \n                \n            \n        \n\n    \n \n    \n\n    \n                \n                    ./standard-ticket.component.scss\n                \n                .tickets {\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n}\n\n.ticket {\n  margin: 10px;\n}\n\n.ticket:hover {\n    transform: scale(1.02);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Sector: {{ ticket.value.sectorName }}                                                                                                Sector without numerable seats                                                                Price: {{ ticket.value.price | weiToEth }} ETH                                                                Minted by organizator:                                                      highlight_off                                                                            check_circle_outline                                                                                                                     Number of tickets                                                                                                                                                        BUY                                                                                                                                                                                                     Seat: {{ ticket.value.seatNumber }}                                                                 Sector: {{ ticket.value.sectorName }}                                                                                                Price: {{ ticket.value.price | weiToEth }} ETH                                                                Minted by organizator:                                                      highlight_off                                                                            check_circle_outline                                                                                                                     BUY                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StandardTicketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Ticked1155Service.html":{"url":"injectables/Ticked1155Service.html","title":"injectable - Ticked1155Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Ticked1155Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smartcontracts/ticked1155.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addSectors\n                            \n                            \n                                    Public\n                                    Async\n                                buyTicket\n                            \n                            \n                                    Public\n                                    Async\n                                createAndMintTickets\n                            \n                            \n                                    Private\n                                    Static\n                                    Async\n                                getContract\n                            \n                            \n                                    Public\n                                    Async\n                                getDate\n                            \n                            \n                                    Public\n                                    Async\n                                getDescription\n                            \n                            \n                                    Public\n                                    Async\n                                getImage\n                            \n                            \n                                    Public\n                                    Async\n                                getName\n                            \n                            \n                                    Public\n                                    Async\n                                getSectors\n                            \n                            \n                                    Public\n                                    Async\n                                getSectorSoldIds\n                            \n                            \n                                    Public\n                                    Async\n                                getTicketAttr\n                            \n                            \n                                    Public\n                                    Async\n                                isApprovedForAll\n                            \n                            \n                                    Public\n                                    Async\n                                setApprovalForAll\n                            \n                            \n                                    Public\n                                    Async\n                                setDate\n                            \n                            \n                                    Public\n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smartcontracts/ticked1155.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addSectors\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSectors(address: string, sectors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:41\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to add sectors structure\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStructure of sectors\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        buyTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyTicket(address: string, tokenId: number, price: BigNumber, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:55\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to buy ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \namount of tokens to buy (by default = 1)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createAndMintTickets\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAndMintTickets(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:25\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to create and mint tokens\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Status of transaction\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        getContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(address: string, bySigner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bySigner\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDate(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDescription(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getName(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSectors\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSectors(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSectorSoldIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSectorSoldIds(address: string, sector: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getTicketAttr\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTicketAttr(address: string, tokenId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isApprovedForAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    isApprovedForAll(address: string, account: string, operator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:87\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to check approval of tokens\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nOwner of tokens\n\n\n                                    \n                                \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress to check\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        State of approval\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setApprovalForAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    setApprovalForAll(address: string, operator: string, approved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    approved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDate(address: string, newDate: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newDate\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdraw(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:69\n                \n            \n\n\n            \n                \n                    Withdraws money for currently logged wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BigNumber, ethers } from \"ethers\";\nimport { Sector, Ticket } from 'src/types/concert.model';\nimport ticked1155 from '../../../../artifacts/contracts/tickeD1155.sol/tickeD1155.json'\nimport { WalletService } from '../wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ticked1155Service {\n\n  constructor(\n    private walletService: WalletService,\n  ) { }\n\n\n  /**\n   * Function interacts with smartcontract and fires transaction to create and mint tokens\n   *\n   * @param address - Address of concert contract \n   * @returns Status of transaction\n   * \n   */\n  public async createAndMintTickets(address: string) {\n    const contract = await Ticked1155Service.getContract(address, true)\n\n    const transaction = await contract['createAndMintTickets']()\n    const tx = await transaction.wait()\n\n    return tx.status === 1 \n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to add sectors structure\n   *\n   * @param address - Address of concert contract \n   * @param sectors - Structure of sectors \n   * \n   */  \n  public async addSectors(address: string, sectors: string[]) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    await contract['addSectors'](sectors)\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to buy ticket\n   *\n   * @param address - Address of concert contract \n   * @param tokenId - ID of token to buy \n   * @param price - ID of token to buy \n   * @param amount - amount of tokens to buy (by default = 1)\n   * \n   */\n  public async buyTicket(address: string, tokenId: number, price: BigNumber, amount = 1) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    const transaction = await contract['buyTicket'](tokenId, amount, {\n      value: ethers.utils.parseUnits((price.mul(amount)).toString(), \"wei\")\n    })\n    const tx = await transaction.wait();\n\n    return tx.status === 1\n  }\n\n  /**\n   * Withdraws money for currently logged wallet\n   * \n   */\n  public async withdraw(address: string){\n    const contract = await Ticked1155Service.getContract(address, true)\n    try {\n      return await contract['withdrawOrgCredits'](this.walletService.getWalletAddress())\n    } catch(e: any) {\n      console.log(e.error.message )\n    }\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to check approval of tokens\n   *\n   * @param address - Address of concert contract \n   * @param account - Owner of tokens\n   * @param operator - Address to check \n   * @returns State of approval\n   * \n   */\n  public async isApprovedForAll(address: string, account: string, operator: string): Promise{\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['isApprovedForAll'](account, operator)\n  }\n\n  public async getImage(address: string): Promise{\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['image']()\n  }\n\n  public async getName(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['name']()\n  }\n\n  public async getDescription(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['description']()\n  }\n\n  public async getDate(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['date']()\n  }\n\n  public async getSectors(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['getSectors']()\n  }\n\n  public async getSectorSoldIds(address: string, sector: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['getSoldTokenIds'](sector)\n  }\n\n  public async getTicketAttr(address: string, tokenId: number): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['ticketAttr'](tokenId)\n  }\n\n  public async setDate(address: string, newDate: number) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    await contract['setDate'](newDate)\n  }\n\n  public async setApprovalForAll(address: string, operator: string, approved: boolean) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    contract['setApprovalForAll'](operator, approved)\n  }  \n\n  private static async getContract(address: string, bySigner= false) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    return new ethers.Contract(\n      address,\n      ticked1155.abi,\n      bySigner ? signer : provider\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TickedFactoryService.html":{"url":"injectables/TickedFactoryService.html","title":"injectable - TickedFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TickedFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smartcontracts/ticked-factory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authorizeAccess\n                            \n                            \n                                    Public\n                                    Async\n                                createConcertContract\n                            \n                            \n                                    Private\n                                    Static\n                                    Async\n                                getContract\n                            \n                            \n                                    Public\n                                    Async\n                                getDepContracts\n                            \n                            \n                                    Public\n                                    Async\n                                getOrganizers\n                            \n                            \n                                    Public\n                                    Async\n                                setOrganizatorPermission\n                            \n                            \n                                    Public\n                                    Async\n                                validateOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smartcontracts/ticked-factory.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        authorizeAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorizeAccess(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:21\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to authorize offer for address\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of wallet (granted organizer)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createConcertContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConcertContract(name: string, desc: string, date: Number, image: string, sectors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:36\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to create new concert contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nName of concert\n\n\n                                    \n                                \n                                \n                                    desc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDescription of concert\n\n\n                                    \n                                \n                                \n                                    date\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDate of concert\n\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nImage of audience layout\n\n\n                                    \n                                \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStructure of sectors\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Status of transaction\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        getContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(bySigner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    bySigner\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getDepContracts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDepContracts(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getOrganizers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrganizers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setOrganizatorPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOrganizatorPermission(address: string, toggle: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:65\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to set organizator permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of wallet (organizer)\n\n\n                                    \n                                \n                                \n                                    toggle\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nToggle for specifying permissions (true/false)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateOwner(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:53\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to validate owner of factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of wallet\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ethers } from \"ethers\";\nimport { environment } from 'src/environments/environment';\nimport { DepConcert } from 'src/types/concert.model';\n\nimport tickeDFactory from '../../../../artifacts/contracts/tickeDFactory.sol/tickeDFactory.json'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TickedFactoryService {\n\n  constructor() { }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to authorize offer for address\n   *\n   * @param address - Address of wallet (granted organizer) \n   * \n   */\n  public async authorizeAccess(address: string): Promise {\n    const contract = await TickedFactoryService.getContract();\n    return contract['whitelist'](address);  \n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to create new concert contract\n   *\n   * @param name - Name of concert\n   * @param desc - Description of concert \n   * @param date - Date of concert\n   * @param image - Image of audience layout\n   * @param sectors - Structure of sectors \n   * @returns Status of transaction\n   */\n  public async createConcertContract(\n    name: string, desc: string, date: Number, image: string, sectors: string[] ){\n    \n    const contract = await TickedFactoryService.getContract(true)\n    const transaction = await contract['createEvent'](\n      name, desc, date, image, sectors)\n    const tx = await transaction.wait()\n\n    return tx.status === 1\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to validate owner of factory\n   *\n   * @param address - Address of wallet \n   * \n   */\n  public async validateOwner(address: string): Promise {\n    const contract = await TickedFactoryService.getContract()\n    return address === await contract['owner']()\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to set organizator permissions\n   *\n   * @param address - Address of wallet (organizer) \n   * @param toggle - Toggle for specifying permissions (true/false)\n   * \n   */\n  public async setOrganizatorPermission(address: string, toggle: boolean) {\n    const contract = await TickedFactoryService.getContract(true)\n    contract['setOrganizatorPermission'](address, toggle)\n  }\n\n  public async getOrganizers() {\n    const contract = await TickedFactoryService.getContract()\n    return contract['getOrganizers']()\n  }\n\n  public async getDepContracts(address: string): Promise {\n    const contract = await TickedFactoryService.getContract()\n    return contract['getDepContracts'](address)\n  }\n\n  private static async getContract(bySigner= false) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    return new ethers.Contract(\n      environment.contractTickeDFactoryAddress,\n      tickeDFactory.abi,\n      bySigner ? signer : provider\n    )\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ticket.html":{"url":"interfaces/Ticket.html","title":"interface - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/concert.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minted\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seatNumber\n                                        \n                                \n                                \n                                        \n                                            sectorName\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:     BigNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seatNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seatNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\n\nexport interface DepConcert {\n    contractAddress: string,\n    name: string\n}\n\nexport interface Sector {\n    name:string;\n    isNumerable: boolean; \n    seatStart: number;\n    seatStop: number;\n    mintedByOrg: boolean;\n    price: BigNumber;\n    availableTokenIds: BigNumber[];\n}\n\nexport interface Ticket {\n    sectorName: string;\n    seatNumber: number;\n    minted: boolean;\n    price: BigNumber;\n    sold: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenMetadata.html":{"url":"interfaces/TokenMetadata.html","title":"interface - TokenMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tokenType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokenType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenUri.html":{"url":"interfaces/TokenUri.html","title":"interface - TokenUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gateway\n                                        \n                                \n                                \n                                        \n                                            raw\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gateway\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gateway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nCreateOfferDialogComponent\n\nCreateOfferDialogComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCreateOfferDialogComponent->UserModule\n\n\n\n\n\nMyNftComponent\n\nMyNftComponent\n\nUserModule -->\n\nMyNftComponent->UserModule\n\n\n\n\n\nMyOffersComponent\n\nMyOffersComponent\n\nUserModule -->\n\nMyOffersComponent->UserModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nUserModule -->\n\nAppRoutingModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateOfferDialogComponent\n                        \n                        \n                            MyNftComponent\n                        \n                        \n                            MyOffersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MyNftComponent } from './my-nft/my-nft.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule } from '@angular/router';\nimport { CreateOfferDialogComponent } from './create-offer-dialog/create-offer-dialog.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MyOffersComponent } from './my-offers/my-offers.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n\n@NgModule({\n  declarations: [\n    MyNftComponent,\n    CreateOfferDialogComponent,\n    MyOffersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    FormsModule,\n    PipesModule\n  ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                accounts\n                            \n                            \n                                    Protected\n                                    Optional\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getWalletAddress\n                            \n                            \n                                    Async\n                                logIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWalletAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWalletAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    logIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.service.ts:18\n                \n            \n\n\n            \n                \n                    Function uses metamask wallet to connect wallet\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        True if user corrently logged in\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Wallet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ethers, Wallet } from 'ethers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService {\n\n  protected accounts: any;\n  protected wallet?: Wallet;\n\n  /**\n   * Function uses metamask wallet to connect wallet\n   * \n   * @returns True if user corrently logged in\n   * \n   */\n  async logIn(): Promise {\n    if(window.ethereum) {\n      this.accounts = await window?.ethereum.request({ method: 'eth_requestAccounts' })  \n      this.wallet = this.accounts[0]\n      return true\n    }\n    return false\n  }\n\n  async getWalletAddress(): Promise {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    let accounts = await provider.send(\"eth_requestAccounts\", []);\n    let account = accounts[0];\n\n    const signer = provider.getSigner();\n    return await signer.getAddress();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WeiToEthPipe.html":{"url":"pipes/WeiToEthPipe.html","title":"pipe - WeiToEthPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  WeiToEthPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/wei-to-eth.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        weiToEth\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(price: BigNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/wei-to-eth.pipe.ts:16\n                \n            \n\n\n            \n                \n                    Function converts price in BigNumber to string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPrice in BigNumber\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Price in string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { BigNumber, ethers } from 'ethers';\n\n@Pipe({\n  name: 'weiToEth'\n})\nexport class WeiToEthPipe implements PipeTransform {\n\n  /**\n   * Function converts price in BigNumber to string\n   * \n   * @param price - Price in BigNumber\n   * @returns Price in string\n   *\n   */\n  transform(price: BigNumber): string {\n    return ethers.utils.formatEther(price)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WhitelistComponent.html":{"url":"components/WhitelistComponent.html","title":"component - WhitelistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WhitelistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/whitelist/whitelist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-whitelist\n            \n\n            \n                styleUrls\n                ./whitelist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./whitelist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                address\n                            \n                            \n                                    Protected\n                                checkAddress\n                            \n                            \n                                    Protected\n                                permission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePermissions\n                            \n                            \n                                    Async\n                                checkPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePermissions\n                        \n                    \n                \n            \n            \n                \nchangePermissions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:25\n                \n            \n\n\n            \n                \n                    Function that changes permission based on form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPermissions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:37\n                \n            \n\n\n            \n                \n                    Function that checks permission based on form\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        checkAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\n\n@Component({\n  selector: 'app-whitelist',\n  templateUrl: './whitelist.component.html',\n  styleUrls: ['./whitelist.component.scss']\n})\nexport class WhitelistComponent {\n\n  protected address!: string;\n  protected permission!: string;\n  protected checkAddress!: string;\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private snackbarService: SnackbarService,\n  ) { }\n\n  \n  /**\n   * Function that changes permission based on form \n   */\n  changePermissions() {\n    if(this.permission === undefined || this.address === undefined){\n      this.snackbarService.error(\"Specify arguments!\")\n      return\n    }\n    let toggle = this.permission === \"grant\" ? true : false; \n    this.tickedFactoryService.setOrganizatorPermission(this.address, toggle);\n  }\n\n  /**\n   * Function that checks permission based on form \n   */\n  async checkPermissions() {\n    if(this.checkAddress === undefined) {\n      this.snackbarService.error(\"Specify arguments!\")\n      return\n    }\n\n    let toggle = await this.tickedFactoryService.authorizeAccess(this.checkAddress)\n    let info = toggle ? \"have\" : \"don't have\"\n    this.snackbarService.info(\"This wallet \" + info + \" access\")\n  }\n\n}\n\n    \n\n    \n        \n    \n        Change user permissions\n    \n    \n        Choose permissions\n        \n            Grant permissions\n            Refuse permissions\n        \n    \n    \n        Input wallet address\n        \n    \n\n    \n        Change permissions\n    \n\n    \n        Check user permissions\n    \n    \n        Input wallet address\n        \n    \n    \n        Check permissions\n    \n\n\n\n\n    \n\n    \n                \n                    ./whitelist.component.scss\n                \n                .toggle {\n    padding: 10px;\n}\n\n.address-field {\n    width: 500px;\n    padding: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Change user permissions                Choose permissions                    Grant permissions            Refuse permissions                        Input wallet address                        Change permissions                Check user permissions                Input wallet address                        Check permissions    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WhitelistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/create-concert/create-concert.component.ts\n            \n            component\n            CreateConcertComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/my-concerts/my-concerts.component.ts\n            \n            component\n            MyConcertsComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/sector/sector.component.ts\n            \n            component\n            SectorComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/whitelist/whitelist.component.ts\n            \n            component\n            WhitelistComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/audience-layout/audience-layout.component.ts\n            \n            component\n            AudienceLayoutComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/concert-sectors/concert-sectors.component.ts\n            \n            component\n            ConcertSectorsComponent\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/concert-sell/concert-sell.component.ts\n            \n            component\n            ConcertSellComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/marketplace-comp/marketplace.component.ts\n            \n            component\n            MarketplaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts\n            \n            component\n            ReselledTicketComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/standard-ticket/standard-ticket.component.ts\n            \n            component\n            StandardTicketComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/components/navigation-bar/navigation-bar.component.ts\n            \n            component\n            NavigationBarComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts\n            \n            component\n            CreateOfferDialogComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/components/user/my-nft/my-nft.component.ts\n            \n            component\n            MyNftComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/user/my-offers/my-offers.component.ts\n            \n            component\n            MyOffersComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/pipes/filter-concerts.pipe.ts\n            \n            pipe\n            FilterConcertsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/wei-to-eth.pipe.ts\n            \n            pipe\n            WeiToEthPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/alchemy-api.service.ts\n            \n            injectable\n            AlchemyApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth-organizator.guard.ts\n            \n            guard\n            AuthOrganizatorGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/smartcontracts/nft-marketplace.service.ts\n            \n            injectable\n            NftMarketplaceService\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/services/smartcontracts/ticked-factory.service.ts\n            \n            injectable\n            TickedFactoryService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/services/smartcontracts/ticked1155.service.ts\n            \n            injectable\n            Ticked1155Service\n            \n                29 %\n                (5/17)\n            \n        \n        \n            \n                \n                src/app/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/wallet.service.ts\n            \n            injectable\n            WalletService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/utils/EtherUnitConverter.ts\n            \n            class\n            EtherUnitConverter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/concert.model.ts\n            \n            interface\n            DepConcert\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/concert.model.ts\n            \n            interface\n            Sector\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/types/concert.model.ts\n            \n            interface\n            Ticket\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/dialogs.model.ts\n            \n            interface\n            AudienceDialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/dialogs.model.ts\n            \n            interface\n            CreateOfferDialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/marketplace.model.ts\n            \n            interface\n            ListedTicket\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/marketplace.model.ts\n            \n            interface\n            Listing\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/marketplace.model.ts\n            \n            interface\n            SellerOffer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Attribute\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Id\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Metadata\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            NFT\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            OwnedNFTs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            TokenMetadata\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            TokenUri\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/cdk : ^14.2.4\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/material : ^14.2.4\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @metamask/providers : ^10.0.0\n        \n            @openzeppelin/contracts : ^4.7.3\n        \n            dotenv : ^16.0.3\n        \n            hardhat-ethers : ^1.0.1\n        \n            hardhat-waffle : ^0.0.1-security\n        \n            mocha : ^10.1.0\n        \n            rxjs : ~7.5.0\n        \n            schematics-scss-migrate : ^1.3.15\n        \n            solidity-docgen : ^0.6.0-beta.34\n        \n            swiper : ^8.4.4\n        \n            ts-node : ^10.9.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTickeDapp\nDapp for organizing events and trading tickets \nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. \nRunning unit tests\nRun npx hardhat test\nDocumentation\nAngular - Compodoc: npm run compodoc\nSolidity - OpenZeppelin/solidity-docgen: npx hardhat docgen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConcertManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarketplaceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConcertManagementModule\n\n\n\ncluster_ConcertManagementModule_declarations\n\n\n\ncluster_MarketplaceModule\n\n\n\ncluster_MarketplaceModule_declarations\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nNavigationBarComponent\n\nNavigationBarComponent\n\nAppModule -->\n\nNavigationBarComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMarketplaceModule\n\nMarketplaceModule\n\nMarketplaceModule -->\n\nAppRoutingModule->MarketplaceModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppRoutingModule->UserModule\n\n\n\n\n\nConcertManagementModule\n\nConcertManagementModule\n\nAppModule -->\n\nConcertManagementModule->AppModule\n\n\n\nAppModule -->\n\nMarketplaceModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nAppModule -->\n\nWalletService->AppModule\n\n\n\n\n\nCreateConcertComponent\n\nCreateConcertComponent\n\nConcertManagementModule -->\n\nCreateConcertComponent->ConcertManagementModule\n\n\n\n\n\nMyConcertsComponent\n\nMyConcertsComponent\n\nConcertManagementModule -->\n\nMyConcertsComponent->ConcertManagementModule\n\n\n\n\n\nSectorComponent\n\nSectorComponent\n\nConcertManagementModule -->\n\nSectorComponent->ConcertManagementModule\n\n\n\n\n\nWhitelistComponent\n\nWhitelistComponent\n\nConcertManagementModule -->\n\nWhitelistComponent->ConcertManagementModule\n\n\n\n\n\nAudienceLayoutComponent\n\nAudienceLayoutComponent\n\nMarketplaceModule -->\n\nAudienceLayoutComponent->MarketplaceModule\n\n\n\n\n\nConcertSectorsComponent\n\nConcertSectorsComponent\n\nMarketplaceModule -->\n\nConcertSectorsComponent->MarketplaceModule\n\n\n\n\n\nConcertSellComponent\n\nConcertSellComponent\n\nMarketplaceModule -->\n\nConcertSellComponent->MarketplaceModule\n\n\n\n\n\nMarketplaceComponent\n\nMarketplaceComponent\n\nMarketplaceModule -->\n\nMarketplaceComponent->MarketplaceModule\n\n\n\n\n\nReselledTicketComponent\n\nReselledTicketComponent\n\nMarketplaceModule -->\n\nReselledTicketComponent->MarketplaceModule\n\n\n\n\n\nStandardTicketComponent\n\nStandardTicketComponent\n\nMarketplaceModule -->\n\nStandardTicketComponent->MarketplaceModule\n\n\n\n\n\nFilterConcertsPipe\n\nFilterConcertsPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nFilterConcertsPipe->PipesModule\n\n\n\n\n\nWeiToEthPipe\n\nWeiToEthPipe\n\nPipesModule -->\n\nWeiToEthPipe->PipesModule\n\n\n\n\n\nFilterConcertsPipe \n\nFilterConcertsPipe \n\nFilterConcertsPipe  -->\n\nPipesModule->FilterConcertsPipe \n\n\n\n\n\nWeiToEthPipe \n\nWeiToEthPipe \n\nWeiToEthPipe  -->\n\nPipesModule->WeiToEthPipe \n\n\n\n\n\nCreateOfferDialogComponent\n\nCreateOfferDialogComponent\n\nUserModule -->\n\nCreateOfferDialogComponent->UserModule\n\n\n\n\n\nMyNftComponent\n\nMyNftComponent\n\nUserModule -->\n\nMyNftComponent->UserModule\n\n\n\n\n\nMyOffersComponent\n\nMyOffersComponent\n\nUserModule -->\n\nMyOffersComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  contractTickeDFactoryAddress: \"0x9E12441b535419cC59B8F122Bc26EBeC1b06E719\",\n  contractNftMarketplaceAddress: \"0x2DF7a6C36e8eDeaAF59d09cb4230B660E0283E88\",\n  alchemyApi: \"https://eth-goerli.g.alchemy.com/v2/9XMQ5x8fQjeWNnufjSXkhh5TMLnCnStG\",\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
