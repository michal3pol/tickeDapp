var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AlchemyApiService.html",[0,1.406,1,2.592]],["body/injectables/AlchemyApiService.html",[0,2.256,1,4.159,2,2.641,3,0.205,4,0.179,5,0.179,6,5.003,7,4.059,8,0.464,9,1.47,10,2.135,11,6.837,12,1.541,13,3.3,14,3.022,15,6.512,16,6.837,17,1.214,18,4.718,19,1.222,20,0.019,21,0.529,22,0.401,23,1.166,24,4.718,25,1.166,26,3.561,27,0.659,28,4.059,29,0.709,30,3.624,31,3.3,32,2.825,33,3.3,34,1.981,35,3.624,36,3.3,37,2.641,38,2.479,39,0.205,40,0.598,41,1.859,42,2.372,43,5.947,44,1.623,45,2.825,46,4.059,47,4.718,48,4.718,49,1.79,50,4.718,51,0.014,52,0.014]],["title/components/AppComponent.html",[53,0.442,54,1.006]],["body/components/AppComponent.html",[3,0.162,4,0.142,5,0.142,8,0.368,17,1.276,20,0.018,21,0.573,22,0.495,27,0.468,29,0.562,38,2.684,39,0.162,40,0.474,51,0.012,52,0.012,53,0.694,54,1.696,55,1.597,56,1.227,57,1.227,58,1.227,59,1.227,60,3.221,61,0.692,62,2.486,63,2.371,64,1.675,65,5.816,66,1.675,67,5.109,68,0.81,69,5.816,70,3.483,71,5.816,72,5.003,73,2.149,74,1.544,75,5.109,76,3.744,77,5.816,78,5.109,79,3.744,80,4.395,81,5.109,82,3.744,83,0.532,84,3.925,85,3.744,86,3.221,87,2.619,88,3.744,89,2.529,90,3.573,91,4.395,92,2.413,93,2.413,94,3.744,95,2.619,96,2.038,97,2.242,98,3.059,99,3.744,100,3.744,101,1.853,102,3.744,103,1.227,104,1.675,105,1.675,106,1.227,107,2.048,108,1.227,109,1.227,110,1.017,111,1.117,112,1.227,113,0.97,114,1.324,115,1.227,116,0.97,117,1.227,118,0.97,119,1.324,120,1.227,121,1.017,122,1.017,123,1.227,124,1.017,125,1.227,126,0.97,127,1.227,128,0.97,129,1.227,130,0.97,131,1.227,132,0.97,133,1.227,134,1.017,135,1.227,136,1.227,137,0.97,138,1.17,139,1.227,140,1.017,141,1.17,142,1.675,143,1.017,144,1.227,145,1.017,146,1.17,147,0.97,148,1.17,149,1.227,150,1.227]],["title/modules/AppModule.html",[151,2.219,152,2.592]],["body/modules/AppModule.html",[3,0.161,4,0.141,5,0.141,14,2.829,20,0.019,27,0.694,28,3.199,29,0.559,39,0.161,40,0.471,51,0.012,52,0.012,54,1.99,63,1.163,124,1.829,134,1.829,137,1.745,152,5.354,153,1.841,154,2.672,155,3.199,156,3.199,157,3.199,158,3.199,159,3.199,160,3.77,161,4.342,162,4.342,163,4.342,164,3.045,165,2.227,166,2.081,167,3.719,168,3.278,169,4.375,170,3.045,171,5.086,172,3.045,173,3.907,174,3.278,175,2.227,176,2.857,177,3.719,178,5.086,179,3.719,180,3.907,181,2.857,182,3.719,183,3.719,184,2.857,185,3.719,186,3.719,187,5.086,188,3.719,189,4.375,190,2.081,191,3.199,192,3.199,193,3.719,194,3.557,195,2.601,196,5.086,197,2.857,198,2.601,199,3.199,200,2.601,201,3.199,202,3.719,203,5.086,204,3.557,205,2.601,206,3.719,207,3.719]],["title/modules/AppRoutingModule.html",[151,2.219,160,2.074]],["body/modules/AppRoutingModule.html",[3,0.179,4,0.156,5,0.156,20,0.019,27,0.686,29,0.62,39,0.179,40,0.523,42,1.647,51,0.013,52,0.013,53,0.868,113,1.414,114,1.07,116,1.414,118,1.414,119,1.07,126,1.414,128,1.414,130,1.414,132,1.414,137,1.414,147,1.414,148,1.291,153,2.044,160,3.054,170,2.472,172,3.267,191,5.257,199,3.552,200,2.888,201,3.552,208,3.172,209,4.129,210,3.517,211,2.472,212,4.191,213,4.274,214,2.169,215,3.172,216,2.888,217,3.552,218,3.172,219,2.888,220,3.552,221,4.129,222,5.456,223,2.888,224,3.552,225,4.129,226,3.552,227,2.888,228,3.552,229,2.888,230,4.129,231,4.129,232,5.456,233,2.888,234,3.552,235,2.888,236,3.552,237,7.189,238,4.129,239,3.552,240,4.129,241,3.172,242,2.661,243,4.129,244,4.129,245,4.129,246,5.456,247,2.661,248,1.42,249,2.661,250,4.129,251,3.552]],["title/interfaces/Attribute.html",[252,0.557,253,1.733]],["body/interfaces/Attribute.html",[3,0.204,4,0.178,5,0.178,8,0.463,20,0.018,21,0.528,22,0.553,34,2.494,39,0.32,51,0.014,52,0.014,61,1.203,68,0.941,74,1.689,83,1.079,248,2.043,252,1.109,253,3.042,254,1.544,255,2.331,256,3.59,257,3.59,258,1.696,259,1.94,260,1.619,261,2.238,262,1.544,263,3.042,264,2.474,265,3.042,266,2.474,267,2.474,268,1.404,269,2.474,270,2.202,271,2.474]],["title/interfaces/AudienceDialogData.html",[252,0.557,272,2.389]],["body/interfaces/AudienceDialogData.html",[3,0.241,4,0.211,5,0.211,8,0.546,20,0.018,22,0.473,27,0.509,39,0.285,51,0.016,52,0.016,68,1.042,83,0.995,248,2.407,252,0.987,254,1.822,272,4.236,273,4.27,274,4.662,275,4.781,276,3.582]],["title/components/AudienceLayoutComponent.html",[53,0.442,110,1.006]],["body/components/AudienceLayoutComponent.html",[3,0.148,4,0.129,5,0.129,8,0.335,9,1.185,12,1.242,17,1.226,19,0.885,20,0.018,21,0.621,22,0.471,23,0.844,25,0.844,27,0.55,29,0.513,39,0.148,40,0.433,51,0.011,52,0.011,53,0.661,54,0.927,55,1.498,56,1.119,57,1.119,58,1.119,59,1.119,61,0.631,62,2.461,63,2.347,64,1.571,66,1.571,68,0.76,90,3.352,96,1.912,97,2.044,98,2.87,101,1.69,103,1.119,104,1.571,105,1.571,106,1.119,107,1.969,108,1.119,109,1.119,110,1.631,111,2.112,112,1.119,113,0.885,114,1.242,115,1.119,116,0.885,117,1.119,118,0.885,119,1.242,120,1.119,121,0.927,122,0.927,123,1.119,124,0.927,125,1.119,126,0.885,127,1.119,128,0.885,129,1.119,130,0.885,131,1.119,132,0.885,133,1.119,134,0.927,135,1.119,136,1.119,137,0.885,138,1.067,139,1.119,140,0.927,141,1.067,142,1.571,143,0.927,144,1.119,145,0.927,146,1.067,147,0.885,148,1.067,149,1.119,150,1.119,174,2.2,175,2.044,272,4.077,277,5.442,278,4.425,279,2.937,280,4.201,281,5.539,282,4.793,283,2.904,284,3.788,285,4.614,286,5.175,287,2.937,288,5.442,289,3.414,290,3.414,291,1.429,292,4.793,293,3.874,294,1.912,295,2.937,296,4.123,297,3.414,298,3.414,299,2.937,300,1.295,301,2.937,302,2.2,303,3.414,304,3.414,305,2.937,306,3.414,307,2.937,308,1.596,309,2.623,310,3.414,311,3.352,312,4.793,313,3.682,314,2.044,315,1.912,316,2.623]],["title/guards/AuthOrganizatorGuard.html",[229,2.592,317,2.847]],["body/guards/AuthOrganizatorGuard.html",[0,2.238,3,0.202,4,0.177,5,0.177,8,0.458,9,1.458,10,2.123,12,1.529,14,3.059,17,1.205,19,1.529,20,0.018,21,0.662,22,0.502,23,1.458,25,1.152,26,3.533,27,0.643,29,0.7,30,3.579,31,3.259,36,3.259,37,2.608,38,2.448,39,0.202,40,0.59,41,1.845,44,1.603,45,2.79,49,1.767,51,0.014,52,0.014,214,2.448,229,4.127,318,4.66,319,5.57,320,4.008,321,7.022,322,3.003,323,3.551,324,4.66,325,4.66,326,6.806,327,5.57,328,6.806,329,4.66,330,5.076,331,4.66,332,2.448,333,2.79,334,1.858,335,4.008]],["title/modules/ConcertManagementModule.html",[151,2.219,161,2.389]],["body/modules/ConcertManagementModule.html",[3,0.177,4,0.155,5,0.155,20,0.019,27,0.699,29,0.613,39,0.177,40,0.517,51,0.013,52,0.013,86,3.513,118,1.794,119,1.058,128,1.794,143,1.88,147,1.794,153,2.021,154,2.846,161,4.795,164,3.244,165,2.445,166,2.286,168,3.491,169,3.513,170,2.445,172,3.244,180,4.161,181,3.137,189,4.66,190,2.286,192,3.513,194,3.789,195,2.856,197,3.137,198,2.856,204,3.789,205,2.856,210,3.491,211,2.445,216,2.856,217,3.513,219,2.856,220,3.513,336,3.513,337,3.513,338,2.445,339,4.084,340,5.417,341,4.161,342,3.137,343,5.417,344,4.084,345,5.417,346,4.084,347,5.417,348,4.084,349,4.161,350,3.137,351,4.161,352,5.417,353,4.084,354,4.084,355,4.084,356,5.417,357,3.513,358,4.084,359,4.084,360,4.084,361,4.084,362,2.286,363,4.084,364,2.856]],["title/components/ConcertSectorsComponent.html",[53,0.442,113,0.96]],["body/components/ConcertSectorsComponent.html",[3,0.134,4,0.073,5,0.073,8,0.482,9,0.765,10,1.72,12,0.802,17,1.337,19,0.802,20,0.019,21,0.55,22,0.53,23,0.765,25,1.105,27,0.543,29,0.288,39,0.083,40,0.243,41,1.217,42,0.764,44,1.687,51,0.007,52,0.007,53,0.464,54,0.52,55,0.967,56,0.628,57,0.628,58,0.628,59,0.628,61,0.354,62,2.256,63,2.152,64,1.014,66,1.014,68,0.49,70,2.331,72,1.648,73,1.804,74,1.297,83,0.746,89,2.212,92,1.235,93,1.235,96,1.234,97,1.853,98,1.147,101,1.532,103,0.628,104,1.014,105,1.014,106,0.628,107,1.465,108,0.628,109,0.628,110,0.84,111,1.333,112,0.628,113,1.158,114,1.645,115,0.628,116,0.496,117,0.628,118,0.496,119,0.802,120,0.628,121,0.52,122,0.52,123,0.628,124,0.52,125,0.628,126,0.496,127,0.628,128,0.496,129,0.628,130,0.496,131,0.628,132,0.496,133,0.628,134,0.52,135,0.628,136,0.628,137,0.496,138,0.599,139,0.628,140,0.52,141,0.599,142,1.014,143,0.52,144,0.628,145,0.52,146,0.599,147,0.496,148,0.599,149,0.628,150,0.628,214,1.007,223,4.636,249,3.381,258,1.237,268,0.923,274,1.235,278,1.34,280,3.126,284,1.147,285,1.472,291,1.564,293,2.164,294,1.234,300,1.476,302,1.235,307,1.648,308,2.293,309,1.472,314,1.147,315,1.782,330,2.662,334,1.234,362,3.553,365,5.092,366,1.648,367,3.094,368,3.094,369,2.745,370,3.892,371,3.094,372,1.723,373,2.509,374,4.219,375,4.219,376,4.219,377,3.892,378,3.892,379,3.348,380,2.348,381,4.469,382,3.094,383,4.469,384,1.916,385,4.469,386,2.9,387,4.748,388,3.094,389,1.916,390,1.916,391,3.094,392,4.469,393,3.094,394,1.916,395,2.164,396,2.164,397,2.662,398,2.666,399,1.916,400,3.094,401,1.447,402,1.916,403,1.916,404,1.916,405,1.916,406,1.916,407,1.916,408,1.916,409,1.447,410,2.178,411,3.126,412,1.234,413,1.916,414,1.916,415,1.235,416,1.339,417,1.072,418,1.648,419,1.472,420,1.916,421,1.916,422,1.916,423,1.916,424,1.916,425,1.916,426,1.916,427,1.916,428,1.916,429,0.848,430,3.094,431,1.916,432,1.916,433,3.094,434,1.916,435,1.916,436,1.648,437,2.377,438,1.648,439,1.916,440,0.848,441,3.094,442,2.164,443,1.648,444,3.094,445,5.246,446,3.094,447,5.246,448,1.117,449,3.094,450,1.994,451,1.853,452,1.994,453,3.094,454,1.994,455,1.916,456,1.994,457,3.094,458,1.916,459,1.916,460,1.916,461,4.512,462,1.994,463,3.094,464,3.892,465,3.43,466,3.861,467,1.916,468,1.916,469,1.916,470,4.512,471,3.892,472,3.892,473,1.916,474,2.501,475,3.094,476,2.164,477,2.509,478,3.094,479,1.916,480,0.948,481,1.147,482,1.648,483,1.916,484,1.916,485,2.662,486,1.916,487,2.676,488,3.094,489,1.916,490,1.34,491,2.164,492,1.916,493,1.916,494,1.34,495,2.377,496,1.648,497,1.472,498,1.916,499,1.472,500,1.472,501,1.472,502,1.235,503,1.648,504,1.916,505,1.472,506,1.648,507,1.648,508,1.916,509,1.648]],["title/components/ConcertSellComponent.html",[53,0.442,116,0.96]],["body/components/ConcertSellComponent.html",[3,0.122,4,0.106,5,0.106,8,0.276,9,1.029,10,1.626,12,1.079,17,1.253,19,1.079,20,0.019,21,0.615,22,0.498,23,1.029,25,1.029,27,0.502,29,0.422,39,0.122,40,0.356,41,1.301,44,1.432,51,0.01,52,0.01,53,0.592,54,0.763,55,1.301,56,0.921,57,0.921,58,0.921,59,0.921,61,0.519,62,2.401,63,2.289,64,1.365,66,1.365,68,0.66,70,1.682,73,1.706,74,1.226,80,3.581,83,0.872,89,1.39,95,1.964,96,1.12,97,1.682,101,1.39,103,0.921,104,1.365,105,1.365,106,0.921,107,1.798,108,0.921,109,0.921,110,0.763,111,0.838,112,0.921,113,0.728,114,1.839,115,0.921,116,1.421,117,0.921,118,0.728,119,1.079,120,0.921,121,0.763,122,0.763,123,0.921,124,0.763,125,0.921,126,0.728,127,0.921,128,0.728,129,0.921,130,0.728,131,0.921,132,0.728,133,0.921,134,0.763,135,0.921,136,0.921,137,0.728,138,0.878,139,0.921,140,0.763,141,0.878,142,1.365,143,0.763,144,0.921,145,0.763,146,0.878,147,0.728,148,0.878,149,0.921,150,0.921,214,1.476,227,4.442,247,3.197,259,0.838,260,0.966,283,2.949,286,3.198,291,1.241,294,1.12,300,1.881,308,1.947,313,2.157,314,1.682,315,1.978,322,1.81,323,3.037,332,1.476,333,1.682,334,1.66,362,2.33,365,4.878,373,2.683,380,2.882,397,3.581,417,1.572,429,1.243,437,2.157,465,2.912,466,1.964,474,2.776,476,1.964,477,1.81,480,1.39,481,1.682,487,1.682,490,1.964,491,2.912,494,3.469,495,2.157,496,2.416,497,3.198,499,2.157,500,2.157,501,2.157,505,2.157,506,2.416,507,3.581,510,2.416,511,4.96,512,4.163,513,4.96,514,4.267,515,4.163,516,5.463,517,2.808,518,4.163,519,2.808,520,3.581,521,2.808,522,2.808,523,2.455,524,2.808,525,2.808,526,4.163,527,2.808,528,2.808,529,2.808,530,2.808,531,1.81,532,2.808,533,5.278,534,3.581,535,3.581,536,4.163,537,3.581,538,4.163,539,3.198,540,2.808,541,2.683,542,1.964,543,2.808,544,3.469,545,2.33,546,2.808]],["title/interfaces/Contract.html",[252,0.557,259,1.105]],["body/interfaces/Contract.html",[3,0.21,4,0.184,5,0.184,8,0.477,20,0.018,21,0.544,22,0.413,34,2.541,39,0.322,51,0.014,52,0.014,61,1.22,68,0.959,74,1.199,83,1.072,248,2.081,252,1.116,253,2.829,254,1.59,255,2.401,256,2.549,257,2.549,258,1.628,259,2.059,260,2.375,261,2.268,262,1.59,263,3.084,264,2.549,265,3.084,266,2.549,267,2.549,268,1.447,269,2.549,270,2.268,271,2.549]],["title/components/CreateConcertComponent.html",[53,0.442,118,0.96]],["body/components/CreateConcertComponent.html",[3,0.173,4,0.1,5,0.1,8,0.26,9,0.985,10,1.571,12,1.033,17,1.272,19,1.033,20,0.019,21,0.673,22,0.453,23,0.985,25,1.184,27,0.439,29,0.398,39,0.115,40,0.336,41,1.246,46,3.429,51,0.009,52,0.009,53,0.572,54,0.719,55,1.246,56,0.869,57,0.869,58,0.869,59,0.869,61,0.49,62,2.381,63,2.271,64,1.307,66,1.307,68,0.632,73,1.648,74,1.184,83,0.885,89,1.311,92,1.708,93,1.708,96,1.057,98,1.587,101,2.829,103,0.869,104,1.307,105,1.307,106,0.869,107,1.747,108,0.869,109,0.869,110,0.719,111,1.429,112,0.869,113,0.686,114,1.661,115,0.869,116,0.686,117,0.869,118,1.381,119,1.758,120,0.869,121,0.719,122,0.719,123,0.869,124,0.719,125,0.869,126,0.686,127,0.869,128,0.686,129,0.869,130,0.686,131,0.869,132,0.686,133,0.869,134,0.719,135,0.869,136,0.869,137,0.686,138,0.828,139,0.869,140,0.719,141,0.828,142,1.307,143,0.719,144,0.869,145,0.719,146,0.828,147,0.686,148,0.828,149,0.869,150,0.869,190,1.483,215,4.924,216,4.484,241,2.035,259,1.189,268,1.189,274,2.569,280,2.788,283,2.658,284,3.191,291,1.589,294,1.911,300,1.817,308,1.239,309,2.035,313,2.035,315,1.057,322,1.708,323,2.972,332,1.392,333,1.587,334,1.59,338,3.839,369,2.983,374,3.429,375,3.429,376,3.429,380,2.8,412,1.057,442,1.853,462,2.569,487,1.587,502,3.435,545,2.231,547,2.279,548,4.791,549,3.986,550,4.791,551,4.791,552,4.791,553,3.062,554,5.33,555,5.359,556,2.649,557,3.429,558,2.649,559,2.569,560,4.585,561,2.649,562,3.062,563,2.788,564,3.429,565,2.387,566,3.429,567,3.062,568,2.649,569,3.429,570,5.514,571,3.986,572,3.986,573,2.649,574,2.649,575,2.649,576,2.279,577,2.649,578,2.649,579,3.986,580,2.649,581,2.649,582,2.649,583,2.649,584,2.649,585,3.986,586,3.986,587,3.986,588,3.429,589,3.429,590,3.986,591,2.569,592,3.986,593,3.986,594,3.986,595,3.986,596,3.986,597,3.986,598,2.649,599,2.649,600,2.649,601,2.649,602,2.279,603,2.649,604,2.035,605,2.649]],["title/components/CreateOfferDialogComponent.html",[53,0.442,121,1.006]],["body/components/CreateOfferDialogComponent.html",[3,0.153,4,0.085,5,0.085,8,0.222,9,0.871,10,2.052,12,0.913,14,2.471,17,1.353,19,0.584,20,0.019,21,0.486,22,0.501,23,0.558,25,1.314,27,0.586,29,0.339,32,1.351,33,1.578,35,1.733,39,0.098,40,0.286,41,1.355,44,1.828,45,2.596,51,0.008,52,0.008,53,0.517,54,0.613,55,1.102,56,0.74,57,0.74,58,0.74,59,0.74,61,0.417,62,2.323,63,2.215,64,1.155,66,1.155,68,0.558,73,1.212,74,0.871,89,1.117,92,1.454,93,1.454,103,0.74,104,1.155,105,1.155,106,0.74,107,1.606,108,0.74,109,0.74,110,0.613,111,0.673,112,0.74,113,0.584,114,0.913,115,0.74,116,0.584,117,0.74,118,0.584,119,1.621,120,0.74,121,1.33,122,2.052,123,0.74,124,0.613,125,0.74,126,0.584,127,0.74,128,0.584,129,0.74,130,0.584,131,0.74,132,0.584,133,0.74,134,0.613,135,0.74,136,0.74,137,0.584,138,0.705,139,0.74,140,0.613,141,0.705,142,1.155,143,0.613,144,0.74,145,0.613,146,0.705,147,0.584,148,0.705,149,0.74,150,0.74,242,4.125,248,1.938,249,2.271,258,1.155,259,1.461,262,0.74,276,3.426,283,2.933,284,3.183,285,3.764,287,1.941,288,4.572,291,1.816,293,2.464,294,1.405,295,1.941,296,3.031,299,1.941,300,1.644,301,1.941,302,1.454,305,1.941,315,0.9,334,1.405,372,2.494,380,2.574,386,3.092,401,2.291,409,1.648,410,1.972,415,1.454,416,1.212,440,1.56,448,2.198,451,2.11,456,1.454,545,1.972,562,2.707,565,2.11,588,3.031,604,1.733,606,5.777,607,4.697,608,1.941,609,4.335,610,3.523,611,4.327,612,3.729,613,4.9,614,4.9,615,5.633,616,4.9,617,3.524,618,3.523,619,2.256,620,3.523,621,3.427,622,2.256,623,2.11,624,2.256,625,2.256,626,3.031,627,3.729,628,2.742,629,2.256,630,3.523,631,4.215,632,2.256,633,2.256,634,2.256,635,2.256,636,2.256,637,0.856,638,0.74,639,1.454,640,1.733,641,1.733,642,1.351,643,1.733,644,1.941,645,2.256,646,2.256,647,3.523,648,3.523,649,5.315,650,4.215,651,3.523,652,2.256,653,2.256,654,1.733,655,1.941,656,1.454,657,3.523,658,3.523,659,3.523,660,3.031,661,3.031,662,3.031,663,3.031,664,2.271,665,3.764,666,3.523,667,2.271,668,3.523,669,2.256]],["title/interfaces/CreateOfferDialogData.html",[252,0.557,276,2.389]],["body/interfaces/CreateOfferDialogData.html",[3,0.241,4,0.211,5,0.211,8,0.546,20,0.018,22,0.473,27,0.509,39,0.285,51,0.016,52,0.016,68,1.042,83,0.79,248,2.619,252,0.987,254,1.822,272,3.582,273,4.27,274,3.582,275,4.781,276,4.236]],["title/interfaces/DepConcert.html",[252,0.557,523,1.835]],["body/interfaces/DepConcert.html",[3,0.222,4,0.194,5,0.194,8,0.503,20,0.018,21,0.789,22,0.532,27,0.469,39,0.293,51,0.015,52,0.015,68,0.991,83,1.057,252,1.014,254,1.677,258,1.592,398,2.148,409,3.29,416,1.759,448,2.258,523,3.095,531,4.534,637,2.668,638,1.677,670,3.578,671,3.93,672,3.578,673,3.578,674,3.578,675,3.93,676,3.93,677,3.578,678,3.93,679,2.863,680,3.578]],["title/classes/EtherUnitConverter.html",[40,0.47,642,2.219]],["body/classes/EtherUnitConverter.html",[3,0.197,4,0.172,5,0.172,8,0.447,9,1.436,17,1.186,19,1.505,20,0.019,21,0.651,22,0.494,23,1.436,25,1.436,27,0.416,39,0.197,40,0.576,49,2.783,51,0.014,52,0.014,73,1.564,83,0.826,258,1.643,372,2.834,637,2.866,638,1.904,642,3.478,681,4.546,682,3.911,683,5.223,684,5.809,685,5.809,686,5.809,687,4.546,688,5.809,689,4.546,690,4.546,691,4.546,692,5.809,693,4.546,694,4.546,695,5.809,696,4.546,697,4.546,698,4.546,699,4.546,700,4.546]],["title/pipes/FilterConcertsPipe.html",[701,2.389,702,2.389]],["body/pipes/FilterConcertsPipe.html",[3,0.201,4,0.175,5,0.175,9,1.145,17,0.945,19,1.2,20,0.019,21,0.724,22,0.394,23,1.145,25,1.453,27,0.538,29,0.695,39,0.201,40,0.587,49,2.576,51,0.014,52,0.014,61,0.857,83,0.918,247,4.827,259,1.753,268,1.381,291,1.753,334,1.847,417,2.592,429,2.602,480,2.292,514,6.161,523,3.545,533,5.056,565,3.519,701,3.788,702,3.788,703,3.557,704,5.056,705,3.984,706,5.877,707,5.877,708,4.631,709,5.877,710,6.791,711,5.877,712,5.056,713,4.631,714,4.631,715,4.631]],["title/components/FooterComponent.html",[53,0.442,124,1.006]],["body/components/FooterComponent.html",[3,0.182,4,0.159,5,0.159,12,1.595,17,0.856,20,0.018,21,0.618,27,0.384,29,0.629,39,0.182,40,0.531,51,0.013,52,0.013,53,0.734,54,1.138,55,1.723,56,1.374,57,1.374,58,1.374,59,1.374,61,0.775,62,2.515,63,2.398,64,1.806,66,1.806,84,4.232,90,2.931,101,2.074,103,1.374,104,1.806,105,1.806,106,1.374,107,2.144,108,1.374,109,1.374,110,1.138,111,1.25,112,1.374,113,1.086,114,1.427,115,1.374,116,1.086,117,1.374,118,1.086,119,1.427,120,1.374,121,1.138,122,1.138,123,1.374,124,1.775,125,1.374,126,1.086,127,1.374,128,1.086,129,1.374,130,1.086,131,1.374,132,1.086,133,1.374,134,1.138,135,1.374,136,1.374,137,1.086,138,1.31,139,1.374,140,1.138,141,1.31,142,1.806,143,1.138,144,1.374,145,1.138,146,1.31,147,1.086,148,1.31,149,1.374,150,1.374,300,1.589,311,2.931,316,3.219,362,2.345,462,2.701,465,2.931,466,2.931,716,3.605,717,6.156,718,6.156,719,5.51,720,4.191,721,5.51,722,5.51,723,3.605,724,3.299]],["title/interfaces/Id.html",[252,0.557,261,1.275]],["body/interfaces/Id.html",[3,0.207,4,0.181,5,0.181,8,0.47,20,0.018,21,0.536,22,0.51,34,2.517,39,0.321,51,0.014,52,0.014,61,1.212,68,0.95,74,1.181,83,1.053,248,2.062,252,1.113,253,2.803,254,1.567,255,2.365,256,2.511,257,2.511,258,1.702,259,1.953,260,1.643,261,2.362,262,2.252,263,3.464,264,2.511,265,3.063,266,2.511,267,2.511,268,1.425,269,2.511,270,2.234,271,2.511]],["title/interfaces/ListedTicket.html",[252,0.557,725,1.947]],["body/interfaces/ListedTicket.html",[3,0.225,4,0.196,5,0.196,8,0.51,20,0.018,22,0.536,27,0.578,39,0.295,51,0.015,52,0.015,68,0.999,83,0.966,252,1.02,254,1.7,258,1.487,262,1.7,372,2.296,416,2.588,448,1.873,637,2.392,638,1.7,656,3.343,725,3.313,726,3.627,727,3.953,728,3.984,729,2.903,730,3.343,731,3.343]],["title/interfaces/Listing.html",[252,0.557,727,1.947]],["body/interfaces/Listing.html",[3,0.218,4,0.19,5,0.19,8,0.494,20,0.018,22,0.595,27,0.566,39,0.29,51,0.015,52,0.015,68,0.98,83,1.02,252,1.006,254,1.647,258,1.723,262,2.292,372,3.095,416,2.304,448,2.524,637,2.652,638,1.647,656,4.506,725,2.64,726,3.514,727,3.673,728,3.859,729,2.812,730,3.238,731,3.238]],["title/components/MarketplaceComponent.html",[53,0.442,126,0.96]],["body/components/MarketplaceComponent.html",[3,0.183,4,0.16,5,0.16,12,1.602,17,0.864,20,0.018,21,0.622,27,0.387,29,0.635,39,0.183,40,0.536,51,0.013,52,0.013,53,0.738,54,1.149,55,1.733,56,1.387,57,1.387,58,1.387,59,1.387,61,0.782,62,2.517,63,2.4,64,1.817,66,1.817,96,1.687,98,2.533,103,1.387,104,1.817,105,1.817,106,1.387,107,2.152,108,1.387,109,1.387,110,1.149,111,1.261,112,1.387,113,1.096,114,1.436,115,1.387,116,1.096,117,1.387,118,1.096,119,1.436,120,1.387,121,1.149,122,1.149,123,1.387,124,1.149,125,1.387,126,1.7,127,1.387,128,1.096,129,1.387,130,1.096,131,1.387,132,1.096,133,1.387,134,1.149,135,1.387,136,1.387,137,1.096,138,1.322,139,1.387,140,1.149,141,1.322,142,1.817,143,1.149,144,1.387,145,1.149,146,1.322,147,1.096,148,1.322,149,1.387,150,1.387,242,3.986,499,3.249,500,3.249,501,3.249,732,4.769,733,3.639,734,6.184,735,5.544,736,4.23,737,4.23,738,3.249]],["title/modules/MarketplaceModule.html",[151,2.219,162,2.389]],["body/modules/MarketplaceModule.html",[3,0.165,4,0.144,5,0.144,20,0.019,27,0.7,29,0.573,39,0.165,40,0.483,51,0.012,52,0.012,110,1.843,111,1.137,113,1.758,114,1.34,116,1.758,126,1.758,140,1.843,141,1.192,145,1.843,146,1.192,153,1.888,154,2.718,160,3.798,162,4.882,164,3.098,165,2.284,166,2.134,168,3.334,170,3.098,172,3.098,173,3.974,174,2.458,175,2.284,176,2.93,180,3.974,181,2.93,190,2.134,194,3.619,195,2.667,204,3.619,205,2.667,208,2.93,210,3.334,211,2.284,212,3.974,214,2.004,223,2.667,224,3.281,226,3.281,227,2.667,228,3.281,242,2.458,278,2.667,302,2.458,341,3.974,342,2.93,349,3.974,350,2.93,351,3.974,418,3.281,544,2.667,739,3.281,740,3.814,741,3.281,742,3.814,743,5.174,744,3.814,745,4.451,746,3.281,747,5.174,748,3.098,749,3.281,750,2.93,751,5.174,752,2.93]],["title/interfaces/Metadata.html",[61,0.686,252,0.557]],["body/interfaces/Metadata.html",[3,0.204,4,0.178,5,0.178,8,0.463,20,0.018,21,0.766,22,0.553,34,2.494,39,0.32,51,0.014,52,0.014,61,1.264,68,0.941,74,1.164,83,1.079,248,2.043,252,1.109,253,3.195,254,1.544,255,2.331,256,2.474,257,2.474,258,1.611,259,1.94,260,1.619,261,2.238,262,1.544,263,3.042,264,2.474,265,3.042,266,2.474,267,2.474,268,2.038,269,3.59,270,2.202,271,2.474]],["title/components/MyConcertsComponent.html",[53,0.442,128,0.96]],["body/components/MyConcertsComponent.html",[3,0.104,4,0.091,5,0.091,8,0.235,9,0.912,10,1.892,12,0.956,14,2.525,17,1.268,19,1.415,20,0.019,21,0.674,22,0.512,23,1.35,25,1.35,27,0.5,29,0.359,39,0.104,40,0.303,41,1.407,42,0.954,44,1.268,45,1.433,51,0.009,52,0.009,53,0.537,54,0.65,55,1.153,56,0.784,57,0.784,58,0.784,59,0.784,61,0.443,62,2.345,63,2.236,64,1.209,66,1.209,68,0.584,70,1.433,73,0.823,74,0.591,83,0.987,87,2.58,89,1.826,90,1.674,91,2.058,96,1.795,97,1.433,103,0.784,104,1.209,105,1.209,106,0.784,107,1.658,108,0.784,109,0.784,110,0.65,111,0.714,112,0.784,113,0.62,114,1.741,115,0.784,116,0.62,117,0.784,118,0.62,119,0.956,120,0.784,121,0.65,122,0.65,123,0.784,124,0.65,125,0.784,126,0.62,127,0.784,128,1.31,129,0.784,130,0.62,131,0.784,132,0.62,133,0.784,134,0.65,135,0.784,136,0.784,137,0.62,138,0.748,139,0.784,140,0.65,141,0.748,142,1.209,143,0.65,144,0.784,145,0.65,146,0.748,147,0.62,148,0.748,149,0.784,150,0.784,218,4.893,219,4.455,247,3.259,259,2.052,260,2.237,268,1.1,283,2.82,294,1.795,300,1.707,311,1.674,314,2.208,315,2.017,322,1.542,323,2.856,332,1.257,333,1.433,334,1.471,338,3.815,364,1.674,369,3.565,373,2.377,380,2.657,386,3.159,395,2.58,412,2.476,415,1.542,417,1.339,429,2.418,442,1.674,454,3.259,477,1.542,487,1.433,490,1.674,491,2.58,502,4.267,523,2.228,531,3.259,534,3.173,535,3.173,537,3.173,553,2.833,557,3.173,559,3.259,641,1.838,665,2.833,724,2.208,753,2.058,754,4.5,755,3.688,756,4.5,757,3.871,758,3.688,759,3.688,760,3.82,761,2.393,762,2.393,763,6.209,764,3.173,765,3.688,766,2.393,767,3.688,768,2.393,769,2.208,770,2.064,771,4.964,772,2.393,773,3.688,774,2.393,775,2.58,776,2.58,777,2.393,778,2.393,779,2.393,780,2.393,781,2.393,782,2.393,783,2.393,784,2.393,785,1.838,786,3.688,787,2.393,788,2.393,789,3.688,790,3.688,791,3.688,792,3.173,793,2.393]],["title/components/MyNftComponent.html",[53,0.442,130,0.96]],["body/components/MyNftComponent.html",[1,4.241,3,0.176,4,0.103,5,0.103,6,2.089,8,0.267,9,1.005,10,1.596,12,1.053,17,1.18,19,1.053,20,0.019,21,0.605,22,0.516,23,1.005,25,1.005,27,0.576,29,0.408,30,4.44,31,1.902,34,1.142,35,2.089,39,0.118,40,0.345,41,1.522,44,1.398,51,0.01,52,0.01,53,0.581,54,0.739,55,1.271,56,0.892,57,0.892,58,0.892,59,0.892,61,0.503,62,2.39,63,2.279,64,1.333,66,1.333,68,0.644,70,1.629,73,1.398,74,1.005,89,2.012,92,1.753,93,1.753,95,1.902,96,1.085,103,0.892,104,1.333,105,1.333,106,0.892,107,1.77,108,0.892,109,0.892,110,0.739,111,0.811,112,0.892,113,0.705,114,1.497,115,0.892,116,0.705,117,0.892,118,0.705,119,1.497,120,0.892,121,1.104,122,1.569,123,0.892,124,0.739,125,0.892,126,0.705,127,0.892,128,0.705,129,0.892,130,1.399,131,0.892,132,0.705,133,0.892,134,0.739,135,0.892,136,0.892,137,0.705,138,0.85,139,0.892,140,0.739,141,0.85,142,1.333,143,0.739,144,0.892,145,0.739,146,0.85,147,0.705,148,0.85,149,0.892,150,0.892,233,4.241,248,2.427,261,1.398,270,1.901,283,2.155,284,1.629,291,1.212,293,2.843,294,1.085,300,1.846,302,1.753,308,1.272,315,1.941,334,1.621,380,2.837,386,3.302,387,5.406,398,1.707,409,1.901,412,1.621,415,1.753,436,2.34,437,3.123,438,2.34,440,1.8,442,2.843,443,2.34,474,2.275,480,1.346,481,1.629,487,1.629,490,1.902,491,2.843,502,2.62,509,2.34,541,2.62,560,3.497,604,2.089,607,1.902,612,4.187,628,3.022,644,2.34,794,4.658,795,2.34,796,4.867,797,4.065,798,4.065,799,2.72,800,4.065,801,2.72,802,4.065,803,2.72,804,3.497,805,4.065,806,4.065,807,2.72,808,2.72,809,2.72,810,2.34,811,2.72,812,2.72,813,4.065,814,4.065,815,4.065,816,4.065,817,4.065,818,4.065,819,4.065,820,4.065,821,6.064,822,4.065,823,2.843,824,2.72,825,4.065]],["title/components/MyOffersComponent.html",[53,0.442,132,0.96]],["body/components/MyOffersComponent.html",[3,0.085,4,0.074,5,0.074,8,0.192,9,0.776,10,1.734,12,0.813,17,1.303,19,1.021,20,0.019,21,0.555,22,0.492,23,0.974,25,1.224,27,0.453,29,0.293,39,0.085,40,0.247,41,1.412,42,1.571,44,1.553,51,0.007,52,0.007,53,0.47,54,0.53,55,0.982,56,0.639,57,0.639,58,0.639,59,0.639,61,0.361,62,2.264,63,2.159,64,1.029,66,1.029,68,0.498,73,1.702,74,1.307,83,0.752,96,0.778,103,0.639,104,1.029,105,1.029,106,0.639,107,1.48,108,0.639,109,0.639,110,0.53,111,0.582,112,0.639,113,0.505,114,1.588,115,0.639,116,0.505,117,0.639,118,0.505,119,0.813,120,0.639,121,0.53,122,1.807,123,0.639,124,0.53,125,0.639,126,0.505,127,0.639,128,0.505,129,0.639,130,0.505,131,0.639,132,1.17,133,0.639,134,0.53,135,0.639,136,0.639,137,0.505,138,0.61,139,0.639,140,0.53,141,0.61,142,1.029,143,0.53,144,0.639,145,0.53,146,0.61,147,0.505,148,0.61,149,0.639,150,0.639,235,4.535,249,3.584,258,1.247,259,1.347,260,1.702,261,1.08,262,1.734,268,0.936,270,2.315,283,2.946,291,1.577,294,1.571,300,1.494,308,0.912,315,0.778,334,1.252,372,2.56,380,2.373,398,2.221,401,2.473,410,1.092,411,3.462,412,1.252,416,1.702,429,1.999,440,1.39,448,2.429,450,3.409,451,3.821,452,2.023,454,3.19,474,2.205,480,0.965,541,2.023,545,1.757,565,1.88,567,2.412,617,3.167,623,1.88,628,2.96,637,1.494,638,0.639,639,1.257,640,1.498,642,1.168,643,1.498,654,1.498,655,1.678,656,1.257,660,3.885,661,3.885,662,3.885,663,3.885,664,2.911,679,2.527,724,1.168,725,2.07,727,2.373,729,2.205,730,2.911,760,3.699,770,1.092,775,2.196,776,2.196,794,4.981,804,2.701,823,2.196,826,1.678,827,3.94,828,3.14,829,3.94,830,3.94,831,3.94,832,2.701,833,4.516,834,2.701,835,1.678,836,3.14,837,2.701,838,1.951,839,2.701,840,4.272,841,1.951,842,1.951,843,3.14,844,2.701,845,4.516,846,1.951,847,3.14,848,3.14,849,1.951,850,2.023,851,1.951,852,3.94,853,1.951,854,1.951,855,1.951,856,1.951,857,1.498,858,3.14,859,1.951,860,3.14,861,1.951,862,1.364,863,1.678,864,1.951,865,1.951,866,1.678,867,1.498,868,1.498,869,1.678,870,1.678,871,1.951,872,1.951,873,1.951,874,3.14,875,1.951,876,3.14,877,1.951,878,1.951,879,1.951,880,1.951,881,1.951,882,3.14,883,3.14,884,3.885,885,2.412,886,2.412,887,3.885,888,3.885,889,3.885,890,3.885,891,2.701,892,4.516,893,3.885,894,2.701,895,1.498,896,1.498,897,1.498,898,1.951]],["title/interfaces/NFT.html",[248,1.275,252,0.557]],["body/interfaces/NFT.html",[3,0.198,4,0.173,5,0.173,8,0.449,20,0.018,21,0.513,22,0.594,34,2.449,39,0.318,51,0.014,52,0.014,61,1.359,68,0.924,74,1.131,83,1.044,248,2.208,252,1.103,253,2.727,254,1.5,255,2.264,256,2.403,257,2.403,258,1.683,259,2.191,260,1.573,261,2.526,262,1.5,263,3.002,264,2.403,265,3.435,266,2.403,267,2.403,268,1.364,269,2.403,270,3.161,271,2.403]],["title/components/NavigationBarComponent.html",[53,0.442,134,1.006]],["body/components/NavigationBarComponent.html",[3,0.101,4,0.089,5,0.089,8,0.356,9,0.895,10,2.191,12,0.939,13,1.635,14,2.401,17,1.258,19,0.606,20,0.019,21,0.497,22,0.199,23,0.578,25,1.474,27,0.495,29,0.351,39,0.101,40,0.296,41,1.562,42,2.523,44,2.051,45,2.656,49,1.374,51,0.009,52,0.009,53,0.529,54,0.635,55,1.133,56,0.767,57,0.767,58,0.767,59,0.767,61,0.432,62,2.336,63,2.228,64,1.188,66,1.188,70,2.169,83,0.813,95,1.635,96,0.933,97,1.4,98,1.4,101,1.157,103,0.767,104,1.188,105,1.188,106,0.767,107,1.638,108,0.767,109,0.767,110,0.635,111,0.697,112,0.767,113,0.606,114,1.639,115,0.767,116,0.606,117,0.767,118,0.606,119,1.4,120,0.767,121,0.635,122,0.635,123,0.767,124,0.635,125,0.767,126,0.606,127,0.767,128,0.606,129,0.767,130,0.606,131,0.767,132,0.606,133,0.767,134,1.356,135,2.02,136,0.767,137,0.606,138,2.117,139,0.767,140,0.635,141,0.731,142,1.188,143,0.635,144,0.767,145,0.635,146,0.731,147,0.606,148,1.133,149,0.767,150,0.767,184,4.86,198,2.534,214,1.228,239,2.011,242,3.483,247,3.483,248,0.804,249,3.483,291,2.042,294,1.769,308,1.093,311,3.102,314,2.656,315,0.933,323,2.952,332,1.228,333,1.4,335,3.116,364,1.635,409,2.074,462,1.507,474,2.028,480,1.157,481,1.4,487,2.656,495,1.796,516,5.13,520,5.749,542,1.635,545,2.028,641,1.796,723,2.011,738,1.796,792,3.116,899,5.442,900,2.011,901,4.435,902,3.623,903,4.995,904,4.995,905,4.995,906,4.995,907,4.995,908,4.995,909,4.995,910,3.843,911,2.338,912,2.338,913,3.623,914,2.991,915,2.338,916,4.995,917,4.995,918,2.338,919,2.338,920,2.338,921,2.338,922,4.995,923,2.338,924,2.011,925,2.338,926,2.338,927,2.338,928,2.338,929,2.011,930,2.338,931,3.623,932,3.623,933,5.717,934,5.717,935,4.435,936,4.435,937,2.338,938,2.338,939,2.338,940,3.623,941,3.623,942,3.623,943,3.623,944,3.623,945,3.623,946,2.783,947,3.623,948,3.623,949,3.116,950,3.623,951,3.623,952,2.338,953,2.338,954,2.338,955,2.338,956,2.338,957,2.338,958,2.338,959,3.623,960,2.338,961,2.338,962,2.338]],["title/injectables/NftMarketplaceService.html",[0,1.406,617,2.219]],["body/injectables/NftMarketplaceService.html",[0,1.289,2,1.206,3,0.093,4,0.082,5,0.082,8,0.212,9,0.84,10,2.416,12,0.88,13,1.507,14,2.32,17,1.315,19,1.553,20,0.019,21,0.672,22,0.492,23,1.482,25,1.561,26,3.589,27,0.506,29,0.324,32,1.29,33,1.507,36,1.507,37,1.206,38,1.132,39,0.093,40,0.273,41,1.494,42,2.569,44,2.253,45,2.035,49,2.096,51,0.008,52,0.008,73,1.643,74,1.04,83,1.026,114,1.553,122,1.715,258,1.413,259,2.066,260,2.061,261,1.9,262,2.07,268,1.425,283,3.233,291,1.788,372,2.56,396,2.377,401,2.234,412,2.204,416,2.061,429,2.851,440,1.504,448,1.725,494,3.341,591,2.19,617,2.035,621,2.377,628,3.092,637,1.812,638,1.114,639,4.221,650,1.853,667,3.863,683,2.943,725,1.132,727,3.64,729,1.206,730,4.151,731,3.079,760,3.341,769,3.589,770,3.354,775,2.377,776,2.377,832,2.923,834,2.923,837,2.923,840,3.67,844,2.923,850,3.727,857,1.655,893,2.923,914,2.035,963,1.853,964,2.943,965,4.777,966,2.61,967,3.398,968,4.777,969,3.398,970,3.398,971,2.154,972,2.154,973,2.154,974,4.604,975,4.417,976,2.154,977,2.154,978,2.923,979,2.154,980,2.61,981,2.61,982,3.398,983,2.154,984,2.154,985,3.398,986,2.154,987,3.398,988,2.154,989,3.398,990,2.154,991,2.154,992,2.61,993,2.154,994,2.154,995,5.199,996,1.853,997,2.154,998,1.853,999,1.853,1000,2.154,1001,1.853,1002,1.655,1003,2.154,1004,2.154,1005,2.154,1006,4.777,1007,2.154,1008,2.154,1009,2.154,1010,2.154,1011,1.507,1012,2.377,1013,1.507,1014,1.655,1015,2.154]],["title/interfaces/OwnedNFTs.html",[34,1.556,252,0.557]],["body/interfaces/OwnedNFTs.html",[3,0.207,4,0.181,5,0.181,8,0.47,20,0.018,21,0.536,22,0.51,34,3.031,39,0.321,51,0.014,52,0.014,61,1.212,68,0.95,74,1.181,83,1.053,248,2.362,252,1.113,253,2.803,254,1.567,255,2.365,256,2.511,257,2.511,258,1.702,259,1.953,260,1.643,261,2.253,262,1.567,263,3.063,264,2.511,265,3.063,266,2.511,267,2.511,268,1.425,269,2.511,270,2.234,271,3.609]],["title/components/PageNotFoundComponent.html",[53,0.442,137,0.96]],["body/components/PageNotFoundComponent.html",[3,0.18,4,0.157,5,0.157,12,1.588,17,0.848,20,0.018,21,0.614,27,0.38,29,0.624,39,0.18,40,0.526,51,0.013,52,0.013,53,0.731,54,1.127,55,1.712,56,1.361,57,1.361,58,1.361,59,1.361,61,0.768,62,2.512,63,2.396,64,1.795,66,1.795,103,1.361,104,1.795,105,1.795,106,1.361,107,2.136,108,1.361,109,1.361,110,1.127,111,1.238,112,1.361,113,1.076,114,1.419,115,1.361,116,1.076,117,1.361,118,1.076,119,1.419,120,1.361,121,1.127,122,1.127,123,1.361,124,1.127,125,1.361,126,1.076,127,1.361,128,1.076,129,1.361,130,1.076,131,1.361,132,1.076,133,1.361,134,1.127,135,1.361,136,1.361,137,1.688,138,2.299,139,1.361,140,1.127,141,1.298,142,1.795,143,1.127,144,1.361,145,1.127,146,1.298,147,1.076,148,1.298,149,1.361,150,1.361,200,3.83,300,1.575,362,2.324,465,2.904,466,2.904,1016,4.711,1017,3.572,1018,6.515,1019,6.128,1020,5.476,1021,4.152,1022,5.476,1023,4.152,1024,4.152]],["title/modules/PipesModule.html",[151,2.219,748,2.219]],["body/modules/PipesModule.html",[3,0.212,4,0.185,5,0.185,20,0.019,27,0.634,29,0.735,39,0.212,40,0.62,51,0.014,52,0.014,153,2.422,154,3.197,164,3.643,165,2.93,166,2.738,168,3.921,170,2.93,172,3.643,210,3.921,211,2.93,251,5.233,702,4.919,748,4.524,1002,3.759,1025,4.209,1026,4.209,1027,4.209,1028,4.919,1029,4.893,1030,4.893,1031,4.893,1032,4.893]],["title/components/ReselledTicketComponent.html",[53,0.442,140,1.006]],["body/components/ReselledTicketComponent.html",[3,0.109,4,0.096,5,0.096,8,0.248,9,0.949,10,1.524,12,0.995,17,1.251,19,0.995,20,0.019,21,0.583,22,0.501,23,0.949,25,0.949,27,0.476,29,0.379,39,0.109,40,0.32,41,1.625,42,1.006,44,1.32,51,0.009,52,0.009,53,0.555,54,0.685,55,1.2,56,0.827,57,0.827,58,0.827,59,0.827,61,0.466,62,2.364,63,2.254,64,1.259,66,1.259,68,0.608,73,1.599,74,1.285,83,0.871,96,1.006,103,0.827,104,1.259,105,1.259,106,0.827,107,1.704,108,0.827,109,0.827,110,0.685,111,0.752,112,0.827,113,0.653,114,0.995,115,0.827,116,0.653,117,0.827,118,0.653,119,0.995,120,0.827,121,0.685,122,1.042,123,0.827,124,0.685,125,0.827,126,0.653,127,0.827,128,0.653,129,0.827,130,0.653,131,0.827,132,0.653,133,0.827,134,0.685,135,0.827,136,0.827,137,0.653,138,0.788,139,0.827,140,1.411,141,1.974,142,1.259,143,0.685,144,0.827,145,0.685,146,0.788,147,0.653,148,0.788,149,0.827,150,0.827,258,1.389,260,1.32,261,1.32,262,1.834,268,0.752,283,2.058,291,1.145,294,1.006,300,1.763,308,1.179,315,1.531,334,1.531,362,1.411,372,2.476,373,2.996,380,2.731,398,2.474,401,1.795,411,1.764,416,2.026,419,1.937,429,2.058,448,2.421,450,3.35,451,3.112,452,2.475,454,2.996,474,2.602,476,1.764,477,1.625,480,1.248,481,1.51,541,2.475,542,1.764,617,3.528,623,2.299,628,3.297,637,1.971,638,0.827,639,1.625,640,1.937,654,1.937,667,3.35,679,2.909,724,1.51,725,2.731,727,2.443,731,2.475,752,4.85,769,2.299,770,2.149,823,2.685,835,2.169,840,1.937,850,3.605,857,1.937,862,1.764,863,2.169,866,2.169,867,1.937,868,1.937,869,2.169,870,2.169,884,4.471,885,2.949,886,2.949,887,4.471,888,4.471,889,4.471,890,4.471,891,3.303,894,3.303,895,1.937,896,1.937,897,1.937,964,2.685,1033,5.431,1034,1.937,1035,3.999,1036,3.303,1037,4.649,1038,2.949,1039,3.303,1040,2.169,1041,3.839,1042,2.522,1043,3.303,1044,2.169,1045,2.169,1046,2.522,1047,3.839,1048,2.522,1049,2.522,1050,2.522,1051,2.522]],["title/interfaces/Sector.html",[252,0.557,398,1.556]],["body/interfaces/Sector.html",[3,0.205,4,0.18,5,0.18,8,0.466,20,0.018,21,0.768,22,0.622,27,0.434,39,0.283,51,0.014,52,0.014,68,0.945,83,1.003,252,0.98,254,1.553,258,1.724,398,2.504,409,3.459,416,1.63,448,2.548,523,2.345,531,3.054,637,2.805,638,1.553,670,3.314,671,3.64,672,4.789,673,4.789,674,4.789,675,5.26,676,5.26,677,3.314,678,3.64,679,2.652,680,3.314]],["title/components/SectorComponent.html",[53,0.442,143,1.006]],["body/components/SectorComponent.html",[3,0.113,4,0.099,5,0.099,8,0.256,9,0.972,12,1.019,17,1.302,19,1.019,20,0.019,21,0.669,22,0.449,23,0.972,25,1.172,27,0.434,29,0.391,39,0.113,40,0.33,41,0.814,42,1.038,49,0.987,51,0.009,52,0.009,53,0.566,54,0.707,55,1.23,56,0.854,57,0.854,58,0.854,59,0.854,61,0.482,62,2.375,63,2.265,64,1.29,66,1.29,68,0.623,73,1.353,74,0.972,83,0.37,89,2.347,96,1.038,101,2.347,103,0.854,104,1.29,105,1.29,106,0.854,107,1.732,108,0.854,109,0.854,110,0.707,111,0.776,112,0.854,113,0.674,114,1.019,115,0.854,116,0.674,117,0.854,118,0.674,119,1.019,120,0.854,121,0.707,122,0.707,123,0.854,124,0.707,125,0.854,126,0.674,127,0.854,128,0.674,129,0.854,130,0.674,131,0.854,132,0.674,133,0.854,134,0.707,135,0.854,136,0.854,137,0.674,138,0.814,139,0.854,140,0.707,141,0.814,142,1.29,143,1.434,144,0.854,145,0.707,146,0.814,147,0.674,148,0.814,149,0.854,150,0.854,190,1.457,241,2,258,1.118,284,2.355,291,1.779,294,1.891,300,0.987,308,1.217,314,1.559,315,1.569,316,2,338,3.908,357,3.384,364,1.821,369,3.833,398,2.74,401,2.652,409,1.839,412,2.262,416,1.353,440,1.741,448,2.048,451,2.355,452,3.844,462,1.678,470,3.384,485,4.544,494,2.751,497,2,503,3.384,545,3.338,555,5.131,559,2.535,562,3.022,563,3.695,564,3.384,565,2.355,566,3.384,567,4.058,569,4.078,570,5.131,576,2.24,623,2.355,642,1.559,643,2,664,2.535,665,4.058,672,1.821,673,1.821,674,1.821,677,1.821,679,2.201,724,2.355,738,2,839,3.384,862,1.821,867,3.022,1038,3.022,1052,2.24,1053,4.741,1054,3.933,1055,5.283,1056,5.283,1057,3.933,1058,4.741,1059,3.933,1060,4.741,1061,3.933,1062,2.603,1063,2.603,1064,2.603,1065,4.741,1066,2.603,1067,2.603,1068,3.933,1069,2.603,1070,3.933,1071,2.603,1072,2.603,1073,3.933,1074,2.603,1075,2.24,1076,2.603,1077,3.933,1078,3.933,1079,2,1080,2.24,1081,2.603,1082,2.603,1083,2.603,1084,2.603,1085,2.603,1086,2.603,1087,2.603,1088,2.603,1089,2.603,1090,2.603,1091,2.603,1092,2.603,1093,2.603,1094,2.603,1095,2.603,1096,2.603,1097,2.603,1098,2.603,1099,2.603,1100,2.603,1101,2.603,1102,3.933,1103,3.933,1104,2.603,1105,2.603,1106,3.933,1107,2.603,1108,3.933,1109,2.603]],["title/interfaces/SellerOffer.html",[252,0.557,729,2.074]],["body/interfaces/SellerOffer.html",[3,0.225,4,0.196,5,0.196,8,0.51,20,0.018,22,0.536,27,0.578,39,0.295,51,0.015,52,0.015,68,0.999,83,1.06,252,1.02,254,1.7,258,1.487,262,1.7,372,2.296,416,2.337,448,1.873,637,2.392,638,1.7,656,3.343,725,2.725,726,3.627,727,3.57,728,3.984,729,3.529,730,4.556,731,4.556]],["title/injectables/SnackbarService.html",[0,1.406,910,2.389]],["body/injectables/SnackbarService.html",[0,2.057,2,2.29,3,0.311,4,0.155,5,0.155,8,0.402,9,1.341,12,1.405,17,1.323,19,1.678,20,0.019,21,0.726,22,0.551,23,1.601,25,1.712,27,0.497,29,0.614,37,2.29,38,2.15,39,0.177,40,0.518,41,1.279,49,2.307,51,0.013,52,0.013,83,1.032,197,3.143,198,2.862,286,4.673,291,2.066,910,3.495,1110,3.52,1111,7.066,1112,7.066,1113,4.091,1114,6.478,1115,4.091,1116,7.609,1117,5.423,1118,4.091,1119,6.927,1120,6.083,1121,5.423,1122,4.091,1123,5.423,1124,4.091,1125,6.083,1126,6.083]],["title/components/StandardTicketComponent.html",[53,0.442,145,1.006]],["body/components/StandardTicketComponent.html",[3,0.095,4,0.083,5,0.083,8,0.216,9,0.852,10,1.396,12,0.893,17,1.232,19,1.25,20,0.019,21,0.624,22,0.513,23,1.193,25,1.193,27,0.442,29,0.33,39,0.095,40,0.278,41,0.686,42,1.375,44,1.186,49,1.308,51,0.008,52,0.008,53,0.508,54,0.596,55,1.078,56,0.719,57,0.719,58,0.719,59,0.719,61,0.406,62,2.312,63,2.205,64,1.13,66,1.13,68,0.546,73,1.804,74,1.053,83,0.49,96,0.875,103,0.719,104,1.13,105,1.13,106,0.719,107,1.582,108,0.719,109,0.719,110,0.596,111,0.654,112,0.719,113,0.568,114,0.893,115,0.719,116,0.568,117,0.719,118,0.568,119,0.893,120,0.719,121,0.596,122,0.596,123,0.719,124,0.596,125,0.719,126,0.568,127,0.719,128,0.568,129,0.719,130,0.568,131,0.719,132,0.568,133,0.719,134,0.596,135,0.719,136,0.719,137,0.568,138,0.686,139,0.719,140,0.596,141,0.686,142,1.13,143,0.596,144,0.719,145,1.31,146,1.886,147,0.568,148,0.686,149,0.719,150,0.719,258,1.551,261,1.186,262,1.72,268,1.028,291,1.439,294,0.875,300,0.832,308,1.026,315,1.375,334,1.375,362,1.228,369,1.228,372,2.811,373,2.745,379,3.663,386,2.926,395,1.535,396,2.411,398,2.763,401,2.604,411,3.895,412,1.699,415,1.414,416,2.075,417,1.228,419,3.271,429,2.322,448,2.337,450,3.111,451,2.89,452,2.222,454,3.589,474,2.383,476,1.535,477,1.414,480,1.086,481,1.314,539,1.686,541,2.222,542,1.535,589,1.888,621,4.219,623,2.55,628,2.701,637,2.408,638,0.719,664,3.111,667,3.589,679,2.701,680,3.375,750,4.766,764,4.79,769,2.065,770,1.93,785,2.648,823,2.411,862,2.411,885,2.648,886,2.648,895,1.686,896,1.686,897,1.686,929,2.966,964,2.411,975,2.411,1034,1.686,1035,3.663,1036,2.966,1038,2.648,1039,2.966,1040,1.888,1043,2.966,1044,1.888,1045,1.888,1127,5.337,1128,4.259,1129,3.448,1130,4.259,1131,2.194,1132,2.194,1133,3.448,1134,2.194,1135,3.448,1136,3.448,1137,4.826,1138,3.448,1139,5.246,1140,2.194,1141,3.448,1142,3.448,1143,4.259,1144,3.448,1145,3.663,1146,4.259,1147,2.194,1148,2.194,1149,2.194,1150,3.448,1151,2.194,1152,2.194,1153,2.194,1154,2.194,1155,2.194,1156,3.448,1157,2.194,1158,2.194,1159,2.194,1160,2.194,1161,2.194,1162,2.194,1163,2.194,1164,2.194,1165,2.194,1166,2.194,1167,2.194,1168,2.194,1169,1.888,1170,2.194,1171,2.194,1172,2.194,1173,1.888,1174,2.194,1175,2.194,1176,3.448,1177,2.194,1178,2.194,1179,2.194,1180,2.194,1181,2.194,1182,2.194,1183,2.194,1184,4.826,1185,4.826,1186,4.826,1187,4.826,1188,3.448]],["title/injectables/Ticked1155Service.html",[0,1.406,386,1.947]],["body/injectables/Ticked1155Service.html",[0,1.101,2,0.991,3,0.077,4,0.067,5,0.067,8,0.174,9,0.717,10,2.444,12,0.752,13,1.239,14,2.123,17,1.344,19,1.706,20,0.019,21,0.738,22,0.56,23,1.627,25,1.645,26,3.943,27,0.431,29,0.266,36,1.239,37,0.991,38,0.93,39,0.077,40,0.224,41,1.333,42,2.725,44,2.367,49,2.355,51,0.007,52,0.007,73,1.467,74,0.912,83,1.079,114,1.444,119,0.752,258,1.434,259,2.066,260,2.474,261,1.467,262,1.751,268,1.272,283,3.283,291,1.662,327,2.497,369,3.119,372,2.364,386,1.525,396,2.03,398,1.791,401,2.365,409,1.725,410,2.83,412,1.158,416,1.268,417,0.991,429,2.629,440,1.285,448,1.54,456,2.749,553,2.23,559,1.871,563,2.983,591,1.871,621,3.898,627,3.669,628,2.387,631,3.669,637,1.618,638,0.952,667,3.592,683,2.579,757,3.173,760,2.03,769,3.338,770,3.475,771,2.497,775,2.03,776,2.03,850,1.871,914,1.738,946,3.276,964,2.03,966,2.23,974,4.282,975,3.898,980,3.276,981,3.276,992,2.23,996,1.523,998,1.523,999,1.523,1001,1.523,1002,1.36,1011,1.239,1012,2.03,1013,1.239,1014,1.36,1075,2.497,1189,1.523,1190,2.902,1191,2.902,1192,2.902,1193,2.902,1194,2.902,1195,2.902,1196,2.902,1197,2.902,1198,2.902,1199,2.902,1200,1.771,1201,2.902,1202,1.771,1203,2.902,1204,1.771,1205,2.902,1206,1.771,1207,2.497,1208,2.902,1209,1.771,1210,2.902,1211,1.771,1212,2.902,1213,1.771,1214,2.902,1215,1.771,1216,2.902,1217,1.771,1218,2.902,1219,1.771,1220,2.902,1221,1.771,1222,2.902,1223,1.771,1224,2.902,1225,5.574,1226,1.771,1227,2.902,1228,1.771,1229,2.902,1230,1.771,1231,2.902,1232,1.771,1233,1.771,1234,1.771,1235,6.418,1236,1.771,1237,2.497,1238,2.497,1239,2.497,1240,1.771,1241,1.771,1242,1.771,1243,1.771,1244,1.771,1245,1.771,1246,1.771,1247,1.771,1248,1.771,1249,1.771,1250,1.771,1251,1.771,1252,1.771,1253,1.771]],["title/injectables/TickedFactoryService.html",[0,1.406,323,1.835]],["body/injectables/TickedFactoryService.html",[0,1.461,2,1.418,3,0.11,4,0.096,5,0.096,8,0.249,9,0.952,10,2.389,12,1.208,17,1.291,19,1.529,20,0.019,21,0.763,22,0.477,23,1.459,25,1.563,26,3.534,27,0.513,29,0.38,32,1.517,33,1.772,37,1.418,38,1.331,39,0.11,40,0.321,41,1.457,42,2.634,44,2.227,49,2.239,51,0.009,52,0.009,73,0.871,74,0.626,83,1.048,111,1.149,114,1.638,119,0.998,122,1.046,258,1.099,259,1.886,260,2.435,268,1.76,274,3.954,280,2.695,283,3.176,291,1.886,323,1.907,332,3.403,369,3.434,401,1.184,409,2.18,412,2.078,417,1.418,429,2.867,440,1.706,502,3.954,523,1.254,563,2.695,591,2.483,638,1.263,664,2.483,683,3.261,769,3.786,770,3.757,850,2.483,868,2.959,914,3.534,966,2.959,974,4.857,975,4.422,978,3.314,980,2.959,981,3.581,1011,1.772,1012,2.695,1013,1.772,1014,1.946,1079,4.713,1080,3.314,1207,3.314,1237,2.179,1238,2.179,1239,2.179,1254,2.179,1255,3.852,1256,4.662,1257,3.852,1258,5.209,1259,3.852,1260,3.852,1261,2.533,1262,3.852,1263,2.533,1264,3.852,1265,3.852,1266,5.209,1267,2.533,1268,5.604,1269,2.533,1270,2.533,1271,3.852,1272,2.533,1273,2.533,1274,3.852,1275,2.533,1276,4.481,1277,3.852,1278,3.852,1279,2.533,1280,3.852,1281,3.852,1282,2.533,1283,2.533,1284,5.209,1285,2.533,1286,3.852,1287,2.533,1288,2.533,1289,2.533,1290,2.533,1291,2.533,1292,2.533,1293,2.533]],["title/interfaces/Ticket.html",[252,0.557,416,1.275]],["body/interfaces/Ticket.html",[3,0.212,4,0.185,5,0.185,8,0.48,20,0.018,21,0.547,22,0.606,27,0.447,39,0.287,51,0.014,52,0.014,68,0.963,83,1.012,252,0.993,254,1.601,258,1.679,398,2.05,409,3.479,416,2.09,448,2.571,523,2.417,531,3.147,637,2.753,638,1.601,670,3.415,671,3.75,672,3.415,673,3.415,674,3.415,675,3.75,676,3.75,677,4.841,678,5.317,679,3.874,680,4.841]],["title/interfaces/TokenMetadata.html",[252,0.557,263,1.733]],["body/interfaces/TokenMetadata.html",[3,0.21,4,0.184,5,0.184,8,0.477,20,0.018,21,0.544,22,0.413,34,2.541,39,0.322,51,0.014,52,0.014,61,1.22,68,0.959,74,1.199,83,1.072,248,2.081,252,1.116,253,2.829,254,1.59,255,2.401,256,2.549,257,2.549,258,1.628,259,1.967,260,1.668,261,2.268,262,1.59,263,3.229,264,3.628,265,3.084,266,2.549,267,2.549,268,1.447,269,2.549,270,2.268,271,2.549]],["title/interfaces/TokenUri.html",[252,0.557,265,1.733]],["body/interfaces/TokenUri.html",[3,0.207,4,0.181,5,0.181,8,0.47,20,0.018,21,0.536,22,0.51,34,2.517,39,0.321,51,0.014,52,0.014,61,1.212,68,0.95,74,1.181,83,1.081,248,2.062,252,1.113,253,2.803,254,1.567,255,2.365,256,2.511,257,2.511,258,1.619,259,1.953,260,1.643,261,2.253,262,1.567,263,3.063,264,2.511,265,3.212,266,3.609,267,3.609,268,1.425,269,2.511,270,2.234,271,2.511]],["title/modules/UserModule.html",[151,2.219,163,2.389]],["body/modules/UserModule.html",[3,0.185,4,0.161,5,0.161,20,0.019,27,0.695,29,0.64,39,0.185,40,0.54,51,0.013,52,0.013,119,1.104,121,1.902,122,1.513,130,1.815,132,1.815,153,2.11,154,2.927,160,3.921,163,4.826,164,3.336,165,2.552,166,2.385,168,3.591,170,3.336,172,3.336,173,4.28,174,2.747,175,2.552,176,3.274,190,2.385,194,3.897,195,2.981,204,3.897,205,2.981,208,3.274,210,3.591,211,2.552,212,4.28,214,2.239,233,2.981,234,3.666,235,2.981,236,3.666,341,4.28,342,3.274,349,4.28,350,3.274,351,4.28,544,2.981,607,2.981,745,4.792,746,3.666,748,3.336,749,3.666,810,3.666,1294,3.666,1295,3.666,1296,4.262,1297,4.262]],["title/injectables/WalletService.html",[0,1.406,14,1.556]],["body/injectables/WalletService.html",[0,2.137,2,2.427,3,0.188,4,0.164,5,0.164,8,0.426,9,1.393,10,2.308,14,2.366,17,1.353,20,0.019,22,0.479,23,1.393,25,1.547,26,3.967,27,0.516,29,0.651,37,2.427,38,2.278,39,0.188,40,0.549,42,2.247,44,2.153,49,2.374,51,0.013,52,0.013,68,0.893,291,1.68,410,3.503,412,1.729,440,1.92,591,2.795,611,5.407,638,1.847,914,4.436,946,3.331,949,4.847,992,4.328,1011,3.033,1012,3.033,1013,3.033,1298,3.73,1299,6.626,1300,6.626,1301,6.626,1302,4.336,1303,4.336,1304,5.634,1305,5.634,1306,4.847,1307,5.634,1308,4.336,1309,4.336,1310,4.336,1311,4.336,1312,4.336,1313,4.336,1314,4.336,1315,4.336,1316,4.336,1317,4.336,1318,4.336,1319,4.336]],["title/pipes/WeiToEthPipe.html",[701,2.389,1028,2.389]],["body/pipes/WeiToEthPipe.html",[3,0.214,4,0.187,5,0.187,9,1.22,17,1.008,19,1.279,20,0.018,21,0.745,22,0.42,23,1.22,25,1.512,27,0.56,29,0.741,39,0.214,40,0.625,49,1.872,51,0.014,52,0.014,61,0.913,83,1.034,268,1.472,291,1.824,334,1.969,429,2.185,448,2.691,450,3.942,480,2.443,637,2.828,638,2.005,701,3.942,703,3.792,712,5.262,1028,3.942,1320,5.262,1321,4.246,1322,6.117,1323,4.936,1324,6.117,1325,4.936]],["title/components/WhitelistComponent.html",[53,0.442,147,0.96]],["body/components/WhitelistComponent.html",[3,0.223,4,0.113,5,0.113,8,0.294,9,1.078,10,1.687,12,1.13,17,1.281,19,0.775,20,0.019,21,0.577,22,0.481,23,0.739,25,1.078,27,0.471,29,0.449,39,0.13,40,0.379,41,1.363,44,1.029,49,1.654,51,0.01,52,0.01,53,0.614,54,0.812,55,1.363,56,0.981,57,0.981,58,0.981,59,0.981,61,0.553,62,2.421,63,2.309,64,1.43,66,1.43,68,0.691,83,0.892,87,3.955,89,2.158,101,1.481,103,0.981,104,1.43,105,1.43,106,0.981,107,1.854,108,0.981,109,0.981,110,0.812,111,0.892,112,0.981,113,0.775,114,1.13,115,0.981,116,0.775,117,0.981,118,0.775,119,1.13,120,0.981,121,0.812,122,0.812,123,0.981,124,0.812,125,0.981,126,0.775,127,0.981,128,0.775,129,0.981,130,0.775,131,0.981,132,0.775,133,0.981,134,0.812,135,0.981,136,0.981,137,0.775,138,0.935,139,0.981,140,0.812,141,0.935,142,1.43,143,0.812,144,0.981,145,0.812,146,0.935,147,1.465,148,1.609,149,0.981,150,0.981,260,2.284,291,1.686,294,1.193,300,1.135,315,1.739,322,1.928,323,3.106,332,1.572,333,1.791,338,3.88,395,3.05,410,1.674,440,1.324,456,3.645,544,2.092,545,3.165,565,3.386,602,2.573,611,5.201,623,3.386,626,3.751,785,3.953,910,4.176,914,3.6,924,2.573,1079,4.618,1276,6.173,1306,4.864,1326,2.573,1327,5.146,1328,4.361,1329,5.146,1330,6.479,1331,5.655,1332,5.655,1333,4.361,1334,2.991,1335,2.991,1336,2.991,1337,2.991,1338,2.991,1339,2.991,1340,4.361,1341,4.361,1342,2.991,1343,5.146,1344,2.991,1345,2.991,1346,2.991,1347,2.991,1348,2.991,1349,2.991,1350,4.361,1351,4.361]],["title/coverage.html",[1352,4.365]],["body/coverage.html",[0,2.456,1,2.294,5,0.124,6,2.519,7,2.821,14,1.377,20,0.018,22,0.279,32,2.79,34,1.377,40,0.416,51,0.011,52,0.011,53,0.884,54,0.89,60,2.821,61,0.607,110,0.89,113,0.85,116,0.85,118,0.85,121,0.89,122,1.265,124,0.89,126,0.85,128,0.85,130,0.85,132,0.85,134,0.89,137,0.85,140,0.89,143,0.89,145,0.89,147,0.85,184,2.519,200,2.294,215,2.519,216,2.294,218,2.519,219,2.294,223,2.294,227,2.294,229,2.294,233,2.294,235,2.294,248,1.128,252,1.107,253,1.534,255,3.369,259,0.978,261,1.128,263,1.534,265,1.534,272,2.114,273,3.579,276,2.114,277,2.821,278,2.294,279,2.821,317,2.519,319,2.821,320,2.821,323,1.623,332,1.723,338,3.533,365,3.579,366,2.821,386,1.723,398,1.377,412,1.308,416,1.128,510,2.821,523,1.623,547,2.821,606,2.821,607,2.294,608,2.821,617,1.964,639,2.114,642,1.964,670,3.79,682,2.821,701,3.003,702,2.114,704,2.821,705,2.821,716,2.821,724,4.569,725,1.723,726,3.79,727,1.723,729,1.835,732,2.821,733,2.821,750,2.519,752,2.519,753,2.821,794,3.579,795,2.821,826,2.821,899,2.821,900,2.821,910,2.114,963,2.821,1016,2.821,1017,2.821,1028,2.114,1033,2.821,1034,3.579,1052,2.821,1110,2.821,1127,2.821,1189,2.821,1254,2.821,1298,2.821,1320,2.821,1321,2.821,1326,2.821,1352,2.821,1353,3.28,1354,3.28,1355,3.28,1356,4.659,1357,3.28,1358,3.28,1359,4.659,1360,4.659,1361,3.28,1362,3.28,1363,3.28,1364,3.28,1365,6.66,1366,5.419,1367,4.659,1368,3.28,1369,3.28,1370,3.28,1371,3.28,1372,3.28,1373,3.28,1374,3.28,1375,3.28,1376,3.28,1377,4.659,1378,4.659,1379,2.821,1380,3.28,1381,5.9,1382,6.924,1383,3.28,1384,3.28,1385,3.28,1386,3.28,1387,3.28,1388,3.28,1389,2.821,1390,4.659,1391,2.821,1392,3.28,1393,4.659,1394,4.659,1395,3.28,1396,3.28]],["title/dependencies.html",[154,2.344,1397,2.372]],["body/dependencies.html",[20,0.019,29,0.748,31,3.483,51,0.015,52,0.015,154,2.616,174,3.964,175,3.683,190,2.787,211,2.982,214,2.616,461,4.284,638,1.632,1398,4.98,1399,7.467,1400,4.98,1401,6.15,1402,4.98,1403,4.98,1404,4.98,1405,4.98,1406,4.98,1407,4.98,1408,4.98,1409,4.98,1410,4.98,1411,4.98,1412,4.98,1413,6.15,1414,4.98,1415,4.98,1416,4.284,1417,4.98,1418,4.98,1419,4.98,1420,4.98,1421,4.98,1422,4.98,1423,4.98,1424,4.98,1425,4.98,1426,4.98,1427,4.98,1428,4.98,1429,4.98,1430,4.98,1431,4.98,1432,4.98,1433,4.98,1434,4.98]],["title/index.html",[8,0.303,1435,3.088,1436,3.088]],["body/index.html",[4,0.181,20,0.014,21,0.535,51,0.014,52,0.014,53,0.781,84,3.663,87,3.335,138,1.491,166,2.669,334,1.902,412,1.902,456,3.073,505,5.625,539,3.663,559,3.073,1169,4.102,1173,5.629,1397,3.663,1437,5.987,1438,4.768,1439,6.544,1440,6.544,1441,4.102,1442,4.768,1443,4.768,1444,5.987,1445,7.07,1446,4.768,1447,4.768,1448,4.768,1449,4.768,1450,4.768,1451,4.768,1452,4.768,1453,4.768,1454,4.768,1455,6.544,1456,4.768,1457,6.863,1458,4.768,1459,4.768,1460,4.768,1461,4.768,1462,5.987,1463,5.987,1464,6.863,1465,4.768,1466,5.987,1467,5.987,1468,4.768,1469,7.216,1470,4.768,1471,4.768,1472,4.768,1473,5.987,1474,4.768,1475,4.768,1476,4.768,1477,4.768,1478,4.768,1479,6.544,1480,4.768,1481,3.663,1482,4.768]],["title/modules.html",[153,2.512]],["body/modules.html",[20,0.016,51,0.016,52,0.016,152,3.936,153,2.786,160,3.15,161,3.627,162,3.627,163,3.627,175,4.435,748,3.37,1145,4.841,1483,7.406,1484,7.406,1485,7.505,1486,5.628]],["title/overview.html",[1481,3.898]],["body/overview.html",[2,2.167,14,2.485,20,0.018,40,0.491,51,0.012,52,0.012,54,1.892,55,1.211,110,1.607,113,1.533,116,1.533,118,1.533,121,1.607,124,1.607,126,1.533,128,1.533,130,1.533,132,1.533,134,1.607,137,1.533,140,1.607,143,1.607,145,1.607,147,1.533,152,5.35,153,1.917,154,2.747,155,3.332,156,3.332,157,3.332,158,3.332,159,3.332,160,3.703,161,4.721,162,4.874,163,4.721,164,3.13,165,2.319,166,2.167,213,2.709,254,1.27,317,2.975,336,3.332,337,3.332,401,2.445,702,4.492,703,2.975,739,3.332,741,3.332,748,4.244,1025,3.332,1026,3.332,1027,3.332,1028,4.492,1294,3.332,1295,3.332,1379,3.332,1481,2.975,1487,5.228,1488,3.873,1489,3.873,1490,3.873]],["title/properties.html",[68,0.707,1397,2.372]],["body/properties.html",[20,0.017,51,0.016,52,0.016,68,0.954,1416,5.178,1441,5.178]],["title/routes.html",[213,3.549]],["body/routes.html",[20,0.016,51,0.016,52,0.016,213,4.244]],["title/miscellaneous/variables.html",[1491,2.656,1492,3.838]],["body/miscellaneous/variables.html",[8,0.542,20,0.018,22,0.557,32,4.321,51,0.016,52,0.016,73,2.251,74,1.618,410,3.088,440,2.443,482,5.63,1389,4.746,1391,4.746,1491,4.746,1492,4.746,1493,5.517,1494,5.517,1495,6.544,1496,5.517,1497,5.517,1498,5.517,1499,5.517,1500,5.517,1501,5.517,1502,5.517]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":724,"title":{},"body":{"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1416,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.000000001",{"_index":691,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["0.11.4",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["0.23.24",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":953,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["0x0000000000000000000000000000000000000000",{"_index":870,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["0x2df7a6c36e8edeaaf59d09cb4230b660e0283e88",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0x9e12441b535419cc59b8f122bc26ebec1b06e719",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":401,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"overview.html":{}}}],["1.0.1",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["1.3.15",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1490,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["10.9.1",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":462,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["1000",{"_index":442,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{}}}],["100px",{"_index":492,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["10px",{"_index":315,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["12",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["14",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["14.2.0",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["14.2.3",{"_index":1442,"title":{},"body":{"index.html":{}}}],["14.2.4",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1105,"title":{},"body":{"components/SectorComponent.html":{}}}],["150px",{"_index":600,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["15px",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":1379,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16.0.3",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1488,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":467,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["2",{"_index":1489,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":721,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/MyConcertsComponent.html":{}}}],["22",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["220px",{"_index":493,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["25",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":491,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{}}}],["25px",{"_index":501,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MarketplaceComponent.html":{}}}],["28",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":957,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["3/15",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":360,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["30px",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["4.7.3",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["4/13",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":1022,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["41",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":661,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["5/12",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["5/17",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":310,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["500px",{"_index":602,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/WhitelistComponent.html":{}}}],["5px",{"_index":503,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/SectorComponent.html":{}}}],["6",{"_index":1487,"title":{},"body":{"overview.html":{}}}],["60",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["673ab7",{"_index":961,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["683ab72e",{"_index":958,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["683ab74e",{"_index":498,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["7.5.0",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["750px",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["77",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["8.4.4",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":437,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{}}}],["8594",{"_index":540,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["8595",{"_index":455,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["9990",{"_index":955,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["_image",{"_index":433,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["_nft",{"_index":806,"title":{},"body":{"components/MyNftComponent.html":{}}}],["absolute",{"_index":793,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["access",{"_index":1349,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["accessors",{"_index":1061,"title":{},"body":{"components/SectorComponent.html":{}}}],["account",{"_index":946,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{}}}],["account_balance_wallet",{"_index":948,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["account_circle",{"_index":947,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["accounts",{"_index":1299,"title":{},"body":{"injectables/WalletService.html":{}}}],["accounts[0",{"_index":1318,"title":{},"body":{"injectables/WalletService.html":{}}}],["achtung",{"_index":603,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["activatedroute",{"_index":385,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["activatedroutesnapshot",{"_index":326,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["activelink",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["add",{"_index":559,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"index.html":{}}}],["address",{"_index":260,"title":{},"body":{"interfaces/Attribute.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"components/WhitelistComponent.html":{}}}],["adds",{"_index":1068,"title":{},"body":{"components/SectorComponent.html":{}}}],["addsector",{"_index":1055,"title":{},"body":{"components/SectorComponent.html":{}}}],["addsectors",{"_index":553,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["addsectors(address",{"_index":1201,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["addsectors(sectors",{"_index":557,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{}}}],["admin",{"_index":916,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["alchemyapi",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alchemyapiservice",{"_index":1,"title":{"injectables/AlchemyApiService.html":{}},"body":{"injectables/AlchemyApiService.html":{},"components/MyNftComponent.html":{},"coverage.html":{}}}],["align",{"_index":466,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["alltickets",{"_index":1143,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["already",{"_index":929,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/StandardTicketComponent.html":{}}}],["amount",{"_index":372,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["amount.mul(0.000000001",{"_index":692,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["amount.mul(1000000000",{"_index":695,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["amount.mul(1000000000000000000",{"_index":699,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["angular",{"_index":1439,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":28,"title":{},"body":{"injectables/AlchemyApiService.html":{},"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"components/CreateConcertComponent.html":{},"modules/MarketplaceModule.html":{},"components/SectorComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/card",{"_index":350,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/checkbox",{"_index":346,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/core",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/ConcertManagementModule.html":{}}}],["angular/material/datepicker",{"_index":344,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/dialog",{"_index":302,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyNftComponent.html":{}}}],["angular/material/form",{"_index":746,"title":{},"body":{"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/input",{"_index":342,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["angular/material/menu",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":348,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/snack",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"injectables/SnackbarService.html":{}}}],["angular/material/stepper",{"_index":353,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["angular/material/tabs",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{}}}],["angular/platform",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"modules/MarketplaceModule.html":{},"components/NavigationBarComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["api.service",{"_index":809,"title":{},"body":{"components/MyNftComponent.html":{}}}],["api.service.ts",{"_index":7,"title":{},"body":{"injectables/AlchemyApiService.html":{},"coverage.html":{}}}],["api.service.ts:11",{"_index":18,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["api.service.ts:18",{"_index":24,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["app",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["app.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":54,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1450,"title":{},"body":{"index.html":{}}}],["apply",{"_index":586,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["appmodule",{"_index":152,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":1156,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["approutingmodule",{"_index":160,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":631,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["approve",{"_index":657,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["approved",{"_index":627,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["approvemarketplace",{"_index":613,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["approves",{"_index":620,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["arguments",{"_index":1341,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["artifacts",{"_index":1458,"title":{},"body":{"index.html":{}}}],["artifacts/contracts/nftmarketplace.sol/nftmarketplace.json",{"_index":994,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["artifacts/contracts/ticked1155.sol/ticked1155.json",{"_index":1234,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["artifacts/contracts/tickedfactory.sol/tickedfactory.json",{"_index":1283,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["async",{"_index":10,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["attr.value",{"_index":821,"title":{},"body":{"components/MyNftComponent.html":{}}}],["attribute",{"_index":253,"title":{"interfaces/Attribute.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["attributes",{"_index":269,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["audience",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["audiencedialogdata",{"_index":272,"title":{"interfaces/AudienceDialogData.html":{}},"body":{"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"coverage.html":{}}}],["audiencelayoutcomponent",{"_index":110,"title":{"components/AudienceLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authorganizatorguard",{"_index":229,"title":{"guards/AuthOrganizatorGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthOrganizatorGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":931,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["authorize",{"_index":1264,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["authorizeaccess",{"_index":1255,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["authorizeaccess(address",{"_index":1262,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["authorized",{"_index":936,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["auto",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MarketplaceComponent.html":{},"components/NavigationBarComponent.html":{}}}],["automatically",{"_index":1451,"title":{},"body":{"index.html":{}}}],["availabilty",{"_index":1142,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["available",{"_index":1145,"title":{},"body":{"components/StandardTicketComponent.html":{},"modules.html":{}}}],["availabletickets",{"_index":1150,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["availabletokenids",{"_index":676,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["await",{"_index":44,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["back",{"_index":587,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["background",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{}}}],["balance",{"_index":270,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["bar",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"components/NavigationBarComponent.html":{},"injectables/SnackbarService.html":{}}}],["bar'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["bar.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":902,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.scss",{"_index":901,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts",{"_index":900,"title":{},"body":{"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:107",{"_index":923,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:12",{"_index":911,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:25",{"_index":912,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:36",{"_index":918,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:54",{"_index":920,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:72",{"_index":915,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:89",{"_index":919,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:98",{"_index":921,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar/navigation",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":565,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["better",{"_index":1162,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["bignumber",{"_index":637,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"pipes/WeiToEthPipe.html":{}}}],["bignumber.from(0",{"_index":852,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["block",{"_index":309,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["boolean",{"_index":409,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{}}}],["bootstrap",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":499,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MarketplaceComponent.html":{}}}],["bottom",{"_index":316,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/FooterComponent.html":{},"components/SectorComponent.html":{}}}],["box",{"_index":471,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["browse",{"_index":1485,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["btn",{"_index":314,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["build",{"_index":1457,"title":{},"body":{"index.html":{}}}],["button",{"_index":485,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/SectorComponent.html":{}}}],["buy",{"_index":667,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["buying",{"_index":1043,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["buyticket",{"_index":964,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["buyticket(address",{"_index":1203,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["buyticket(concertaddr",{"_index":972,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["buyticket(owner",{"_index":1041,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["buyticket(tokenid",{"_index":1133,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["bysigner",{"_index":980,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["calculate",{"_index":1141,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["calls",{"_index":1163,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["canactivate",{"_index":321,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["canactivate(route",{"_index":325,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["canactivate:[authorganizatorguard",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":668,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["capabilities",{"_index":1477,"title":{},"body":{"index.html":{}}}],["capacity",{"_index":445,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["card",{"_index":508,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["catch(e",{"_index":998,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["center",{"_index":362,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["chain",{"_index":1158,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["change",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/MyConcertsComponent.html":{},"components/WhitelistComponent.html":{},"index.html":{}}}],["changed",{"_index":595,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["changedate",{"_index":758,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["changedate(concertaddress",{"_index":765,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["changepermissions",{"_index":1331,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["changes",{"_index":395,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["changes['sector'].currentvalue.availabletokenids",{"_index":1152,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["changes['sector'].currentvalue.name",{"_index":1154,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["charged",{"_index":663,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["check",{"_index":456,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"injectables/Ticked1155Service.html":{},"components/WhitelistComponent.html":{},"index.html":{}}}],["check_circle_outline",{"_index":1187,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["checkaddress",{"_index":1329,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["checkpermissions",{"_index":1332,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["checks",{"_index":626,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/WhitelistComponent.html":{}}}],["children",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":1472,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1350,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["chosen",{"_index":397,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["class",{"_index":40,"title":{"classes/EtherUnitConverter.html":{}},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":681,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["cli",{"_index":1440,"title":{},"body":{"index.html":{}}}],["click",{"_index":536,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["close",{"_index":286,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSellComponent.html":{},"injectables/SnackbarService.html":{}}}],["closes",{"_index":292,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["cluster_appmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_concertmanagementmodule",{"_index":336,"title":{},"body":{"modules/ConcertManagementModule.html":{},"overview.html":{}}}],["cluster_concertmanagementmodule_declarations",{"_index":337,"title":{},"body":{"modules/ConcertManagementModule.html":{},"overview.html":{}}}],["cluster_marketplacemodule",{"_index":739,"title":{},"body":{"modules/MarketplaceModule.html":{},"overview.html":{}}}],["cluster_marketplacemodule_declarations",{"_index":741,"title":{},"body":{"modules/MarketplaceModule.html":{},"overview.html":{}}}],["cluster_marketplacemodule_imports",{"_index":740,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["cluster_pipesmodule",{"_index":1025,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1027,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1026,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1294,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1295,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1296,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":1169,"title":{},"body":{"components/StandardTicketComponent.html":{},"index.html":{}}}],["collection",{"_index":646,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["color",{"_index":487,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{}}}],["command",{"_index":1473,"title":{},"body":{"index.html":{}}}],["commoninf",{"_index":550,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["commonmodule",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["comp",{"_index":1081,"title":{},"body":{"components/SectorComponent.html":{}}}],["comp/marketplace.component",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{}}}],["comp/marketplace.component.ts",{"_index":733,"title":{},"body":{"components/MarketplaceComponent.html":{},"coverage.html":{}}}],["comp/marketplace.component.ts:8",{"_index":736,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["compodoc/compodoc",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":53,"title":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["components",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"overview.html":{}}}],["components/concert",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/footer/footer.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["components/marketplace/concert",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/marketplace/marketplace",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/marketplace/marketplace.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navigation",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["components/page",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/user/my",{"_index":232,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/user/user.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["concert",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["concert'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["concert.component",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{}}}],["concert.component.html",{"_index":549,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.scss",{"_index":548,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts",{"_index":547,"title":{},"body":{"components/CreateConcertComponent.html":{},"coverage.html":{}}}],["concert.component.ts:12",{"_index":574,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:14",{"_index":573,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:19",{"_index":556,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:27",{"_index":568,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:30",{"_index":575,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:36",{"_index":561,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.component.ts:51",{"_index":558,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concert.contractaddress",{"_index":535,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{}}}],["concert.model",{"_index":728,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/SellerOffer.html":{}}}],["concert.name",{"_index":534,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{}}}],["concert.name.tolocalelowercase().includes(searchtext",{"_index":715,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["concert/create",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"components/CreateConcertComponent.html":{},"coverage.html":{}}}],["concert:hover",{"_index":543,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["concertaddr",{"_index":730,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/SellerOffer.html":{}}}],["concertaddress",{"_index":373,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["concertdate",{"_index":374,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["concertdescription",{"_index":375,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["concertimage",{"_index":572,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concertmanagementmodule",{"_index":161,"title":{"modules/ConcertManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["concertname",{"_index":376,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{}}}],["concertorg",{"_index":513,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["concerts",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["concerts'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["concerts.component",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{}}}],["concerts.component.html",{"_index":755,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.scss",{"_index":754,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts",{"_index":753,"title":{},"body":{"components/MyConcertsComponent.html":{},"coverage.html":{}}}],["concerts.component.ts:12",{"_index":761,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:20",{"_index":777,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:21",{"_index":778,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:23",{"_index":772,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:34",{"_index":768,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:45",{"_index":762,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:55",{"_index":774,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.component.ts:65",{"_index":766,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["concerts.filter((concert",{"_index":714,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["concerts.pipe",{"_index":1032,"title":{},"body":{"modules/PipesModule.html":{}}}],["concerts.pipe.ts",{"_index":705,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"coverage.html":{}}}],["concerts.pipe.ts:17",{"_index":708,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["concerts/my",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"components/MyConcertsComponent.html":{},"coverage.html":{}}}],["concertsectors",{"_index":551,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["concertsectorscomponent",{"_index":113,"title":{"components/ConcertSectorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["concertsellcomponent",{"_index":116,"title":{"components/ConcertSellComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirm",{"_index":665,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{}}}],["confirmsectors",{"_index":1056,"title":{},"body":{"components/SectorComponent.html":{}}}],["connect",{"_index":949,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/WalletService.html":{}}}],["connected",{"_index":930,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["connects",{"_index":913,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["connectwallet",{"_index":903,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["console.log(e.error.message",{"_index":999,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["const",{"_index":42,"title":{},"body":{"injectables/AlchemyApiService.html":{},"modules/AppRoutingModule.html":{},"components/ConcertSectorsComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["constructor(alchemyapiservice",{"_index":799,"title":{},"body":{"components/MyNftComponent.html":{}}}],["constructor(dialogref",{"_index":287,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["constructor(formbuilder",{"_index":1062,"title":{},"body":{"components/SectorComponent.html":{}}}],["constructor(nftmarketplaceservice",{"_index":835,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["constructor(route",{"_index":384,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["constructor(snackbar",{"_index":1113,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["constructor(ticked1155service",{"_index":1131,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["constructor(tickedfactoryservice",{"_index":322,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/WhitelistComponent.html":{}}}],["constructor(walletservice",{"_index":13,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["contain",{"_index":1177,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["container",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{}}}],["contains",{"_index":660,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["content",{"_index":477,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["contract",{"_index":259,"title":{"interfaces/Contract.html":{}},"body":{"interfaces/Attribute.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["contract['addsectors'](sectors",{"_index":1240,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['balance",{"_index":1010,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['buyticket'](concertaddr",{"_index":1000,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['buyticket'](tokenid",{"_index":1241,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['createandminttickets",{"_index":1236,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['createtickets",{"_index":1287,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['date",{"_index":1247,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['deleteoffer'](concertaddr",{"_index":1003,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['description",{"_index":1246,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['getdepcontracts'](address",{"_index":1291,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['getlistedticket'](concertaddr",{"_index":1009,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['getoffersbyseller",{"_index":1008,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['getorganizers",{"_index":1290,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['getsectors",{"_index":1248,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['getsellerids'](concertaddr",{"_index":1007,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['getsoldtokenids'](sector",{"_index":1249,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['image",{"_index":1244,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['insertoffer'](concertaddr",{"_index":1005,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['isapprovedforall'](account",{"_index":1243,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['name",{"_index":1245,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['owner",{"_index":1288,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['setapprovalforall'](operator",{"_index":1252,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['setdate'](newdate",{"_index":1251,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['setorganizatorpermission'](address",{"_index":1289,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['ticketattr'](tokenid",{"_index":1250,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contract['updateoffer'](concertaddr",{"_index":1004,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['whitelist'](address",{"_index":1285,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["contract['withdraw'](this.walletservice.getwalletaddress",{"_index":997,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["contract['withdraworgcredits'](this.walletservice.getwalletaddress",{"_index":1242,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["contractaddress",{"_index":531,"title":{},"body":{"components/ConcertSellComponent.html":{},"interfaces/DepConcert.html":{},"components/MyConcertsComponent.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["contractnftmarketplaceaddress",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contractsaddress",{"_index":552,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["contracttickedfactoryaddress",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converts",{"_index":1324,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["correct",{"_index":594,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["corrently",{"_index":1307,"title":{},"body":{"injectables/WalletService.html":{}}}],["cover",{"_index":484,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["coverage",{"_index":1352,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{}}}],["createandminttickets",{"_index":1190,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["createandminttickets(address",{"_index":1205,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["createconcert",{"_index":554,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["createconcertcomponent",{"_index":118,"title":{"components/CreateConcertComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createconcertcontract",{"_index":1256,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["createconcertcontract(name",{"_index":1267,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["createconcertform",{"_index":1058,"title":{},"body":{"components/SectorComponent.html":{}}}],["createoffer",{"_index":614,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["createofferdialogcomponent",{"_index":121,"title":{"components/CreateOfferDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createofferdialogdata",{"_index":276,"title":{"interfaces/CreateOfferDialogData.html":{}},"body":{"interfaces/AudienceDialogData.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"coverage.html":{}}}],["creates",{"_index":562,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/SectorComponent.html":{}}}],["current",{"_index":848,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currentlisting",{"_index":845,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currentlisting.seller",{"_index":878,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currentlisting.tokenid",{"_index":877,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["currently",{"_index":396,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["custom",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":284,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"components/SectorComponent.html":{}}}],["data.nft",{"_index":645,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["date",{"_index":502,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["date(stringtime!)).gettime",{"_index":580,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["date(this.newdate!)).gettime",{"_index":787,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["date:'medium",{"_index":443,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["date:\\'medium",{"_index":509,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["declarations",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["decoration",{"_index":496,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["decorators",{"_index":295,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["deep",{"_index":506,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["delete",{"_index":840,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{}}}],["delete_forever",{"_index":1103,"title":{},"body":{"components/SectorComponent.html":{}}}],["deleteoffer",{"_index":832,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["deleteoffer(concertaddr",{"_index":837,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["deletes",{"_index":839,"title":{},"body":{"components/MyOffersComponent.html":{},"components/SectorComponent.html":{}}}],["deletesector",{"_index":1057,"title":{},"body":{"components/SectorComponent.html":{}}}],["deletesector(sectorindex",{"_index":1070,"title":{},"body":{"components/SectorComponent.html":{}}}],["deleting",{"_index":1167,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["depconcert",{"_index":523,"title":{"interfaces/DepConcert.html":{}},"body":{"components/ConcertSellComponent.html":{},"interfaces/DepConcert.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"interfaces/Sector.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["dependencies",{"_index":154,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployedconcerts",{"_index":756,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["deprecated",{"_index":1155,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["desc",{"_index":1268,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["description",{"_index":268,"title":{},"body":{"interfaces/Attribute.html":{},"components/ConcertSectorsComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{}}}],["details",{"_index":494,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{}}}],["dev",{"_index":1447,"title":{},"body":{"index.html":{}}}],["development",{"_index":1443,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":293,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["dialog'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["dialog.component",{"_index":810,"title":{},"body":{"components/MyNftComponent.html":{},"modules/UserModule.html":{}}}],["dialog.component.html",{"_index":610,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.scss",{"_index":609,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts",{"_index":608,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:19",{"_index":635,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":636,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":632,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":618,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":634,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":633,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":624,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":619,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":629,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":622,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog.component.ts:85",{"_index":625,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["dialog/create",{"_index":607,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":285,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["direction",{"_index":895,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["directive",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["directives",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1456,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1461,"title":{},"body":{"index.html":{}}}],["display",{"_index":308,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["display_type",{"_index":256,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["displays",{"_index":1119,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["dist",{"_index":1460,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["domsanitizer",{"_index":303,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["don't",{"_index":1347,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["dotenv",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["duration",{"_index":359,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["dynamic",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1470,"title":{},"body":{"index.html":{}}}],["each",{"_index":867,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{}}}],["edit",{"_index":892,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["editing",{"_index":843,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["element",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["encapsulation",{"_index":367,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["end",{"_index":1469,"title":{},"body":{"index.html":{}}}],["environment",{"_index":32,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/TickedFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.alchemyapi",{"_index":47,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["environment.contractnftmarketplaceaddress",{"_index":650,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["environment.contracttickedfactoryaddress",{"_index":1292,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["error",{"_index":1111,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["error(message",{"_index":1117,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["eth",{"_index":451,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["eth.pipe",{"_index":1030,"title":{},"body":{"modules/PipesModule.html":{}}}],["eth.pipe.ts",{"_index":1321,"title":{},"body":{"pipes/WeiToEthPipe.html":{},"coverage.html":{}}}],["eth.pipe.ts:16",{"_index":1323,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["eth_requestaccounts",{"_index":1314,"title":{},"body":{"injectables/WalletService.html":{}}}],["ether",{"_index":698,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethers",{"_index":638,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"dependencies.html":{}}}],["ethers.contract",{"_index":1014,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["ethers.providers.web3provider(window.ethereum",{"_index":1011,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["ethers.utils.formatether(amount",{"_index":693,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethers.utils.formatether(price",{"_index":1325,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["ethers.utils.parseunits((price.mul(amount)).tostring",{"_index":1001,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["ethers.utils.parseunits(amount.tostring",{"_index":697,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethertogwei(amount",{"_index":700,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethertowei",{"_index":684,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["ethertowei(amount",{"_index":686,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["etherunitconverter",{"_index":642,"title":{"classes/EtherUnitConverter.html":{}},"body":{"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{},"coverage.html":{}}}],["etherunitconverter.ethertowei(this.price",{"_index":655,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["event",{"_index":792,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["eventemitter",{"_index":1065,"title":{},"body":{"components/SectorComponent.html":{}}}],["everyone",{"_index":666,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["except",{"_index":597,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["execute",{"_index":1466,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1170,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["export",{"_index":39,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["exports",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PipesModule.html":{}}}],["factory",{"_index":1281,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service",{"_index":333,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"components/WhitelistComponent.html":{}}}],["factory.service.ts",{"_index":1254,"title":{},"body":{"injectables/TickedFactoryService.html":{},"coverage.html":{}}}],["factory.service.ts:11",{"_index":1261,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:21",{"_index":1263,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:36",{"_index":1269,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:53",{"_index":1279,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:65",{"_index":1275,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:70",{"_index":1273,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:75",{"_index":1272,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["factory.service.ts:80",{"_index":1270,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["false",{"_index":440,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":662,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{}}}],["fff",{"_index":468,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["field",{"_index":544,"title":{},"body":{"components/ConcertSellComponent.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["files",{"_index":1453,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1031,"title":{},"body":{"modules/PipesModule.html":{}}}],["filterconcerts",{"_index":706,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["filterconcertspipe",{"_index":702,"title":{"pipes/FilterConcertsPipe.html":{}},"body":{"pipes/FilterConcertsPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["filtered",{"_index":711,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["filters",{"_index":709,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["find",{"_index":789,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["fires",{"_index":769,"title":{},"body":{"components/MyConcertsComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["first",{"_index":1475,"title":{},"body":{"index.html":{}}}],["fit",{"_index":483,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["fixed",{"_index":723,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["flex",{"_index":474,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["flexbox",{"_index":473,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["float",{"_index":495,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{}}}],["font",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["footer",{"_index":717,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["footer.component.html",{"_index":719,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":718,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":124,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":862,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["form",{"_index":545,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["formarray",{"_index":1078,"title":{},"body":{"components/SectorComponent.html":{}}}],["formbuilder",{"_index":555,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["forms",{"_index":567,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{}}}],["formsmodule",{"_index":351,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":1018,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["found.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1020,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1019,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1017,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:8",{"_index":1021,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":1159,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["full",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["function",{"_index":291,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["further",{"_index":1478,"title":{},"body":{"index.html":{}}}],["future",{"_index":596,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["gap",{"_index":542,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["gateway",{"_index":267,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["generate",{"_index":1455,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1438,"title":{},"body":{"index.html":{}}}],["getbalance",{"_index":965,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getcontract",{"_index":966,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["getcontract(address",{"_index":1208,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getcontract(bysigner",{"_index":978,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/TickedFactoryService.html":{}}}],["getdate",{"_index":1191,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getdate(address",{"_index":1210,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getdepcontracts",{"_index":1257,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["getdepcontracts(address",{"_index":1271,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["getdescription",{"_index":1192,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getdescription(address",{"_index":1212,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getimage",{"_index":1193,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getimage(address",{"_index":1214,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getlistedticket",{"_index":967,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getlistedticket(concertaddr",{"_index":982,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getlistedticket(offer.concertaddr",{"_index":864,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["getlistedticket(this.concertaddress",{"_index":1049,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["getname",{"_index":1194,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getname(address",{"_index":1216,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getnfts/?owner",{"_index":48,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["getoffersbyseller",{"_index":968,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getorganizers",{"_index":1258,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["getsectors",{"_index":1075,"title":{},"body":{"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["getsectors(address",{"_index":1218,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getsectorsoldids",{"_index":1195,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getsectorsoldids(address",{"_index":1220,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getsellerids",{"_index":969,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getsellerids(concertaddr",{"_index":985,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["getticketattr",{"_index":1196,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getticketattr(address",{"_index":1222,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["getting",{"_index":1435,"title":{"index.html":{}},"body":{}}],["getusernfts",{"_index":11,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["getwalletaddress",{"_index":1300,"title":{},"body":{"injectables/WalletService.html":{}}}],["go",{"_index":1480,"title":{},"body":{"index.html":{}}}],["goerli.g.alchemy.com/v2/9xmq5x8fqjewnnufjsxkhh5tmlncnstg",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gotoadminpanel",{"_index":904,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotoconcert",{"_index":515,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["gotoconcert(concertaddress",{"_index":518,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["gotoconcertform",{"_index":905,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomarketplace",{"_index":906,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomyconcerts",{"_index":907,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomynfts",{"_index":908,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["gotomyoffers",{"_index":909,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["grant",{"_index":1343,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["granted",{"_index":1265,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["graph",{"_index":1486,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":488,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["grow",{"_index":956,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["guard",{"_index":317,"title":{"guards/AuthOrganizatorGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":318,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["gweitoether(amount",{"_index":696,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["gweitowei(amount",{"_index":694,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["h2",{"_index":1023,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["h3",{"_index":1024,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["hardhat",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":504,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["height",{"_index":463,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["help",{"_index":1479,"title":{},"body":{"index.html":{}}}],["here",{"_index":537,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{}}}],["highlight_off",{"_index":1186,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["home",{"_index":944,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["horizontalposition",{"_index":361,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["html",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["http",{"_index":15,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["http://localhost:4200",{"_index":1449,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":16,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["httpclientmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["https://eth",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":261,"title":{"interfaces/Id.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["id's",{"_index":1166,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["id.tonumber",{"_index":1180,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["identifier",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1172,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["if(authorization",{"_index":932,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["if(changes['sector'].currentvalue",{"_index":1148,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["if(islogged",{"_index":927,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["if(isowner",{"_index":939,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["if(sector.isnumerable",{"_index":1095,"title":{},"body":{"components/SectorComponent.html":{}}}],["if(this.checkaddress",{"_index":1345,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["if(this.newdate",{"_index":784,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["if(this.permission",{"_index":1338,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["if(this.sellerticketsmap.has(offer.concertaddr",{"_index":871,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["if(ticket.listing.seller",{"_index":869,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["if(window.ethereum",{"_index":1310,"title":{},"body":{"injectables/WalletService.html":{}}}],["image",{"_index":274,"title":{},"body":{"interfaces/AudienceDialogData.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"injectables/TickedFactoryService.html":{}}}],["img",{"_index":307,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{}}}],["implements",{"_index":334,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"pipes/WeiToEthPipe.html":{},"index.html":{}}}],["import",{"_index":27,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["important",{"_index":313,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["info(message",{"_index":1121,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["information",{"_index":564,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["informations",{"_index":560,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/MyNftComponent.html":{}}}],["inject",{"_index":299,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":296,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AlchemyApiService.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AlchemyApiService.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["inner",{"_index":1109,"title":{},"body":{"components/SectorComponent.html":{}}}],["input",{"_index":623,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["input.input",{"_index":1106,"title":{},"body":{"components/SectorComponent.html":{}}}],["inputs",{"_index":1038,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["insert",{"_index":989,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["insertoffer",{"_index":970,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["insertoffer(concertaddr",{"_index":987,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["interacts",{"_index":974,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["interface",{"_index":252,"title":{"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/Sector.html":{},"interfaces/SellerOffer.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"overview.html":{}}}],["isapprovedforall",{"_index":1197,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["isapprovedforall(address",{"_index":1224,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["islogged",{"_index":925,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["ismarketplaceapproved",{"_index":612,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["isnumerable",{"_index":672,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["isnumerablestring",{"_index":1090,"title":{},"body":{"components/SectorComponent.html":{}}}],["isowner",{"_index":937,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["it's",{"_index":1161,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["items",{"_index":478,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["iterate",{"_index":1164,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["justify",{"_index":476,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["karma",{"_index":1468,"title":{},"body":{"index.html":{}}}],["layout",{"_index":280,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["layout'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["layout.component",{"_index":418,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"modules/MarketplaceModule.html":{}}}],["layout.component.html",{"_index":282,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.scss",{"_index":281,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts",{"_index":279,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:11",{"_index":289,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts:14",{"_index":298,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts:15",{"_index":297,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout.component.ts:21",{"_index":290,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["layout/audience",{"_index":278,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"modules/MarketplaceModule.html":{},"coverage.html":{}}}],["left",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{}}}],["legend",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["library_add",{"_index":942,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["link",{"_index":737,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["links",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":764,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{}}}],["listedticket",{"_index":725,"title":{"interfaces/ListedTicket.html":{}},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["listelem.listing.amount",{"_index":891,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.listing.price",{"_index":887,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.listing.seller",{"_index":890,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.ticket.seatnumber",{"_index":894,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listelem.ticket.sectorname",{"_index":884,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["listing",{"_index":727,"title":{"interfaces/Listing.html":{}},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["local_offer",{"_index":950,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["lock",{"_index":943,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["log",{"_index":952,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["logged",{"_index":992,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{}}}],["login",{"_index":1301,"title":{},"body":{"injectables/WalletService.html":{}}}],["make",{"_index":589,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/StandardTicketComponent.html":{}}}],["management",{"_index":941,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["management.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["management.module.ts",{"_index":339,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["management/concert",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{}}}],["management/create",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateConcertComponent.html":{},"coverage.html":{}}}],["management/my",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyConcertsComponent.html":{},"coverage.html":{}}}],["management/sector/sector.component.ts",{"_index":1052,"title":{},"body":{"components/SectorComponent.html":{},"coverage.html":{}}}],["management/sector/sector.component.ts:13",{"_index":1064,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:15",{"_index":1066,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:17",{"_index":1074,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:19",{"_index":1063,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:25",{"_index":1076,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:32",{"_index":1067,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:48",{"_index":1071,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/sector/sector.component.ts:56",{"_index":1069,"title":{},"body":{"components/SectorComponent.html":{}}}],["management/whitelist/whitelist.component",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management/whitelist/whitelist.component.ts",{"_index":1326,"title":{},"body":{"components/WhitelistComponent.html":{},"coverage.html":{}}}],["management/whitelist/whitelist.component.ts:12",{"_index":1336,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:13",{"_index":1337,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:14",{"_index":1333,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:25",{"_index":1334,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["management/whitelist/whitelist.component.ts:37",{"_index":1335,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["map",{"_index":411,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["margin",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["marketplace",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateOfferDialogComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/NavigationBarComponent.html":{}}}],["marketplace'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["marketplace.component.html",{"_index":735,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["marketplace.component.scss",{"_index":734,"title":{},"body":{"components/MarketplaceComponent.html":{}}}],["marketplace.service",{"_index":640,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["marketplace.service.ts",{"_index":963,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"coverage.html":{}}}],["marketplace.service.ts:101",{"_index":983,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:106",{"_index":977,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:113",{"_index":979,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:12",{"_index":971,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:22",{"_index":991,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:41",{"_index":973,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:60",{"_index":976,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:72",{"_index":990,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:84",{"_index":988,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:89",{"_index":986,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace.service.ts:94",{"_index":984,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["marketplace/sell",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavigationBarComponent.html":{}}}],["marketplace:hover",{"_index":960,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["marketplacecomponent",{"_index":126,"title":{"components/MarketplaceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marketplacemodule",{"_index":162,"title":{"modules/MarketplaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarketplaceModule.html":{},"modules.html":{},"overview.html":{}}}],["martketplace",{"_index":882,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["mat",{"_index":507,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{}}}],["mat_dialog_data",{"_index":301,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":356,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matbuttonmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matcardmodule",{"_index":349,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matcheckboxmodule",{"_index":345,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matching",{"_index":52,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":343,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matdialog",{"_index":387,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["matdialogmodule",{"_index":747,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["matdialogref",{"_index":288,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["matformfieldmodule",{"_index":745,"title":{},"body":{"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["maticonmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matinputmodule",{"_index":341,"title":{},"body":{"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["matmenumodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":340,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matselectmodule",{"_index":347,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["matsnackbar",{"_index":1114,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":352,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["mattabsmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{}}}],["max",{"_index":601,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["maxheight",{"_index":436,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["maxwidth",{"_index":438,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyNftComponent.html":{}}}],["medium",{"_index":604,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["message",{"_index":1120,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["metadata",{"_index":61,"title":{"interfaces/Metadata.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"components/MarketplaceComponent.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["metamask",{"_index":1305,"title":{},"body":{"injectables/WalletService.html":{}}}],["metamask/providers",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1313,"title":{},"body":{"injectables/WalletService.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["mf",{"_index":722,"title":{},"body":{"components/FooterComponent.html":{}}}],["migrate",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["min",{"_index":599,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["mint",{"_index":771,"title":{},"body":{"components/MyConcertsComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["minted",{"_index":679,"title":{},"body":{"interfaces/DepConcert.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"interfaces/Ticket.html":{}}}],["mintedbyorg",{"_index":675,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["mintnow",{"_index":1084,"title":{},"body":{"components/SectorComponent.html":{}}}],["mintnowstring",{"_index":1096,"title":{},"body":{"components/SectorComponent.html":{}}}],["minttickets",{"_index":759,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["minttickets(contractaddress",{"_index":767,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["miscellaneous",{"_index":1491,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mocha",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["module",{"_index":151,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}},"body":{}}],["modules",{"_index":153,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":776,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["more",{"_index":539,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/StandardTicketComponent.html":{},"index.html":{}}}],["ms",{"_index":472,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["myconcertscomponent",{"_index":128,"title":{"components/MyConcertsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mynftcomponent",{"_index":130,"title":{"components/MyNftComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["myofferscomponent",{"_index":132,"title":{"components/MyOffersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":21,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"interfaces/Attribute.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"components/MarketplaceComponent.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"index.html":{}}}],["name:string",{"_index":671,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["nav",{"_index":738,"title":{},"body":{"components/MarketplaceComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["navigate",{"_index":1448,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["navigationbarcomponent",{"_index":134,"title":{"components/NavigationBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationdetails",{"_index":933,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["need",{"_index":1474,"title":{},"body":{"index.html":{}}}],["new",{"_index":412,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"coverage.html":{},"index.html":{}}}],["newdate",{"_index":757,"title":{},"body":{"components/MyConcertsComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["newdateunix",{"_index":786,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["newlisting",{"_index":876,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["next",{"_index":489,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["nft",{"_index":248,"title":{"interfaces/NFT.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"interfaces/Contract.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["nft's",{"_index":814,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["nft.balance",{"_index":820,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UserModule.html":{}}}],["nft.component.html",{"_index":797,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.scss",{"_index":796,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts",{"_index":795,"title":{},"body":{"components/MyNftComponent.html":{},"coverage.html":{}}}],["nft.component.ts:16",{"_index":807,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts:17",{"_index":800,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts:25",{"_index":801,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.component.ts:33",{"_index":803,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.contract.address",{"_index":817,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.id.tokenid",{"_index":818,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.id.tokenmetadata.tokentype",{"_index":819,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.metadata.description",{"_index":816,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.metadata.name",{"_index":815,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft.model",{"_index":275,"title":{},"body":{"interfaces/AudienceDialogData.html":{},"interfaces/CreateOfferDialogData.html":{}}}],["nft/my",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyNftComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["nft:hover",{"_index":824,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nft\\'s",{"_index":825,"title":{},"body":{"components/MyNftComponent.html":{}}}],["nftmarketplace",{"_index":993,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nftmarketplace.abi",{"_index":1015,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nftmarketplaceservice",{"_index":617,"title":{"injectables/NftMarketplaceService.html":{}},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["nftmarketplaceservice.getcontract",{"_index":1006,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nftmarketplaceservice.getcontract(true",{"_index":995,"title":{},"body":{"injectables/NftMarketplaceService.html":{}}}],["nfts",{"_index":922,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["nfts.ownednfts.length",{"_index":813,"title":{},"body":{"components/MyNftComponent.html":{}}}],["ng",{"_index":505,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{}}}],["ngonchanges",{"_index":1129,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ngonchanges(changes",{"_index":1136,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ngoninit",{"_index":380,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["node",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":497,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/SectorComponent.html":{}}}],["number",{"_index":258,"title":{},"body":{"interfaces/Attribute.html":{},"components/ConcertSectorsComponent.html":{},"interfaces/Contract.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["numberable",{"_index":1102,"title":{},"body":{"components/SectorComponent.html":{}}}],["numbers",{"_index":1104,"title":{},"body":{"components/SectorComponent.html":{}}}],["numerable",{"_index":886,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["numerated",{"_index":822,"title":{},"body":{"components/MyNftComponent.html":{}}}],["object",{"_index":482,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":30,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/MyNftComponent.html":{}}}],["offer",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/TickedFactoryService.html":{},"modules/UserModule.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["offer.sellerid",{"_index":865,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{}}}],["offers'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["offers.component",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UserModule.html":{}}}],["offers.component.html",{"_index":828,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.scss",{"_index":827,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts",{"_index":826,"title":{},"body":{"components/MyOffersComponent.html":{},"coverage.html":{}}}],["offers.component.ts:14",{"_index":853,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:15",{"_index":855,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:17",{"_index":856,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:19",{"_index":854,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:20",{"_index":851,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:21",{"_index":836,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:27",{"_index":841,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:52",{"_index":842,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:63",{"_index":846,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:80",{"_index":838,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers.component.ts:88",{"_index":849,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["offers/my",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyOffersComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["onchanges",{"_index":1128,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["oninit",{"_index":300,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["openeditform",{"_index":833,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["opens",{"_index":804,"title":{},"body":{"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{}}}],["openupdateform",{"_index":829,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["openzeppelin/contracts",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["operator",{"_index":1225,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["optional",{"_index":23,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["org",{"_index":528,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["organizator",{"_index":664,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["organizator.guard",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["organizator.guard.ts",{"_index":320,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"coverage.html":{}}}],["organizator.guard.ts:10",{"_index":324,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["organizator.guard.ts:17",{"_index":329,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["organizer",{"_index":1266,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["out",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":1107,"title":{},"body":{"components/SectorComponent.html":{}}}],["output",{"_index":1077,"title":{},"body":{"components/SectorComponent.html":{}}}],["outputs",{"_index":1059,"title":{},"body":{"components/SectorComponent.html":{}}}],["overview",{"_index":1481,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["ownednfts",{"_index":34,"title":{"interfaces/OwnedNFTs.html":{}},"body":{"injectables/AlchemyApiService.html":{},"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyNftComponent.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["owner",{"_index":850,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["p",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["pack",{"_index":475,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["package",{"_index":1397,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["page",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":137,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel",{"_index":917,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["panelclass",{"_index":1126,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["param",{"_index":429,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"pipes/WeiToEthPipe.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["path",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'sell",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'sell/:address",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pay",{"_index":1168,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["people",{"_index":457,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["perm_data_setting",{"_index":940,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["permission",{"_index":1330,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["permissions",{"_index":1276,"title":{},"body":{"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["phrase",{"_index":710,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["pipe",{"_index":701,"title":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{}},"body":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":703,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{},"overview.html":{}}}],["pipesmodule",{"_index":748,"title":{"modules/PipesModule.html":{}},"body":{"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":712,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"pipes/WeiToEthPipe.html":{}}}],["platform",{"_index":1471,"title":{},"body":{"index.html":{}}}],["position",{"_index":311,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/FooterComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["possible",{"_index":1144,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["prev",{"_index":486,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["previous",{"_index":592,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["price",{"_index":448,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"pipes/WeiToEthPipe.html":{}}}],["primary",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":41,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["production",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1437,"title":{},"body":{"index.html":{}}}],["promise",{"_index":26,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["properties",{"_index":68,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"properties.html":{}}}],["protected",{"_index":611,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["provide",{"_index":357,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/SectorComponent.html":{}}}],["provided",{"_index":566,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["providedin",{"_index":37,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["provider",{"_index":591,"title":{},"body":{"components/CreateConcertComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["provider.getsigner",{"_index":1013,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["provider.send(\"eth_requestaccounts",{"_index":1317,"title":{},"body":{"injectables/WalletService.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{}}}],["public",{"_index":283,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["publish",{"_index":790,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["push",{"_index":1178,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["radius",{"_index":500,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MarketplaceComponent.html":{}}}],["raw",{"_index":266,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["reactiveformsmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{}}}],["reading",{"_index":1157,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["red",{"_index":605,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["redirects",{"_index":520,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{}}}],["redirectto",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1482,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":615,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["refuse",{"_index":1351,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["relative",{"_index":312,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["reload",{"_index":1452,"title":{},"body":{"index.html":{}}}],["resell",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["reselled",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["reselledticketcomponent",{"_index":140,"title":{"components/ReselledTicketComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reseller",{"_index":889,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["resellers",{"_index":392,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["resellersoffers",{"_index":381,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["resells",{"_index":439,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["reset",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resultarray",{"_index":1176,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["resultarray.push(ticketid.tonumber",{"_index":1182,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["results",{"_index":51,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":49,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["returns",{"_index":25,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["revoke",{"_index":658,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["revokemarketplaceapproval",{"_index":616,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["revokes",{"_index":630,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["rgb(250",{"_index":490,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{}}}],["right",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["root",{"_index":38,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/SnackbarService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["root'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["route",{"_index":330,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{}}}],["router",{"_index":516,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/NavigationBarComponent.html":{}}}],["routermodule",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forroot(routes",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":328,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["routes",{"_index":213,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["routing.module.ts",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":896,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["run",{"_index":1445,"title":{},"body":{"index.html":{}}}],["running",{"_index":1462,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":31,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/MyNftComponent.html":{},"dependencies.html":{}}}],["safehtml",{"_index":304,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["scaffolding",{"_index":1454,"title":{},"body":{"index.html":{}}}],["scale(1.01",{"_index":898,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["scale(1.02",{"_index":481,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["schematics",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["scss",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":533,"title":{},"body":{"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{}}}],["searchtext",{"_index":514,"title":{},"body":{"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{}}}],["searchtext.tolocalelowercase",{"_index":713,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["seat",{"_index":823,"title":{},"body":{"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["seatnumber",{"_index":678,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{}}}],["seats",{"_index":452,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{}}}],["seatstart",{"_index":673,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["seatstop",{"_index":674,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["sector",{"_index":398,"title":{"interfaces/Sector.html":{}},"body":{"components/ConcertSectorsComponent.html":{},"interfaces/DepConcert.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["sector'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["sector.availabletokenids.length",{"_index":446,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.component.html",{"_index":1054,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.component.scss",{"_index":1053,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.isnumerable",{"_index":1091,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.mintnow",{"_index":1097,"title":{},"body":{"components/SectorComponent.html":{}}}],["sector.name",{"_index":444,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.price",{"_index":449,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.seatstart",{"_index":453,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector.seatstop",{"_index":447,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sector/sector.component",{"_index":354,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["sectorcomponent",{"_index":143,"title":{"components/SectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sectorform",{"_index":1083,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorindex",{"_index":1072,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorname",{"_index":677,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/Ticket.html":{}}}],["sectors",{"_index":369,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["sectors'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["sectors.component",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{}}}],["sectors.component.html",{"_index":371,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.scss",{"_index":370,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts",{"_index":366,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"coverage.html":{}}}],["sectors.component.ts:16",{"_index":403,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:17",{"_index":407,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:18",{"_index":406,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:19",{"_index":405,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:20",{"_index":404,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:22",{"_index":408,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:23",{"_index":413,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:24",{"_index":402,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:25",{"_index":388,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:34",{"_index":389,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:48",{"_index":394,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:56",{"_index":399,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors.component.ts:69",{"_index":390,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sectors/concert",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSectorsComponent.html":{},"modules/MarketplaceModule.html":{},"coverage.html":{}}}],["sectorsarray",{"_index":1087,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(\"0",{"_index":1099,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(etherunitconverter.ethertowei(sector.price).tostring",{"_index":1100,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(isnumerablestring",{"_index":1092,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(mintnowstring",{"_index":1098,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(sector.seatstart.tostring",{"_index":1093,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(sector.seatstop.tostring",{"_index":1094,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsarray.push(sector.sectorname",{"_index":1089,"title":{},"body":{"components/SectorComponent.html":{}}}],["sectorsevent",{"_index":1060,"title":{},"body":{"components/SectorComponent.html":{}}}],["security",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":538,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["selectedsector",{"_index":377,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["selectedstandardtickets",{"_index":378,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["selector",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["selectsector",{"_index":382,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["selectsector(index",{"_index":393,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["sell",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSellComponent.html":{}}}],["sell'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["sell.component",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{}}}],["sell.component.html",{"_index":512,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.scss",{"_index":511,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts",{"_index":510,"title":{},"body":{"components/ConcertSellComponent.html":{},"coverage.html":{}}}],["sell.component.ts:11",{"_index":517,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:18",{"_index":524,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:19",{"_index":522,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:20",{"_index":525,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:22",{"_index":521,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell.component.ts:35",{"_index":519,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["sell/concert",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConcertSellComponent.html":{},"modules/MarketplaceModule.html":{},"coverage.html":{}}}],["seller",{"_index":656,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"interfaces/SellerOffer.html":{}}}],["sellerid",{"_index":731,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{}}}],["sellerids",{"_index":1037,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["selleroffer",{"_index":729,"title":{"interfaces/SellerOffer.html":{}},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["selleroffers",{"_index":830,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["sellertickets.key",{"_index":883,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["sellerticketsmap",{"_index":831,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["selling",{"_index":805,"title":{},"body":{"components/MyNftComponent.html":{}}}],["sellticket",{"_index":798,"title":{},"body":{"components/MyNftComponent.html":{}}}],["sellticket(_nft",{"_index":802,"title":{},"body":{"components/MyNftComponent.html":{}}}],["serve",{"_index":1446,"title":{},"body":{"index.html":{}}}],["server",{"_index":1444,"title":{},"body":{"index.html":{}}}],["services/auth",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/wallet.service",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":868,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["setapprovalforall",{"_index":1198,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setapprovalforall(address",{"_index":1227,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setdate",{"_index":1199,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setdate(address",{"_index":1229,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["setorganizatorpermission",{"_index":1259,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["setorganizatorpermission(address",{"_index":1274,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["sets",{"_index":1135,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["shopping_cart",{"_index":951,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["showlayout",{"_index":383,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["shows",{"_index":400,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["signer",{"_index":1012,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{}}}],["signer.getaddress",{"_index":1319,"title":{},"body":{"injectables/WalletService.html":{}}}],["simplechanges",{"_index":1137,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["size",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["slide",{"_index":464,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["slide:hover",{"_index":479,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["smartcontract",{"_index":975,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["snackbar",{"_index":1116,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":910,"title":{"injectables/SnackbarService.html":{}},"body":{"components/NavigationBarComponent.html":{},"injectables/SnackbarService.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["sold",{"_index":680,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"components/StandardTicketComponent.html":{},"interfaces/Ticket.html":{}}}],["soldtickets",{"_index":1139,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["soldtickets.some(id",{"_index":1179,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["someone",{"_index":866,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"components/FooterComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"modules/UserModule.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"index.html":{}}}],["specified",{"_index":763,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["specify",{"_index":659,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["specifying",{"_index":1080,"title":{},"body":{"components/SectorComponent.html":{},"injectables/TickedFactoryService.html":{}}}],["spin",{"_index":1108,"title":{},"body":{"components/SectorComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["src/app/app.component.ts",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/concert",{"_index":338,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":716,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:8",{"_index":720,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/marketplace/audience",{"_index":277,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/concert",{"_index":365,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/marketplace",{"_index":732,"title":{},"body":{"components/MarketplaceComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/marketplace.module.ts",{"_index":742,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["src/app/components/marketplace/reselled",{"_index":1033,"title":{},"body":{"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["src/app/components/marketplace/standard",{"_index":1127,"title":{},"body":{"components/StandardTicketComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation",{"_index":899,"title":{},"body":{"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["src/app/components/page",{"_index":1016,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/user/create",{"_index":606,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/user/my",{"_index":794,"title":{},"body":{"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"coverage.html":{}}}],["src/app/components/user/user.module.ts",{"_index":1297,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/pipes/filter",{"_index":704,"title":{},"body":{"pipes/FilterConcertsPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipes.module",{"_index":749,"title":{},"body":{"modules/MarketplaceModule.html":{},"modules/UserModule.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1029,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/pipes/wei",{"_index":1320,"title":{},"body":{"pipes/WeiToEthPipe.html":{},"coverage.html":{}}}],["src/app/services/alchemy",{"_index":6,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/MyNftComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":319,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/nft",{"_index":639,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/ticked",{"_index":332,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/ticked1155.service",{"_index":415,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/StandardTicketComponent.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts",{"_index":1189,"title":{},"body":{"injectables/Ticked1155Service.html":{},"coverage.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:102",{"_index":1213,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:107",{"_index":1211,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:11",{"_index":1200,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:112",{"_index":1219,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:117",{"_index":1221,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:122",{"_index":1223,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:127",{"_index":1230,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:132",{"_index":1228,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:137",{"_index":1209,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:25",{"_index":1206,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:41",{"_index":1202,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:55",{"_index":1204,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:69",{"_index":1232,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:87",{"_index":1226,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:92",{"_index":1215,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/smartcontracts/ticked1155.service.ts:97",{"_index":1217,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["src/app/services/snackbar.service",{"_index":924,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/WhitelistComponent.html":{}}}],["src/app/services/snackbar.service.ts",{"_index":1110,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/services/snackbar.service.ts:19",{"_index":1118,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/snackbar.service.ts:29",{"_index":1124,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/snackbar.service.ts:39",{"_index":1122,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/snackbar.service.ts:7",{"_index":1115,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/services/wallet.service",{"_index":641,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{}}}],["src/app/services/wallet.service.ts",{"_index":1298,"title":{},"body":{"injectables/WalletService.html":{},"coverage.html":{}}}],["src/app/services/wallet.service.ts:10",{"_index":1309,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/wallet.service.ts:18",{"_index":1303,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/wallet.service.ts:27",{"_index":1302,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/wallet.service.ts:9",{"_index":1308,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/utils/etherunitconverter",{"_index":643,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/SectorComponent.html":{}}}],["src/app/utils/etherunitconverter.ts",{"_index":682,"title":{},"body":{"classes/EtherUnitConverter.html":{},"coverage.html":{}}}],["src/app/utils/etherunitconverter.ts:10",{"_index":689,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["src/app/utils/etherunitconverter.ts:22",{"_index":687,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["src/environments/environment",{"_index":33,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/TickedFactoryService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/concert.model",{"_index":417,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["src/types/concert.model.ts",{"_index":670,"title":{},"body":{"interfaces/DepConcert.html":{},"interfaces/Sector.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["src/types/dialogs.model",{"_index":305,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["src/types/dialogs.model.ts",{"_index":273,"title":{},"body":{"interfaces/AudienceDialogData.html":{},"interfaces/CreateOfferDialogData.html":{},"coverage.html":{}}}],["src/types/marketplace.model",{"_index":857,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{}}}],["src/types/marketplace.model.ts",{"_index":726,"title":{},"body":{"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/SellerOffer.html":{},"coverage.html":{}}}],["src/types/nft.model",{"_index":35,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["src/types/nft.model.ts",{"_index":255,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["standard",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["standardticketcomponent",{"_index":145,"title":{"components/StandardTicketComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"modules/MarketplaceModule.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1436,"title":{"index.html":{}},"body":{}}],["state",{"_index":327,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"injectables/Ticked1155Service.html":{}}}],["statements",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":683,"title":{},"body":{"classes/EtherUnitConverter.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["status",{"_index":1207,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["step",{"_index":598,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["sticky",{"_index":959,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["still",{"_index":791,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["store",{"_index":1171,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["stored",{"_index":1459,"title":{},"body":{"index.html":{}}}],["string",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{}}}],["stringtime",{"_index":577,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["structure",{"_index":563,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["styles",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["styleurls",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["success",{"_index":1112,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["success(message",{"_index":1123,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["support",{"_index":1483,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":590,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["svg",{"_index":1484,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":461,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"dependencies.html":{}}}],["swiper/angular",{"_index":744,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["swiper/css",{"_index":458,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["swiper/css/bundle",{"_index":460,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["swiper/css/pagination",{"_index":459,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["swipermodule",{"_index":743,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["table",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":593,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["tap",{"_index":808,"title":{},"body":{"components/MyNftComponent.html":{}}}],["template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["templateurl",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["test",{"_index":1465,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1476,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1464,"title":{},"body":{"index.html":{}}}],["text",{"_index":465,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["themepalette",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["think",{"_index":1160,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.accounts",{"_index":1311,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.accounts[0",{"_index":1316,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.address",{"_index":1339,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.alchemyapiservice.getusernfts",{"_index":811,"title":{},"body":{"components/MyNftComponent.html":{}}}],["this.amount",{"_index":654,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["this.balance",{"_index":858,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.commoninf.get('concertdate')?.getrawvalue().tostring",{"_index":578,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.commoninf.get('concertdescription')?.getrawvalue",{"_index":583,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.commoninf.get('concertimage')?.getrawvalue",{"_index":584,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.commoninf.get('concertname')?.getrawvalue",{"_index":582,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.concertaddress",{"_index":419,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["this.concertdate",{"_index":427,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.concertdescription",{"_index":425,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.concertname",{"_index":423,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.concertorg",{"_index":526,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.concerts",{"_index":529,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.concertsectors",{"_index":585,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.deployedconcerts",{"_index":779,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.dialogref.close",{"_index":306,"title":{},"body":{"components/AudienceLayoutComponent.html":{}}}],["this.form.controls['sectors",{"_index":1082,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.formbuilder.array",{"_index":1073,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.formbuilder.group",{"_index":569,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["this.http.get(url",{"_index":50,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["this.ismarketplaceapproved",{"_index":647,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.links[0",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.listing.push(ticket",{"_index":1050,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.matdialog.open(audiencelayoutcomponent",{"_index":435,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.matdialog.open(createofferdialogcomponent",{"_index":812,"title":{},"body":{"components/MyNftComponent.html":{}}}],["this.nft",{"_index":644,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{}}}],["this.nft.contract.address",{"_index":649,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.nft.id.tokenid",{"_index":653,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.nftmarketplaceservice",{"_index":863,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["this.nftmarketplaceservice.buyticket",{"_index":1051,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.nftmarketplaceservice.deleteoffer(concertaddr",{"_index":880,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.getbalance",{"_index":859,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.getoffersbyseller",{"_index":861,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.getsellerids(this.concertaddress",{"_index":1048,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.nftmarketplaceservice.insertoffer",{"_index":652,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.nftmarketplaceservice.updateoffer(concertaddr",{"_index":879,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.nftmarketplaceservice.withdraw",{"_index":881,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.openupdateform",{"_index":875,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.permission",{"_index":1342,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.route.snapshot.parammap.get('address",{"_index":420,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.router.navigate(['sell",{"_index":532,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.router.navigate(navigationdetails",{"_index":934,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.sectors",{"_index":421,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.sectors.push(sectorform",{"_index":1085,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.sectors.removeat(sectorindex",{"_index":1086,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.sectors.value",{"_index":1088,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.sectors[index",{"_index":432,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.sectorsevent.emit(sectorsarray",{"_index":1101,"title":{},"body":{"components/SectorComponent.html":{}}}],["this.selectedsector",{"_index":431,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.selectedstandardtickets",{"_index":430,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.sellerids",{"_index":1047,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["this.selleroffers",{"_index":860,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.sellerticketsmap.get(offer.concertaddr",{"_index":872,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.sellerticketsmap.set(offer.concertaddr",{"_index":874,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["this.snackbar.open(message",{"_index":1125,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.error(\"access",{"_index":935,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.snackbarservice.error(\"specify",{"_index":1340,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.snackbarservice.info(\"this",{"_index":1348,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.snackbarservice.info(\"you",{"_index":928,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.ticked1155service.addsectors(address",{"_index":782,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.ticked1155service.buyticket",{"_index":1183,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticked1155service.createandminttickets(contractaddress",{"_index":781,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.ticked1155service.getdate(this.concertaddress",{"_index":428,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getdescription(this.concertaddress",{"_index":426,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getimage(this.concertaddress",{"_index":434,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getname(this.concertaddress",{"_index":424,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getsectors(this.concertaddress",{"_index":422,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["this.ticked1155service.getsectorsoldids",{"_index":1153,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticked1155service.getticketattr(this.concertaddress",{"_index":1174,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticked1155service.isapprovedforall",{"_index":648,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.ticked1155service.setapprovalforall",{"_index":651,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["this.ticked1155service.setdate(concertaddress",{"_index":788,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.ticked1155service.withdraw(concertaddress",{"_index":783,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.tickedfactoryservice.authorizeaccess",{"_index":335,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{},"components/NavigationBarComponent.html":{}}}],["this.tickedfactoryservice.authorizeaccess(this.checkaddress",{"_index":1346,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.tickedfactoryservice.createconcertcontract",{"_index":581,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["this.tickedfactoryservice.getdepcontracts",{"_index":780,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["this.tickedfactoryservice.getdepcontracts(org",{"_index":530,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.tickedfactoryservice.getorganizers",{"_index":527,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["this.tickedfactoryservice.setorganizatorpermission(this.address",{"_index":1344,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["this.tickedfactoryservice.validateowner",{"_index":938,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.ticketsmap.clear",{"_index":1149,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.ticketsmap.set(tokenid",{"_index":1175,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.validateavailability",{"_index":1151,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["this.wallet",{"_index":1315,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletservice.getwalletaddress",{"_index":45,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["this.walletservice.login",{"_index":926,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["through",{"_index":1165,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticked",{"_index":945,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["ticked1155",{"_index":1233,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["ticked1155.abi",{"_index":1253,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["ticked1155service",{"_index":386,"title":{"injectables/Ticked1155Service.html":{}},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"coverage.html":{}}}],["ticked1155service.getcontract(address",{"_index":1235,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["tickedapp",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["tickedfactory",{"_index":1282,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickedfactory.abi",{"_index":1293,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickedfactoryservice",{"_index":323,"title":{"injectables/TickedFactoryService.html":{}},"body":{"guards/AuthOrganizatorGuard.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{},"coverage.html":{}}}],["tickedfactoryservice.getcontract",{"_index":1284,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickedfactoryservice.getcontract(true",{"_index":1286,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["tickerattr",{"_index":1147,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket",{"_index":416,"title":{"interfaces/Ticket.html":{}},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/DepConcert.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/Ticket.html":{},"coverage.html":{}}}],["ticket'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["ticket.component",{"_index":751,"title":{},"body":{"modules/MarketplaceModule.html":{}}}],["ticket.component.html",{"_index":1036,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.scss",{"_index":1035,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts",{"_index":1034,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"coverage.html":{}}}],["ticket.component.ts:13",{"_index":1040,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:14",{"_index":1132,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:15",{"_index":1046,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["ticket.component.ts:16",{"_index":1045,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:17",{"_index":1039,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:23",{"_index":1044,"title":{},"body":{"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:44",{"_index":1042,"title":{},"body":{"components/ReselledTicketComponent.html":{}}}],["ticket.component.ts:53",{"_index":1140,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.component.ts:72",{"_index":1134,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.value.price",{"_index":1185,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.value.seatnumber",{"_index":1188,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket.value.sectorname",{"_index":1184,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticket/reselled",{"_index":752,"title":{},"body":{"modules/MarketplaceModule.html":{},"components/ReselledTicketComponent.html":{},"coverage.html":{}}}],["ticket/standard",{"_index":750,"title":{},"body":{"modules/MarketplaceModule.html":{},"components/StandardTicketComponent.html":{},"coverage.html":{}}}],["ticket:hover",{"_index":897,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["ticketid",{"_index":1146,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["ticketid.tonumber",{"_index":1181,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["tickets",{"_index":454,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["tickets?.push(ticket",{"_index":873,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["ticketsmap",{"_index":379,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/StandardTicketComponent.html":{}}}],["title",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ConcertSectorsComponent.html":{}}}],["today",{"_index":441,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["toggle",{"_index":1079,"title":{},"body":{"components/SectorComponent.html":{},"injectables/TickedFactoryService.html":{},"components/WhitelistComponent.html":{}}}],["toggles",{"_index":391,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["token",{"_index":628,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["tokenid",{"_index":262,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/SellerOffer.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["tokenmetadata",{"_index":263,"title":{"interfaces/TokenMetadata.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["tokens",{"_index":621,"title":{},"body":{"components/CreateOfferDialogComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{}}}],["tokentype",{"_index":264,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["tokenuri",{"_index":265,"title":{"interfaces/TokenUri.html":{}},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"coverage.html":{}}}],["top",{"_index":364,"title":{},"body":{"modules/ConcertManagementModule.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{}}}],["totalcount",{"_index":271,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["trait_type",{"_index":257,"title":{},"body":{"interfaces/Attribute.html":{},"interfaces/Contract.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"interfaces/NFT.html":{},"interfaces/OwnedNFTs.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{}}}],["transaction",{"_index":770,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["transaction.wait",{"_index":1238,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["transform",{"_index":480,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"pipes/FilterConcertsPipe.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"pipes/WeiToEthPipe.html":{}}}],["transform(concerts",{"_index":707,"title":{},"body":{"pipes/FilterConcertsPipe.html":{}}}],["transform(price",{"_index":1322,"title":{},"body":{"pipes/WeiToEthPipe.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["true",{"_index":410,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyOffersComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1277,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["try",{"_index":996,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["ts",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":1237,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["tx.status",{"_index":1239,"title":{},"body":{"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["type",{"_index":22,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/AppComponent.html":{},"interfaces/Attribute.html":{},"interfaces/AudienceDialogData.html":{},"components/AudienceLayoutComponent.html":{},"guards/AuthOrganizatorGuard.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/CreateOfferDialogData.html":{},"interfaces/DepConcert.html":{},"classes/EtherUnitConverter.html":{},"pipes/FilterConcertsPipe.html":{},"interfaces/Id.html":{},"interfaces/ListedTicket.html":{},"interfaces/Listing.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"interfaces/Sector.html":{},"components/SectorComponent.html":{},"interfaces/SellerOffer.html":{},"injectables/SnackbarService.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/Ticket.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"injectables/WalletService.html":{},"pipes/WeiToEthPipe.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedoc",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":785,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["underline",{"_index":546,"title":{},"body":{"components/ConcertSellComponent.html":{}}}],["unique",{"_index":888,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{}}}],["unit",{"_index":1463,"title":{},"body":{"index.html":{}}}],["unixtimestamp",{"_index":579,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["unknown",{"_index":981,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{}}}],["update",{"_index":893,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["updateoffer",{"_index":834,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["updateoffer(concertaddr",{"_index":844,"title":{},"body":{"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{}}}],["updates",{"_index":847,"title":{},"body":{"components/MyOffersComponent.html":{}}}],["url",{"_index":46,"title":{},"body":{"injectables/AlchemyApiService.html":{},"components/CreateConcertComponent.html":{}}}],["urltree",{"_index":331,"title":{},"body":{"guards/AuthOrganizatorGuard.html":{}}}],["use",{"_index":1173,"title":{},"body":{"components/StandardTicketComponent.html":{},"index.html":{}}}],["user",{"_index":1306,"title":{},"body":{"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["usermodule",{"_index":163,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["uses",{"_index":1304,"title":{},"body":{"injectables/WalletService.html":{}}}],["usevalue",{"_index":358,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["validate",{"_index":1280,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["validateavailability",{"_index":1130,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["validateavailability(alltickets",{"_index":1138,"title":{},"body":{"components/StandardTicketComponent.html":{}}}],["validateowner",{"_index":1260,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["validateowner(address",{"_index":1278,"title":{},"body":{"injectables/TickedFactoryService.html":{}}}],["validators",{"_index":576,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["validators.minlength(8",{"_index":571,"title":{},"body":{"components/CreateConcertComponent.html":{}}}],["validators.required",{"_index":570,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/SectorComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attribute.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"interfaces/Contract.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"interfaces/Id.html":{},"interfaces/Metadata.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"interfaces/NFT.html":{},"injectables/NftMarketplaceService.html":{},"interfaces/OwnedNFTs.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"interfaces/TokenMetadata.html":{},"interfaces/TokenUri.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["variable",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1492,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1441,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertically",{"_index":469,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["verticalposition",{"_index":363,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["via",{"_index":1467,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":414,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["viewencapsulation.none",{"_index":368,"title":{},"body":{"components/ConcertSectorsComponent.html":{}}}],["void",{"_index":294,"title":{},"body":{"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["waffle",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["wallet",{"_index":914,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/TickedFactoryService.html":{},"injectables/WalletService.html":{},"components/WhitelistComponent.html":{}}}],["wallet.service",{"_index":36,"title":{},"body":{"injectables/AlchemyApiService.html":{},"guards/AuthOrganizatorGuard.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["walletaddres",{"_index":43,"title":{},"body":{"injectables/AlchemyApiService.html":{}}}],["walletservice",{"_index":14,"title":{"injectables/WalletService.html":{}},"body":{"injectables/AlchemyApiService.html":{},"modules/AppModule.html":{},"guards/AuthOrganizatorGuard.html":{},"components/CreateOfferDialogComponent.html":{},"components/MyConcertsComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{},"injectables/WalletService.html":{},"coverage.html":{},"overview.html":{}}}],["warn",{"_index":669,"title":{},"body":{"components/CreateOfferDialogComponent.html":{}}}],["warning",{"_index":588,"title":{},"body":{"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{}}}],["webkit",{"_index":470,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/SectorComponent.html":{}}}],["wei",{"_index":1002,"title":{},"body":{"injectables/NftMarketplaceService.html":{},"modules/PipesModule.html":{},"injectables/Ticked1155Service.html":{}}}],["weitoeth",{"_index":450,"title":{},"body":{"components/ConcertSectorsComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{},"pipes/WeiToEthPipe.html":{}}}],["weitoether",{"_index":685,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["weitoether(amount",{"_index":688,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["weitoethpipe",{"_index":1028,"title":{"pipes/WeiToEthPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/WeiToEthPipe.html":{},"coverage.html":{},"overview.html":{}}}],["weitogwei(amount",{"_index":690,"title":{},"body":{"classes/EtherUnitConverter.html":{}}}],["white",{"_index":962,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["whitelist",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{}}}],["whitelist.component.html",{"_index":1328,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["whitelist.component.scss",{"_index":1327,"title":{},"body":{"components/WhitelistComponent.html":{}}}],["whitelist/whitelist.component",{"_index":355,"title":{},"body":{"modules/ConcertManagementModule.html":{}}}],["whitelistcomponent",{"_index":147,"title":{"components/WhitelistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AudienceLayoutComponent.html":{},"modules/ConcertManagementModule.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/CreateOfferDialogComponent.html":{},"components/FooterComponent.html":{},"components/MarketplaceComponent.html":{},"components/MyConcertsComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ReselledTicketComponent.html":{},"components/SectorComponent.html":{},"components/StandardTicketComponent.html":{},"components/WhitelistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["width",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AudienceLayoutComponent.html":{},"components/ConcertSectorsComponent.html":{},"components/ConcertSellComponent.html":{},"components/CreateConcertComponent.html":{},"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{},"components/SectorComponent.html":{},"components/WhitelistComponent.html":{}}}],["window?.ethereum.request",{"_index":1312,"title":{},"body":{"injectables/WalletService.html":{}}}],["withdraw",{"_index":760,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["withdraw(address",{"_index":1231,"title":{},"body":{"injectables/Ticked1155Service.html":{}}}],["withdraw(concertaddress",{"_index":773,"title":{},"body":{"components/MyConcertsComponent.html":{}}}],["withdraws",{"_index":775,"title":{},"body":{"components/MyConcertsComponent.html":{},"components/MyOffersComponent.html":{},"injectables/NftMarketplaceService.html":{},"injectables/Ticked1155Service.html":{}}}],["without",{"_index":885,"title":{},"body":{"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["wrap",{"_index":541,"title":{},"body":{"components/ConcertSellComponent.html":{},"components/MyNftComponent.html":{},"components/MyOffersComponent.html":{},"components/ReselledTicketComponent.html":{},"components/StandardTicketComponent.html":{}}}],["z",{"_index":954,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["zone.js",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcertManagementModule.html":{},"modules/MarketplaceModule.html":{},"modules/PipesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlchemyApiService.html":{"url":"injectables/AlchemyApiService.html","title":"injectable - AlchemyApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlchemyApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alchemy-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserNfts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alchemy-api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserNfts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserNfts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alchemy-api.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { OwnedNFTs } from 'src/types/nft.model';\nimport { WalletService } from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlchemyApiService {\n\n  constructor(\n    private walletService: WalletService,\n    private http: HttpClient\n  ) { }\n\n  async getUserNfts(): Promise> {\n    const walletAddres = await this.walletService.getWalletAddress()\n    const url = environment.alchemyApi + \"/getNFTs/?owner=\" + walletAddres\n    return this.http.get(url)\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeLink\n                            \n                            \n                                background\n                            \n                            \n                                links\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.links[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        background\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThemePalette\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['sell', 'resell']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tickeDapp'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tickeDapp';\n  links = ['sell', 'resell'];\n  activeLink = this.links[0];\n  background: ThemePalette = 'primary';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n/* TO CHANGE */\np {\n    padding-left: 20px;\n    font-size: 12px;\n  }\n  .container {\n    margin-right: auto;\n    margin-left: auto;\n    padding: 20px 15px 30px;\n    width: 750px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nNavigationBarComponent\n\nNavigationBarComponent\n\nAppModule -->\n\nNavigationBarComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nConcertManagementModule\n\nConcertManagementModule\n\nAppModule -->\n\nConcertManagementModule->AppModule\n\n\n\n\n\nMarketplaceModule\n\nMarketplaceModule\n\nAppModule -->\n\nMarketplaceModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nAppModule -->\n\nWalletService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NavigationBarComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WalletService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ConcertManagementModule\n                        \n                        \n                            MarketplaceModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component'\nimport { WalletService } from './services/wallet.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { ConcertManagementModule } from './components/concert-management/concert-management.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { MarketplaceModule } from './components/marketplace/marketplace.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { UserModule } from './components/user/user.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    NavigationBarComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatButtonModule, \n    ReactiveFormsModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatIconModule,\n    // custom\n    ConcertManagementModule,\n    MarketplaceModule,\n    UserModule\n  ],\n  providers: [\n    WalletService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateConcertComponent } from './components/concert-management/create-concert/create-concert.component';\nimport { MyConcertsComponent } from './components/concert-management/my-concerts/my-concerts.component';\nimport { WhitelistComponent } from './components/concert-management/whitelist/whitelist.component';\nimport { ConcertSectorsComponent } from './components/marketplace/concert-sectors/concert-sectors.component';\nimport { MarketplaceComponent } from './components/marketplace/marketplace-comp/marketplace.component';\nimport { ConcertSellComponent } from './components/marketplace/concert-sell/concert-sell.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { AuthOrganizatorGuard } from './services/auth-organizator.guard';\nimport { MyNftComponent } from './components/user/my-nft/my-nft.component';\nimport { MyOffersComponent } from './components/user/my-offers/my-offers.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/marketplace/sell', pathMatch: 'full' },\n  { path: 'marketplace', component: MarketplaceComponent,\n    children:[\n      {\n        path:'sell',\n        component: ConcertSellComponent\n      },\n      {\n        path:'sell/:address',\n        component: ConcertSectorsComponent\n      },\n    ] \n  },\n  { path: 'create-concert', canActivate:[AuthOrganizatorGuard], component: CreateConcertComponent },\n  { path: 'my-concerts', canActivate:[AuthOrganizatorGuard], component: MyConcertsComponent },\n  { path: 'my-nft', component: MyNftComponent },\n  { path: 'my-offers', component: MyOffersComponent },\n  { path: 'whitelist', component: WhitelistComponent },\n  { path: '**', component:  PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), CommonModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Attribute.html":{"url":"interfaces/Attribute.html","title":"interface - Attribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Attribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display_type\n                                        \n                                \n                                \n                                        \n                                            trait_type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trait_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trait_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudienceDialogData.html":{"url":"interfaces/AudienceDialogData.html","title":"interface - AudienceDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudienceDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/dialogs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NFT } from \"./nft.model\";\n\nexport interface AudienceDialogData {\n    image: string;\n}\n\nexport interface CreateOfferDialogData {\n    nft: NFT;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AudienceLayoutComponent.html":{"url":"components/AudienceLayoutComponent.html","title":"component - AudienceLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AudienceLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/audience-layout/audience-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-audience-layout\n            \n\n            \n                styleUrls\n                ./audience-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./audience-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: AudienceDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AudienceDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:21\n                \n            \n\n\n            \n                \n                    Function closes dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudienceDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/audience-layout/audience-layout.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { AudienceDialogData } from 'src/types/dialogs.model';\n\n@Component({\n  selector: 'app-audience-layout',\n  templateUrl: './audience-layout.component.html',\n  styleUrls: ['./audience-layout.component.scss']\n})\nexport class AudienceLayoutComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: AudienceDialogData,\n  ) { }\n\n  /**\n   * Function closes dialog \n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n     Audience layout\n\n    \n        \n    \n\n    \n        Close\n    \n\n    \n\n    \n                \n                    ./audience-layout.component.scss\n                \n                img {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n}\n\n.dialog {\n    position: relative !important;\n}\n\n.btn-close {\n    position: relative !important;\n    left: 10px;\n    bottom: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Audience layout                            Close    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AudienceLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthOrganizatorGuard.html":{"url":"guards/AuthOrganizatorGuard.html","title":"guard - AuthOrganizatorGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthOrganizatorGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth-organizator.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-organizator.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-organizator.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { WalletService } from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthOrganizatorGuard implements CanActivate {\n  \n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private walletService: WalletService,\n  ) {}\n  \n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise {\n    \n      return this.tickedFactoryService.authorizeAccess(\n         await this.walletService.getWalletAddress()\n      );\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConcertManagementModule.html":{"url":"modules/ConcertManagementModule.html","title":"module - ConcertManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ConcertManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConcertManagementModule\n\n\n\ncluster_ConcertManagementModule_declarations\n\n\n\n\nCreateConcertComponent\n\nCreateConcertComponent\n\n\n\nConcertManagementModule\n\nConcertManagementModule\n\nConcertManagementModule -->\n\nCreateConcertComponent->ConcertManagementModule\n\n\n\n\n\nMyConcertsComponent\n\nMyConcertsComponent\n\nConcertManagementModule -->\n\nMyConcertsComponent->ConcertManagementModule\n\n\n\n\n\nSectorComponent\n\nSectorComponent\n\nConcertManagementModule -->\n\nSectorComponent->ConcertManagementModule\n\n\n\n\n\nWhitelistComponent\n\nWhitelistComponent\n\nConcertManagementModule -->\n\nWhitelistComponent->ConcertManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/concert-management/concert-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateConcertComponent\n                        \n                        \n                            MyConcertsComponent\n                        \n                        \n                            SectorComponent\n                        \n                        \n                            WhitelistComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CreateConcertComponent } from './create-concert/create-concert.component';\nimport { MyConcertsComponent } from './my-concerts/my-concerts.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { SectorComponent } from './sector/sector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WhitelistComponent } from './whitelist/whitelist.component';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [\n    CreateConcertComponent,\n    MyConcertsComponent,\n    SectorComponent,\n    WhitelistComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatTabsModule, \n    MatCardModule,\n    MatStepperModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 3000,\n                                                        horizontalPosition: 'center',\n                                                        verticalPosition: 'top'}}\n  ]\n})\nexport class ConcertManagementModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConcertSectorsComponent.html":{"url":"components/ConcertSectorsComponent.html","title":"component - ConcertSectorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConcertSectorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/concert-sectors/concert-sectors.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-concert-sectors\n            \n\n            \n                styleUrls\n                ./concert-sectors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./concert-sectors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                concertAddress\n                            \n                            \n                                concertDate\n                            \n                            \n                                concertDescription\n                            \n                            \n                                concertName\n                            \n                            \n                                sectors\n                            \n                            \n                                selectedSector\n                            \n                            \n                                selectedStandardTickets\n                            \n                            \n                                ticketsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                resellersOffers\n                            \n                            \n                                selectSector\n                            \n                            \n                                    Async\n                                showLayout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, ticked1155Service: Ticked1155Service, matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resellersOffers\n                        \n                    \n                \n            \n            \n                \nresellersOffers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:69\n                \n            \n\n\n            \n                \n                    Function that toggles for resellers offers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSector\n                        \n                    \n                \n            \n            \n                \nselectSector(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:48\n                \n            \n\n\n            \n                \n                    Function that changes currently chosen sector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIndex of sector\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showLayout\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLayout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:56\n                \n            \n\n\n            \n                \n                    Function that shows dialog with layout\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sectors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sector[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStandardTickets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sectors/concert-sectors.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { Sector, Ticket } from 'src/types/concert.model';\nimport { AudienceLayoutComponent } from '../audience-layout/audience-layout.component';\n\n@Component({\n  selector: 'app-concert-sectors',\n  templateUrl: './concert-sectors.component.html',\n  styleUrls: ['./concert-sectors.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ConcertSectorsComponent implements OnInit {\n\n  concertAddress!: string;\n  sectors: Sector[] = [];\n  concertName: string = '';\n  concertDescription: string = '';\n  concertDate!: number;\n\n  selectedSector!: Sector;\n  ticketsMap: Map = new Map;\n  amount = 1;\n  selectedStandardTickets: boolean = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private ticked1155Service: Ticked1155Service,\n    private matDialog: MatDialog,\n  ) { }\n\n\n  async ngOnInit() {\n    this.concertAddress = this.route.snapshot.paramMap.get('address')!;\n    \n    this.sectors = await this.ticked1155Service.getSectors(this.concertAddress);\n    this.concertName = await this.ticked1155Service.getName(this.concertAddress);\n    this.concertDescription = await this.ticked1155Service.getDescription(this.concertAddress);\n    this.concertDate = await this.ticked1155Service.getDate(this.concertAddress);\n  }\n\n  /**\n   * Function that changes currently chosen sector \n   * \n   * @param index - Index of sector \n   */\n  selectSector(index: number) {\n    this.selectedStandardTickets = true;\n    this.selectedSector = this.sectors[index];\n  }\n\n  /**\n   * Function that shows dialog with layout  \n   */\n  async showLayout(){\n    const _image = await this.ticked1155Service.getImage(this.concertAddress);\n    let dialogRef = this.matDialog.open(AudienceLayoutComponent, {\n      maxHeight: '80%',\n      maxWidth: '80%',\n      data: { image: _image }\n    });\n  }\n\n  // resells\n  /**\n   * Function that toggles for resellers offers  \n   */\n  resellersOffers() {\n    this.selectedStandardTickets = false;\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{ concertName }}\n        \n            today\n            {{ concertDate * 1000 | date:'medium' }}\n        \n    \n    \n        {{ concertDescription }}\n    \n\n\n    \n        \n            \n                {{sector.name}}\n                \n                    \n                         Capacity: {{sector.availableTokenIds.length}} \n                    \n                    \n                         Capacity: {{ sector.seatStop }} \n                    \n                \n            \n            \n                 Ticket price: {{ sector.price | weiToEth }} ETH \n                \n                     Seats from {{ sector.seatStart }} to {{ sector.seatStop }} \n                \n                \n                     Capacity: {{ sector.seatStop }} \n                \n            \n                     Tickets &#8595;\n                 \n            -->\n            \n        \n     \n    \n    \n        \n            \n                \n                    RESELLERS OFFERS\n                \n            \n            \n                Check offers from other people\n            \n        \n    \n\n\n\n\n\n    Audience layout \n\n\n\n    \n\n    \n\n\n    \n\n    \n\n\n    \n\n    \n                \n                    ./concert-sectors.component.scss\n                \n                @import \"~swiper/css\";\n@import \"~swiper/css/pagination\";\n@import \"~swiper/css/bundle\";\n\n\n.swiper {\n  width: 100%;\n  height: 100%;\n}\n\n.swiper-slide {\n  text-align: center;\n  font-size: 18px;\n  background: #fff;\n\n  /* Center slide text vertically */\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  -webkit-justify-content: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  -webkit-align-items: center;\n  align-items: center;\n}\n\n.swiper-slide:hover {\n    transform: scale(1.02);\n}\n\n.swiper-slide img {\n  display: block;\n  object-fit: cover;\n}\n\n.swiper-button-prev {\n  color: grey;\n}\n.swiper-button-next {\n  color: grey;\n}\n\n.sector {\n  padding: 10px;\n  margin: 10px;\n  background-color: rgb(250, 250, 250);\n  height: 100px;\n  width: 220px;\n}\n    \n.btn-details {\n    float: right;\n}\n\na {\n    text-decoration: none;\n}\n\n.info {\n  background-color: #683ab74e;\n  border-radius: 25px;\n}\n\n.concert-date {\n  float: right;\n  padding: 5px;\n}\n\n.concert-name {\n  padding: 10px;\n}\n\n.concert-description {\n  padding: 10px;\n}\n\n.sector-header {\n  ::ng-deep {\n    .mat-card-title {\n      margin: auto;\n      text-align: center;\n    }\n  }\n}\n\n.sector-content {\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ concertName }}                    today            {{ concertDate * 1000 | date:\\'medium\\' }}                        {{ concertDescription }}                                            {{sector.name}}                                                             Capacity: {{sector.availableTokenIds.length}}                                                                  Capacity: {{ sector.seatStop }}                                                                              Ticket price: {{ sector.price | weiToEth }} ETH                                      Seats from {{ sector.seatStart }} to {{ sector.seatStop }}                                                      Capacity: {{ sector.seatStop }}                                                  Tickets ↓                             -->                                                                                         RESELLERS OFFERS                                                        Check offers from other people                            Audience layout                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConcertSectorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConcertSellComponent.html":{"url":"components/ConcertSellComponent.html","title":"component - ConcertSellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConcertSellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/concert-sell/concert-sell.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-concert-sell\n            \n\n            \n                styleUrls\n                ./concert-sell.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./concert-sell.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                concertOrg\n                            \n                            \n                                    Public\n                                concerts\n                            \n                            \n                                    Public\n                                searchText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToConcert\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToConcert\n                        \n                    \n                \n            \n            \n                \ngoToConcert(concertAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:35\n                \n            \n\n\n            \n                \n                    Function that redirects to chosen concert\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        concertOrg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        concerts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DepConcert[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/concert-sell/concert-sell.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { DepConcert } from 'src/types/concert.model';\n\n@Component({\n  selector: 'app-concert-sell',\n  templateUrl: './concert-sell.component.html',\n  styleUrls: ['./concert-sell.component.scss']\n})\nexport class ConcertSellComponent implements OnInit {\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private router: Router,\n  ) { }\n\n  public concerts: DepConcert[] = [];\n  public concertOrg: string[] = [];\n  public searchText = '';\n\n  async ngOnInit() {\n    this.concertOrg = await this.tickedFactoryService.getOrganizers();\n    for (let org of this.concertOrg) {\n      this.concerts = await this.tickedFactoryService.getDepContracts(org)\n    }\n  }\n\n  /**\n   * Function that redirects to chosen concert\n   *\n   * @param contractAddress - Address of concert contract \n   * \n   */\n  goToConcert(concertAddress: string) {\n    this.router.navigate(['sell', concertAddress]);\n  }\n\n}\n\n    \n\n    \n        \n    \n        search\n        \n            Search...\n        \n        \n        \n            close\n        \n    \n\n\n\n    \n        \n            \n            {{concert.name}}\n            {{concert.contractAddress}}\n            \n            \n                \n                     Click here to see more details &#8594;\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./concert-sell.component.scss\n                \n                .concert-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n}\n\n.concert {\n    padding: 10px;\n    margin: 10px;\n    background-color: rgb(250, 250, 250);\n}\n\n.concert:hover {\n    transform: scale(1.02);\n}\n\n.btn-details {\n    float: right;\n}\n\na {\n    text-decoration: none;\n}\n.search {\n    text-align: center;\n}\n\n.search-field {\n    width: 80%;\n\n    ::ng-deep {\n        .mat-form-field-flex {\n            border-radius: 25px !important;\n        }\n\n        .mat-form-field-underline {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            search                    Search...                                    close                                                {{concert.name}}            {{concert.contractAddress}}                                                             Click here to see more details →                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConcertSellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contract.html":{"url":"interfaces/Contract.html","title":"interface - Contract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateConcertComponent.html":{"url":"components/CreateConcertComponent.html","title":"component - CreateConcertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateConcertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/create-concert/create-concert.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-concert\n            \n\n            \n                styleUrls\n                ./create-concert.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-concert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commonInf\n                            \n                            \n                                concertSectors\n                            \n                            \n                                    Public\n                                contractsAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSectors\n                            \n                            \n                                    Public\n                                    Async\n                                createConcert\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSectors\n                        \n                    \n                \n            \n            \n                \naddSectors(sectors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:51\n                \n            \n\n\n            \n                \n                    Function that add sectors to concert informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createConcert\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConcert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:36\n                \n            \n\n\n            \n                \n                    Function that creates structure of information based on provided data in forms\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commonInf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    concertName: ['', Validators.required],\n    concertDescription: ['', Validators.required, Validators.minLength(8)],\n    concertDate: ['', Validators.required],\n    concertImage: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        concertSectors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contractsAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/create-concert/create-concert.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\n\n@Component({\n  selector: 'app-create-concert',\n  templateUrl: './create-concert.component.html',\n  styleUrls: ['./create-concert.component.scss']\n})\nexport class CreateConcertComponent implements OnInit {\n\n  concertSectors: string [] = [];\n\n  commonInf = this.formBuilder.group({\n    concertName: ['', Validators.required],\n    concertDescription: ['', Validators.required, Validators.minLength(8)],\n    concertDate: ['', Validators.required],\n    concertImage: ['', Validators.required],\n  })\n\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public contractsAddress: string[] = [];\n\n\n  /**\n   * Function that creates structure of information based on provided data in forms\n   */\n  public async createConcert() {\n    let stringTime = this.commonInf.get('concertDate')?.getRawValue().toString();\n    let unixTimestamp = (new Date(stringTime!)).getTime() / 1000;\n    this.tickedFactoryService.createConcertContract(\n      this.commonInf.get('concertName')?.getRawValue(),\n      this.commonInf.get('concertDescription')?.getRawValue(),\n      unixTimestamp,\n      this.commonInf.get('concertImage')?.getRawValue(),\n      this.concertSectors\n    )\n  }\n\n  /**\n   * Function that add sectors to concert informations\n   */\n  addSectors(sectors: string[]) {\n    this.concertSectors = sectors\n  }\n\n}\n    \n\n    \n        \n\n    \n        \n            \n                \n                    Name\n                    \n                \n            \n            \n                \n                    Description\n                    \n                    \n                \n            \n            \n                \n                    Image of audience layout (URL)\n                    \n                    \n                \n            \n            \n                \n                    Date\n                    \n                \n            \n        \n        \n            Apply\n        \n    \n    \n        \n\n        Back\n    \n    \n        warning\n        \n            \n                Make sure that all data provider in previous tabs is correct! \n                Informations cannot be changed in future - except date.\n            \n        \n         Create Contract Concert\n    \n\n\n\n\n\n\n      \n    \n\n    \n                \n                    ./create-concert.component.scss\n                \n                .step {\n    display: block;\n    margin: auto !important;\n}\n\n.form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n\n.form-full-width {\n    width: 100%;\n}\n.info-achtung {\n    padding: 10px;\n    font-size: medium;\n    color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Name                                                                                                Description                                                                                                                    Image of audience layout (URL)                                                                                                                    Date                                                                            Apply                                Back                warning                                    Make sure that all data provider in previous tabs is correct!                 Informations cannot be changed in future - except date.                             Create Contract Concert          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateConcertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOfferDialogComponent.html":{"url":"components/CreateOfferDialogComponent.html","title":"component - CreateOfferDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOfferDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-offer-dialog\n            \n\n            \n                styleUrls\n                ./create-offer-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-offer-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                amount\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                isMarketplaceApproved\n                            \n                            \n                                    Public\n                                nft\n                            \n                            \n                                    Protected\n                                price\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approveMarketplace\n                            \n                            \n                                    Async\n                                createOffer\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                revokeMarketplaceApproval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateOfferDialogData, ticked1155Service: Ticked1155Service, walletService: WalletService, nftMarketplaceService: NftMarketplaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateOfferDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nftMarketplaceService\n                                                  \n                                                        \n                                                                        NftMarketplaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        approveMarketplace\n                        \n                    \n                \n            \n            \n                \napproveMarketplace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:47\n                \n            \n\n\n            \n                \n                    Function that approves marketplace contract for all tokens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOffer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:71\n                \n            \n\n\n            \n                \n                    Function that creates offer based on form input\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:85\n                \n            \n\n\n            \n                \n                    Function checks if marketplace is approved for token\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revokeMarketplaceApproval\n                        \n                    \n                \n            \n            \n                \nrevokeMarketplaceApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:59\n                \n            \n\n\n            \n                \n                    Function that revokes approval for all tokens for marketplace contract\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOfferDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMarketplaceApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NFT\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BigNumber } from 'ethers';\nimport { NftMarketplaceService } from 'src/app/services/smartcontracts/nft-marketplace.service';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport EtherUnitConverter from 'src/app/utils/EtherUnitConverter';\nimport { environment } from 'src/environments/environment';\nimport { CreateOfferDialogData } from 'src/types/dialogs.model';\nimport { NFT } from 'src/types/nft.model';\n\n@Component({\n  selector: 'app-create-offer-dialog',\n  templateUrl: './create-offer-dialog.component.html',\n  styleUrls: ['./create-offer-dialog.component.scss']\n})\nexport class CreateOfferDialogComponent implements OnInit {\n\n  public isMarketplaceApproved: boolean = false;\n  public nft!: NFT;\n  protected amount: number = 1;\n  protected price!: number;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: CreateOfferDialogData,\n    private ticked1155Service: Ticked1155Service,\n    private walletService: WalletService,\n    private nftMarketplaceService: NftMarketplaceService,\n  ) {\n      this.nft = data.nft;\n   }\n\n  async ngOnInit() {\n    // check if collection is approved\n    this.isMarketplaceApproved = await this.ticked1155Service.isApprovedForAll(\n      this.nft.contract.address,\n      await this.walletService.getWalletAddress(),\n      environment.contractNftMarketplaceAddress,\n    )\n  }\n  \n  /**\n   * Function that approves marketplace contract for all tokens\n   *\n   */\n  approveMarketplace() {\n    this.ticked1155Service.setApprovalForAll(\n      this.nft.contract.address,\n      environment.contractNftMarketplaceAddress,\n      true\n    )\n  }\n\n  /**\n   * Function that revokes approval for all tokens for marketplace contract\n   *\n   */\n  revokeMarketplaceApproval() {\n    this.ticked1155Service.setApprovalForAll(\n      this.nft.contract.address,\n      environment.contractNftMarketplaceAddress,\n      true\n    )\n  }\n\n  /**\n   * Function that creates offer based on form input\n   *\n   */\n  async createOffer() {\n    this.nftMarketplaceService.insertOffer(\n      this.nft.contract.address,\n      { tokenId: this.nft.id.tokenId,\n        amount: this.amount,\n        price: EtherUnitConverter.etherToWei(this.price),\n        seller: await this.walletService.getWalletAddress() }\n    )\n  }\n\n  /**\n   * Function checks if marketplace is approved for token\n   *\n   */\n  async refresh() {\n    this.isMarketplaceApproved = await this.ticked1155Service.isApprovedForAll(\n      this.nft.contract.address,\n      await this.walletService.getWalletAddress(),\n      environment.contractNftMarketplaceAddress,\n    )\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Approve marketplace\n        \n        \n            Refresh    \n        \n    \n\n    \n        \n            \n                Revoke marketplace approval\n            \n        \n\n        \n            \n                Specify your offer:\n            \n            \n                \n                    \n                        Amount\n                        \n                    \n                \n                \n                    \n                        Price* (1 token)\n                        \n                          ETH\n                    \n                \n                \n                    *price contains 5% fee that will be charged for organizator\n                \n            \n            \n                \n                    CONFIRM\n                \n                \n                    warning\n                    \n                    If you confirm everyone will be able to buy your ticket \n                    \n                    You can cancel your offer in My offers\n                \n            \n\n        \n    \n\n\n\n    \n\n    \n                \n                    ./create-offer-dialog.component.scss\n                \n                .info-warn {\n    padding: 10px;\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Approve marketplace                            Refresh                                                        Revoke marketplace approval                                                        Specify your offer:                                                                                    Amount                                                                                                                        Price* (1 token)                                                  ETH                                                                        *price contains 5% fee that will be charged for organizator                                                                            CONFIRM                                                    warning                                        If you confirm everyone will be able to buy your ticket                                         You can cancel your offer in My offers                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOfferDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOfferDialogData.html":{"url":"interfaces/CreateOfferDialogData.html","title":"interface - CreateOfferDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOfferDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/dialogs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            nft\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nft:         NFT\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NFT\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NFT } from \"./nft.model\";\n\nexport interface AudienceDialogData {\n    image: string;\n}\n\nexport interface CreateOfferDialogData {\n    nft: NFT;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DepConcert.html":{"url":"interfaces/DepConcert.html","title":"interface - DepConcert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DepConcert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/concert.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contractAddress\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contractAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\n\nexport interface DepConcert {\n    contractAddress: string,\n    name: string\n}\n\nexport interface Sector {\n    name:string;\n    isNumerable: boolean; \n    seatStart: number;\n    seatStop: number;\n    mintedByOrg: boolean;\n    price: BigNumber;\n    availableTokenIds: BigNumber[];\n}\n\nexport interface Ticket {\n    sectorName: string;\n    seatNumber: number;\n    minted: boolean;\n    price: BigNumber;\n    sold: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EtherUnitConverter.html":{"url":"classes/EtherUnitConverter.html","title":"class - EtherUnitConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EtherUnitConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/EtherUnitConverter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                etherToWei\n                            \n                            \n                                    Static\n                                weiToEther\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        etherToWei\n                        \n                    \n                \n            \n            \n                \n                    \n                    etherToWei(amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/EtherUnitConverter.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BigNumber\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        weiToEther\n                        \n                    \n                \n            \n            \n                \n                    \n                    weiToEther(amount: BigNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/EtherUnitConverter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BigNumber, ethers } from \"ethers\"\n\nexport default class EtherUnitConverter {\n    \n    // static weiToGwei(amount: number): number {\n    //     return amount * 0.000000001\n    //     return amount.mul(0.000000001)\n    // }\n\n    static weiToEther(amount: BigNumber): string {\n        return ethers.utils.formatEther(amount)\n    }\n\n    // static gweiToWei(amount: BigNumber): BigNumber {\n    //     return amount.mul(1000000000)\n    // }\n\n    // static gweiToEther(amount: BigNumber): BigNumber {\n    //     return amount.mul(0.000000001)\n    // }\n\n    static etherToWei(amount: number): BigNumber {\n        return ethers.utils.parseUnits(amount.toString(), \"ether\")\n        //return amount.mul(1000000000000000000)\n    }\n\n    // static etherToGwei(amount: BigNumber): BigNumber {\n    //     return amount.mul(1000000000)\n    // }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterConcertsPipe.html":{"url":"pipes/FilterConcertsPipe.html","title":"pipe - FilterConcertsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterConcertsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter-concerts.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filterConcerts\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(concerts: DepConcert[], searchText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter-concerts.pipe.ts:17\n                \n            \n\n\n            \n                \n                    Function filters contract concerts based on phrase\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concerts\n                                    \n                                                DepConcert[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAll concerts\n\n\n                                    \n                                \n                                \n                                    searchText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPhrase to search for\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DepConcert[]\n\n                    \n                    \n                        Filtered concerts\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DepConcert } from 'src/types/concert.model';\n\n@Pipe({\n  name: 'filterConcerts',\n})\nexport class FilterConcertsPipe implements PipeTransform {\n\n  /**\n   * Function filters contract concerts based on phrase\n   * \n   * @param concerts - All concerts\n   * @param searchText - Phrase to search for\n   * @returns Filtered concerts\n   *\n   */\n  transform(concerts: DepConcert[], searchText: string): DepConcert[] {\n    if (!concerts) {\n      return [];\n    }\n    if (!searchText) {\n      return concerts;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return concerts.filter((concert) => {\n      return concert.name.toLocaleLowerCase().includes(searchText);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \nTickeDapp 2022 MF\n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                .footer {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'TickeDapp 2022 MF'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id.html":{"url":"interfaces/Id.html","title":"interface - Id","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                                \n                                        \n                                            tokenMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenMetadata:         TokenMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListedTicket.html":{"url":"interfaces/ListedTicket.html","title":"interface - ListedTicket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListedTicket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/marketplace.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            listing\n                                        \n                                \n                                \n                                        \n                                            ticket\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listing:         Listing\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Listing\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ticket:         Ticket\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ticket\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\nimport { Ticket } from \"./concert.model\";\n\nexport interface Listing {\n  tokenId: number;\n  amount: number;\n  price: BigNumber;\n  seller: string;\n}\n\nexport interface ListedTicket {\n  listing: Listing,\n  ticket: Ticket,\n}\n\nexport interface SellerOffer {\n  concertAddr: string;\n  sellerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Listing.html":{"url":"interfaces/Listing.html","title":"interface - Listing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Listing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/marketplace.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seller\n                                        \n                                \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:     BigNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seller\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seller:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\nimport { Ticket } from \"./concert.model\";\n\nexport interface Listing {\n  tokenId: number;\n  amount: number;\n  price: BigNumber;\n  seller: string;\n}\n\nexport interface ListedTicket {\n  listing: Listing,\n  ticket: Ticket,\n}\n\nexport interface SellerOffer {\n  concertAddr: string;\n  sellerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarketplaceComponent.html":{"url":"components/MarketplaceComponent.html","title":"component - MarketplaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarketplaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/marketplace-comp/marketplace.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-marketplace\n            \n\n            \n                styleUrls\n                ./marketplace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./marketplace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/marketplace-comp/marketplace.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-marketplace',\n  templateUrl: './marketplace.component.html',\n  styleUrls: ['./marketplace.component.scss']\n})\nexport class MarketplaceComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n    \n                \n                    ./marketplace.component.scss\n                \n                .link {\n    margin: auto;\n}\n\n.nav-marketplace {\n    border-radius: 25px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarketplaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarketplaceModule.html":{"url":"modules/MarketplaceModule.html","title":"module - MarketplaceModule","body":"\n                   \n\n\n\n\n    Modules\n    MarketplaceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MarketplaceModule\n\n\n\ncluster_MarketplaceModule_imports\n\n\n\ncluster_MarketplaceModule_declarations\n\n\n\n\nAudienceLayoutComponent\n\nAudienceLayoutComponent\n\n\n\nMarketplaceModule\n\nMarketplaceModule\n\nMarketplaceModule -->\n\nAudienceLayoutComponent->MarketplaceModule\n\n\n\n\n\nConcertSectorsComponent\n\nConcertSectorsComponent\n\nMarketplaceModule -->\n\nConcertSectorsComponent->MarketplaceModule\n\n\n\n\n\nConcertSellComponent\n\nConcertSellComponent\n\nMarketplaceModule -->\n\nConcertSellComponent->MarketplaceModule\n\n\n\n\n\nMarketplaceComponent\n\nMarketplaceComponent\n\nMarketplaceModule -->\n\nMarketplaceComponent->MarketplaceModule\n\n\n\n\n\nReselledTicketComponent\n\nReselledTicketComponent\n\nMarketplaceModule -->\n\nReselledTicketComponent->MarketplaceModule\n\n\n\n\n\nStandardTicketComponent\n\nStandardTicketComponent\n\nMarketplaceModule -->\n\nStandardTicketComponent->MarketplaceModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nMarketplaceModule -->\n\nAppRoutingModule->MarketplaceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/marketplace/marketplace.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AudienceLayoutComponent\n                        \n                        \n                            ConcertSectorsComponent\n                        \n                        \n                            ConcertSellComponent\n                        \n                        \n                            MarketplaceComponent\n                        \n                        \n                            ReselledTicketComponent\n                        \n                        \n                            StandardTicketComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarketplaceComponent } from './marketplace-comp/marketplace.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ConcertSellComponent } from './concert-sell/concert-sell.component';\nimport { ConcertSectorsComponent } from './concert-sectors/concert-sectors.component';\nimport { SwiperModule } from \"swiper/angular\";\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AudienceLayoutComponent } from './audience-layout/audience-layout.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { StandardTicketComponent } from './standard-ticket/standard-ticket.component';\nimport { ReselledTicketComponent } from './reselled-ticket/reselled-ticket.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    MarketplaceComponent,\n    ConcertSellComponent,\n    ConcertSectorsComponent,\n    AudienceLayoutComponent,\n    StandardTicketComponent,\n    ReselledTicketComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatInputModule,\n    MatIconModule,\n    RouterModule,\n    SwiperModule,\n    FormsModule,\n    PipesModule\n  ]\n})\nexport class MarketplaceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         Attribute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Attribute[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyConcertsComponent.html":{"url":"components/MyConcertsComponent.html","title":"component - MyConcertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyConcertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/my-concerts/my-concerts.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-concerts\n            \n\n            \n                styleUrls\n                ./my-concerts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-concerts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deployedConcerts\n                            \n                            \n                                    Public\n                                newDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSectors\n                            \n                            \n                                changeDate\n                            \n                            \n                                    Public\n                                    Async\n                                mintTickets\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, walletService: WalletService, ticked1155Service: Ticked1155Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSectors\n                        \n                    \n                \n            \n            \n                \naddSectors(sectors: string[], address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:45\n                \n            \n\n\n            \n                \n                    Add sectors for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlist of new sectors\n\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(concertAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:65\n                \n            \n\n\n            \n                \n                    Changes date of concert for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        mintTickets\n                        \n                    \n                \n            \n            \n                \n                    \n                    mintTickets(contractAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:34\n                \n            \n\n\n            \n                \n                    Fires transaction that mint tickets for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    contractAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withdraw\n                        \n                    \n                \n            \n            \n                \nwithdraw(concertAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:55\n                \n            \n\n\n            \n                \n                    Withdraws money for specified contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deployedConcerts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DepConcert[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/my-concerts/my-concerts.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { DepConcert } from 'src/types/concert.model';\n\n@Component({\n  selector: 'app-my-concerts',\n  templateUrl: './my-concerts.component.html',\n  styleUrls: ['./my-concerts.component.scss']\n})\nexport class MyConcertsComponent implements OnInit {\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private walletService: WalletService,\n    private ticked1155Service: Ticked1155Service,\n  ) { }\n\n  public deployedConcerts: DepConcert[] = [];\n  public newDate!: Date;\n\n  async ngOnInit() {\n    this.deployedConcerts = await this.tickedFactoryService.getDepContracts(\n      await this.walletService.getWalletAddress() )\n  }\n\n  /**\n   * Fires transaction that mint tickets for specified contract\n   *\n   * @param contractAddress - Address of concert contract \n   * \n   */\n  public async mintTickets(contractAddress: string) {\n    this.ticked1155Service.createAndMintTickets(contractAddress)\n  }\n\n  /**\n   * Add sectors for specified contract\n   *\n   * @param address - Address of concert contract\n   * @param sectors - list of new sectors\n   * \n   */\n  addSectors(sectors: string[], address: string) {\n    this.ticked1155Service.addSectors(address, sectors)\n  }\n\n   /**\n   * Withdraws money for specified contract\n   *\n   * @param contractAddress - Address of concert contract \n   * \n   */\n  withdraw(concertAddress: string) {\n    this.ticked1155Service.withdraw(concertAddress);\n  }\n\n   /**\n   * Changes date of concert for specified contract\n   *\n   * @param contractAddress - Address of concert contract\n   *  \n   */\n  changeDate(concertAddress: string) {\n    if(this.newDate != undefined) {\n      const newDateUnix = (new Date(this.newDate!)).getTime() / 1000;\n      this.ticked1155Service.setDate(concertAddress, newDateUnix);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        Here you can find your concerts:\n    \n\n    \n        \n        {{concert.name}}\n        {{concert.contractAddress}}\n        \n        \n            Withdraw\n        \n        \n            \n             Mint tickets and publish them! \n            \n        \n            You can still add some sectors, then you also have to mint them!\n        \n            \n        \n            Change event date:\n        \n        \n            \n                New date\n                \n            \n            \n                Confirm new date\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./my-concerts.component.scss\n                \n                .concert {\n    padding: 10px;\n    margin: 10px;\n    background-color: rgb(250, 250, 250);\n}\n\n.concert-content {\n    padding: 10px;\n}\n.btn-withdraw {\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 20px;\n}\n\n.btn-new-date {\n    margin-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Here you can find your concerts:                        {{concert.name}}        {{concert.contractAddress}}                            Withdraw                                         Mint tickets and publish them!                                 You can still add some sectors, then you also have to mint them!                                        Change event date:                                            New date                                                        Confirm new date                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyConcertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyNftComponent.html":{"url":"components/MyNftComponent.html","title":"component - MyNftComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyNftComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/my-nft/my-nft.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-nft\n            \n\n            \n                styleUrls\n                ./my-nft.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-nft.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMarketplaceApproved\n                            \n                            \n                                nft$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                sellTicket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alchemyApiService: AlchemyApiService, matDialog: MatDialog, ticked1155Service: Ticked1155Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/my-nft/my-nft.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alchemyApiService\n                                                  \n                                                        \n                                                                        AlchemyApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-nft/my-nft.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellTicket\n                        \n                    \n                \n            \n            \n                \nsellTicket(_nft: NFT)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-nft/my-nft.component.ts:33\n                \n            \n\n\n            \n                \n                    Function opens dialog for selling NFT\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _nft\n                                    \n                                                NFT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMarketplaceApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-nft/my-nft.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nft$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-nft/my-nft.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, tap } from 'rxjs';\nimport { AlchemyApiService } from 'src/app/services/alchemy-api.service';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { NFT, OwnedNFTs } from 'src/types/nft.model';\nimport { CreateOfferDialogComponent } from '../create-offer-dialog/create-offer-dialog.component';\n\n@Component({\n  selector: 'app-my-nft',\n  templateUrl: './my-nft.component.html',\n  styleUrls: ['./my-nft.component.scss']\n})\nexport class MyNftComponent implements OnInit {\n\n  nft$: Observable = new Observable();\n  public isMarketplaceApproved: boolean = false;\n\n  constructor(\n    private alchemyApiService: AlchemyApiService,\n    private matDialog: MatDialog,\n    private ticked1155Service: Ticked1155Service,\n  ) { }\n\n  async ngOnInit() {\n    this.nft$ = await (await this.alchemyApiService.getUserNfts())\n  }\n\n  /**\n   * Function opens dialog for selling NFT \n   * \n   */\n  sellTicket(_nft: NFT) {\n    this.matDialog.open(CreateOfferDialogComponent, {\n      maxHeight: '80%',\n      maxWidth: '80%',\n      data: { nft: _nft }\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n         You own: {{nfts.ownedNfts.length}} NFT's. \n         Your NFT's:\n        \n            \n\n                \n                    \n                        \n                             {{ nft.metadata.name }} \n                             {{ nft.metadata.description }} \n                        \n                        \n                            {{ nft.contract.address }}\n                        \n                    \n                    \n                         Token id: {{ nft.id.tokenId }} \n                         Token type:  {{ nft.id.tokenMetadata.tokenType }}\n                         Balance: {{nft.balance}} \n                        \n                             Concert informations: \n                            \n                                \n                                     Date: {{ attr.value * 1000 | date:'medium' }}\n                                \n                                \n                                     Sector: {{ attr.value }}\n                                \n                                \n                                    \n                                        Not numerated\n                                    \n                                     Seat: {{ attr.value }}\n                                    \n                                    \n                        \n                         \n                            \n                                Create offer\n                               \n                        \n                    \n                \n                        \n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./my-nft.component.scss\n                \n                .nft-container {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.nft {\n    padding: 10px;\n    margin: 10px;\n    background-color: rgb(250, 250, 250);\n}\n\n.nft:hover {\n    transform: scale(1.02);\n}\n.concert-info {\n    padding: 10px;\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             You own: {{nfts.ownedNfts.length}} NFT\\'s.          Your NFT\\'s:                                                                                                             {{ nft.metadata.name }}                              {{ nft.metadata.description }}                                                                             {{ nft.contract.address }}                                                                                         Token id: {{ nft.id.tokenId }}                          Token type:  {{ nft.id.tokenMetadata.tokenType }}                         Balance: {{nft.balance}}                                                      Concert informations:                                                                                                  Date: {{ attr.value * 1000 | date:\\'medium\\' }}                                                                                                     Sector: {{ attr.value }}                                                                                                                                            Not numerated                                                                         Seat: {{ attr.value }}                                                                                                                                                                                     Create offer                                                                                                                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyNftComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyOffersComponent.html":{"url":"components/MyOffersComponent.html","title":"component - MyOffersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyOffersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/my-offers/my-offers.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-offers\n            \n\n            \n                styleUrls\n                ./my-offers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-offers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Public\n                                openUpdateForm\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Private\n                                sellerOffers\n                            \n                            \n                                    Public\n                                sellerTicketsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteOffer\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openEditForm\n                            \n                            \n                                updateOffer\n                            \n                            \n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nftMarketplaceService: NftMarketplaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nftMarketplaceService\n                                                  \n                                                        \n                                                                        NftMarketplaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOffer\n                        \n                    \n                \n            \n            \n                \ndeleteOffer(concertAddr: string, tokenId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:80\n                \n            \n\n\n            \n                \n                    Function deletes offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of Token to delete\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditForm\n                        \n                    \n                \n            \n            \n                \nopenEditForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:52\n                \n            \n\n\n            \n                \n                    Function opens form for editing offer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOffer\n                        \n                    \n                \n            \n            \n                \nupdateOffer(concertAddr: string, currentListing: Listing)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:63\n                \n            \n\n\n            \n                \n                    Function updates offer based on input forms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    currentListing\n                                    \n                                                Listing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent offer\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdraw()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/my-offers/my-offers.component.ts:88\n                \n            \n\n\n            \n                \n                    Withdraws money for owner\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BigNumber\n\n                    \n                \n                \n                    \n                        Default value : BigNumber.from(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openUpdateForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sellerOffers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SellerOffer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sellerTicketsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/my-offers/my-offers.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BigNumber } from 'ethers';\nimport { NftMarketplaceService } from 'src/app/services/smartcontracts/nft-marketplace.service';\nimport EtherUnitConverter from 'src/app/utils/EtherUnitConverter';\nimport { ListedTicket, Listing, SellerOffer } from 'src/types/marketplace.model';\n\n@Component({\n  selector: 'app-my-offers',\n  templateUrl: './my-offers.component.html',\n  styleUrls: ['./my-offers.component.scss']\n})\nexport class MyOffersComponent implements OnInit {\n\n  public balance: BigNumber = BigNumber.from(0);\n  private sellerOffers: SellerOffer[] = [];\n  // concert address -> offers for this concert\n  public sellerTicketsMap: Map = new Map;\n\n  public openUpdateForm = false;\n  public amount = 1;\n  public price!: number;\n\n  constructor(\n    private nftMarketplaceService: NftMarketplaceService\n  ) { }\n\n  async ngOnInit() {\n    this.balance = await this.nftMarketplaceService.getBalance();\n    this.sellerOffers = await this.nftMarketplaceService.getOffersBySeller();\n\n    for(let offer of this.sellerOffers){\n      const ticket: ListedTicket = await this.nftMarketplaceService\n                            .getListedTicket(offer.concertAddr, offer.sellerId)\n      // if someone delete his offer each value in map is set to 0\n      if(ticket.listing.seller != \"0x0000000000000000000000000000000000000000\"){\n        if(this.sellerTicketsMap.has(offer.concertAddr)){\n          let tickets = this.sellerTicketsMap.get(offer.concertAddr)\n          tickets?.push(ticket)\n          this.sellerTicketsMap.set(offer.concertAddr, tickets!)\n        } else {\n          let tickets: ListedTicket[] = [ticket]\n          this.sellerTicketsMap.set(offer.concertAddr, tickets)\n        }\n      }\n    }\n  }\n\n  /**\n   * Function opens form for editing offer \n   * \n   */\n  openEditForm() {\n    this.openUpdateForm = true;\n  }\n  \n  /**\n   * Function updates offer based on input forms\n   *\n   * @param concertAddr - Address of concert contract \n   * @param currentListing - Current offer \n   * \n   */\n  updateOffer(concertAddr: string, currentListing: Listing) {\n    const newListing = {\n      tokenId: currentListing.tokenId,\n      amount: this.amount,\n      price: EtherUnitConverter.etherToWei(this.price),\n      seller: currentListing.seller\n    }\n    this.nftMarketplaceService.updateOffer(concertAddr, newListing)\n  }\n\n  /**\n   * Function deletes offer \n   *\n   * @param concertAddr - Address of concert contract \n   * @param tokenId - ID of Token to delete \n   * \n   */\n  deleteOffer(concertAddr: string, tokenId: number) {\n    this.nftMarketplaceService.deleteOffer(concertAddr, tokenId)\n  }\n\n  /**\n   * Withdraws money for owner\n   *\n   */\n  async withdraw() {\n    const transaction = await this.nftMarketplaceService.withdraw();\n    this.balance = BigNumber.from(0);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        You own: {{ balance | weiToEth }} ETH on martketplace \n        \n        Withdraw ETH\n        \n    \n     Your offers: \n    \n\n        \n            Your ticket offers for concert: {{ sellerTickets.key }}\n        \n\n        \n            \n        \n                \n                    \n                        \n                            \n                                Sector: {{ listElem.ticket.sectorName }} \n                            \n                            \n                                Sector without numerable seats\n                            \n                        \n                        \n                            \n                                Price: {{ listElem.listing.price | weiToEth }} ETH\n                            \n                            \n                                Minted / Not unique\n                            \n                            \n                                Reseller:\n                            \n                            \n                                {{ listElem.listing.seller }}\n                            \n                            \n                                Amount: {{ listElem.listing.amount }}\n                            \n                            \n                                \n                                    EDIT \n                                \n                                \n                                    DELETE\n                                \n                            \n\n                            \n                                \n                                    \n                                        Amount\n                                        \n                                    \n                                \n                                \n                                    \n                                        Price* (1 token)\n                                        \n                                          ETH\n                                    \n                                    \n                                        *price contains 5% fee that will be charged for organizator\n                                    \n                                \n                                \n                                \n                                    Update offer \n                                \n                            \n\n                        \n        \n                    \n                 \n                \n                        \n                    \n                        \n                            \n                                Seat: {{ listElem.ticket.seatNumber }} \n                            \n                            \n                                Sector: {{ listElem.ticket.sectorName }}\n                            \n                        \n                        \n                            \n                                Price: {{ listElem.listing.price | weiToEth }} ETH\n                            \n                            \n                                Minted / Unique\n                            \n                            \n                                Reseller:\n                            \n                            \n                                {{ listElem.listing.seller }}\n                            \n        \n                            \n                                \n                                    EDIT \n                                \n                                \n                                    DELETE\n                                \n                            \n                            \n                                \n                                    \n                                        Price* (1 token)\n                                        \n                                          ETH\n                                    \n                                    \n                                        *price contains 5% fee that will be charged for organizator\n                                    \n                                \n                                \n                                \n                                    Update offer \n                                \n                            \n                        \n                    \n                \n        \n            \n         \n\n    \n\n\n\n    \n\n    \n                \n                    ./my-offers.component.scss\n                \n                .tickets {\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n}\n\n.ticket {\n  margin: 10px;\n}\n\n.ticket:hover {\n    transform: scale(1.01);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            You own: {{ balance | weiToEth }} ETH on martketplace                 Withdraw ETH                 Your offers:                         Your ticket offers for concert: {{ sellerTickets.key }}                                                                                                                                                            Sector: {{ listElem.ticket.sectorName }}                                                                                         Sector without numerable seats                                                                                                                                        Price: {{ listElem.listing.price | weiToEth }} ETH                                                                                        Minted / Not unique                                                                                        Reseller:                                                                                        {{ listElem.listing.seller }}                                                                                        Amount: {{ listElem.listing.amount }}                                                                                                                            EDIT                                                                                                     DELETE                                                                                                                                                                                                    Amount                                                                                                                                                                                                                        Price* (1 token)                                                                                  ETH                                                                                                                *price contains 5% fee that will be charged for organizator                                                                                                                                                                        Update offer                                                                                                                                                                                                                                                                                  Seat: {{ listElem.ticket.seatNumber }}                                                                                         Sector: {{ listElem.ticket.sectorName }}                                                                                                                                        Price: {{ listElem.listing.price | weiToEth }} ETH                                                                                        Minted / Unique                                                                                        Reseller:                                                                                        {{ listElem.listing.seller }}                                                                                                                                    EDIT                                                                                                     DELETE                                                                                                                                                                                                    Price* (1 token)                                                                                  ETH                                                                                                                *price contains 5% fee that will be charged for organizator                                                                                                                                                                        Update offer                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyOffersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NFT.html":{"url":"interfaces/NFT.html","title":"interface - NFT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NFT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            contract\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            tokenUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contract:         Contract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Contract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenUri:         TokenUri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenUri\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationBarComponent.html":{"url":"components/NavigationBarComponent.html","title":"component - NavigationBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation-bar/navigation-bar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation-bar\n            \n\n            \n                styleUrls\n                ./navigation-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connectWallet\n                            \n                            \n                                    Async\n                                goToAdminPanel\n                            \n                            \n                                    Async\n                                goToConcertForm\n                            \n                            \n                                goToMarketplace\n                            \n                            \n                                    Async\n                                goToMyConcerts\n                            \n                            \n                                goToMyNfts\n                            \n                            \n                                goToMyOffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService, tickedFactoryService: TickedFactoryService, router: Router, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navigation-bar/navigation-bar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connectWallet\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:25\n                \n            \n\n\n            \n                \n                    Function that connects wallet\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        goToAdminPanel\n                        \n                    \n                \n            \n            \n                \n                    \n                    goToAdminPanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:72\n                \n            \n\n\n            \n                \n                    Function that redirects to admin panel page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        goToConcertForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    goToConcertForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:36\n                \n            \n\n\n            \n                \n                    Function that redirects to concert-form page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMarketplace\n                        \n                    \n                \n            \n            \n                \ngoToMarketplace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:89\n                \n            \n\n\n            \n                \n                    Function that redirects to marketplace page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        goToMyConcerts\n                        \n                    \n                \n            \n            \n                \n                    \n                    goToMyConcerts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:54\n                \n            \n\n\n            \n                \n                    Function that redirects to my-concerts page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMyNfts\n                        \n                    \n                \n            \n            \n                \ngoToMyNfts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:98\n                \n            \n\n\n            \n                \n                    Function that redirects to my-nfts page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMyOffers\n                        \n                    \n                \n            \n            \n                \ngoToMyOffers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navigation-bar/navigation-bar.component.ts:107\n                \n            \n\n\n            \n                \n                    Function that redirects to my-offers page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\nimport { WalletService } from 'src/app/services/wallet.service';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.scss']\n})\nexport class NavigationBarComponent {\n\n  constructor(\n    private walletService: WalletService,\n    private tickedFactoryService: TickedFactoryService,\n    private router: Router,\n    private snackbarService: SnackbarService,\n  ) { }\n\n  /**\n   * Function that connects wallet\n   *\n   */\n  async connectWallet() {\n    let isLogged = await this.walletService.logIn();\n    if(isLogged){\n      this.snackbarService.info(\"You are already connected\")\n    }\n  }\n\n  /**\n   * Function that redirects to concert-form page\n   *\n   */\n  async goToConcertForm() {\n    const authorization: boolean = await this.tickedFactoryService.authorizeAccess(\n      await this.walletService.getWalletAddress()\n      );\n\n    if(authorization) {\n      const navigationDetails: string[] = ['/create-concert'];\n      this.router.navigate(navigationDetails);\n    } else {\n      this.snackbarService.error(\"Access not authorized!\")\n      return;\n    }\n  }\n\n  /**\n   * Function that redirects to my-concerts page\n   *\n   */\n  async goToMyConcerts() {\n    const authorization: boolean = await this.tickedFactoryService.authorizeAccess(\n      await this.walletService.getWalletAddress()\n      );\n\n    if(authorization) {\n      const navigationDetails: string[] = ['/my-concerts'];\n      this.router.navigate(navigationDetails);\n    } else {\n      this.snackbarService.error(\"Access not authorized!\")\n      return;\n    }\n  }\n\n  /**\n   * Function that redirects to admin panel page\n   *\n   */\n  async goToAdminPanel() {\n    const isOwner: boolean = await this.tickedFactoryService.validateOwner(\n      await this.walletService.getWalletAddress()\n    )\n    \n    if(isOwner){\n      const navigationDetails: string[] = ['/whitelist'];\n      this.router.navigate(navigationDetails);\n    } else {\n      this.snackbarService.error(\"Access not authorized!\")\n    }\n  }\n\n  /**\n   * Function that redirects to marketplace page\n   *\n   */\n  goToMarketplace() {\n    const navigationDetails: string[] = ['/marketplace/sell'];\n    this.router.navigate(navigationDetails);\n  }\n\n  /**\n   * Function that redirects to my-nfts page\n   *\n   */\n  goToMyNfts() {\n    const navigationDetails: string[] = ['/my-nft'];\n    this.router.navigate(navigationDetails);\n  }\n\n  /**\n   * Function that redirects to my-offers page\n   *\n   */\n  goToMyOffers() {\n    const navigationDetails: string[] = ['/my-offers'];\n    this.router.navigate(navigationDetails);\n  }\n\n}\n\n    \n\n    \n        \n    \n        perm_data_setting\n        Concert Management\n    \n\n    \n        \n            library_add\n            Create Concert\n        \n            event\n            My Concerts\n            \n            lock\n            Admin Panel\n    \n\n    \n        home\n        tickeD MARKETPLACE\n    \n\n    \n        My Account\n        account_circle\n    \n\n    \n        \n        account_balance_wallet\n        Connect wallet\n        \n         local_offer\n        My NFTs        \n        \n        shopping_cart\n        My Offers\n    \n\n\n    \n\n    \n                \n                    ./navigation-bar.component.scss\n                \n                .btn-log-in {\n    float: right;\n}\n\n.nav-container {\n    display: flex;\n    gap: 10px;\n    position: fixed;\n    top: 0px;\n    width: 100%;\n    z-index: 9990;\n}\n\n.btn-marketplace {\n    margin: auto;\n    flex-grow: 3;\n    background-color: #683ab72e;\n    position: sticky;\n}\n    \n.btn-marketplace:hover {\n    transform: scale(1.02);\n    background-color: #673AB7;\n    color: white;\n    position: sticky;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            perm_data_setting        Concert Management                            library_add            Create Concert                    event            My Concerts                        lock            Admin Panel                home        tickeD MARKETPLACE                My Account        account_circle                        account_balance_wallet        Connect wallet                 local_offer        My NFTs                        shopping_cart        My Offers    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NftMarketplaceService.html":{"url":"injectables/NftMarketplaceService.html","title":"injectable - NftMarketplaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NftMarketplaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smartcontracts/nft-marketplace.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                buyTicket\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOffer\n                            \n                            \n                                    Public\n                                    Async\n                                getBalance\n                            \n                            \n                                    Private\n                                    Static\n                                    Async\n                                getContract\n                            \n                            \n                                    Public\n                                    Async\n                                getListedTicket\n                            \n                            \n                                    Public\n                                    Async\n                                getOffersBySeller\n                            \n                            \n                                    Public\n                                    Async\n                                getSellerIds\n                            \n                            \n                                    Public\n                                    Async\n                                insertOffer\n                            \n                            \n                                    Public\n                                    Async\n                                updateOffer\n                            \n                            \n                                    Public\n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        buyTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyTicket(concertAddr: string, owner: string, tokenId: number, price: BigNumber, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:41\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to buy ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nOwner of smartcontract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \namount of tokens to buy (by default = 1)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOffer(concertAddr: string, tokenId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:60\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to delete ticket offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of token to delete\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        getContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(bySigner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    bySigner\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getListedTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    getListedTicket(concertAddr: string, sellerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sellerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getOffersBySeller\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOffersBySeller()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSellerIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSellerIds(concertAddr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        insertOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOffer(concertAddr: string, listing: Listing)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:84\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to insert ticket offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    listing\n                                    \n                                                Listing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew offer details\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOffer(concertAddr: string, listing: Listing)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:72\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to update ticket offer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    concertAddr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    listing\n                                    \n                                                Listing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew offer details\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdraw()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/nft-marketplace.service.ts:22\n                \n            \n\n\n            \n                \n                    Withdraws money for currently logged wallet\n\n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BigNumber, ethers } from 'ethers';\nimport { environment } from 'src/environments/environment';\nimport { ListedTicket, Listing, SellerOffer } from 'src/types/marketplace.model';\n\nimport nftMarketplace from '../../../../artifacts/contracts/nftMarketplace.sol/nftMarketplace.json'\nimport { WalletService } from '../wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NftMarketplaceService {\n\n  constructor(\n    private walletService: WalletService,\n  ) { }\n\n  /**\n   * Withdraws money for currently logged wallet\n   * \n   */\n  public async withdraw(){\n    const contract = await NftMarketplaceService.getContract(true)\n    try {\n      return await contract['withdraw'](this.walletService.getWalletAddress())\n    } catch(e: any) {\n      console.log(e.error.message )\n    }\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to buy ticket\n   *\n   * @param concertAddr - Address of concert contract \n   * @param owner - Owner of smartcontract\n   * @param tokenId - ID of token to buy \n   * @param price - ID of token to buy \n   * @param amount - amount of tokens to buy (by default = 1)\n   * \n   */\n  public async buyTicket(\n    concertAddr: string, \n    owner: string, \n    tokenId: number,\n    price: BigNumber,\n    amount = 1) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['buyTicket'](concertAddr, owner, tokenId, amount, {\n      value: ethers.utils.parseUnits((price.mul(amount)).toString(), \"wei\")\n    })\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to delete ticket offer\n   *\n   * @param concertAddr - Address of concert contract \n   * @param tokenId - ID of token to delete \n   * \n   */\n  public async deleteOffer(concertAddr: string, tokenId: number) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['deleteOffer'](concertAddr, tokenId)\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to update ticket offer\n   *\n   * @param concertAddr - Address of concert contract \n   * @param listing - New offer details\n   * \n   */\n  public async updateOffer(concertAddr: string, listing: Listing) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['updateOffer'](concertAddr, listing)\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to insert ticket offer\n   *\n   * @param concertAddr - Address of concert contract \n   * @param listing - New offer details\n   * \n   */\n  public async insertOffer(concertAddr: string, listing: Listing) {\n    const contract = await NftMarketplaceService.getContract(true)\n    contract['insertOffer'](concertAddr, listing)\n  }\n\n  public async getSellerIds(concertAddr: string): Promise{\n    const contract = await NftMarketplaceService.getContract()\n    return contract['getSellerIds'](concertAddr)\n  }\n  \n  public async getOffersBySeller(): Promise{\n    const contract = await NftMarketplaceService.getContract()\n    return contract['getOffersBySeller'](\n      await this.walletService.getWalletAddress()\n    )\n  }\n\n  public async getListedTicket(concertAddr: string, sellerId: string): Promise {\n    const contract = await NftMarketplaceService.getContract()\n    return contract['getListedTicket'](concertAddr, sellerId)\n  }\n\n  public async getBalance(): Promise{\n    const contract = await NftMarketplaceService.getContract()\n    return contract['balance'](\n      await this.walletService.getWalletAddress()\n    )\n  }\n\n  private static async getContract(bySigner= false) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    return new ethers.Contract(\n      environment.contractNftMarketplaceAddress,\n      nftMarketplace.abi,\n      bySigner ? signer : provider\n    )\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnedNFTs.html":{"url":"interfaces/OwnedNFTs.html","title":"interface - OwnedNFTs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OwnedNFTs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ownedNfts\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ownedNfts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownedNfts:         NFT[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NFT[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n     404 \n     Page not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                h2, h3 {\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     404      Page not found!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nFilterConcertsPipe\n\nFilterConcertsPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nFilterConcertsPipe->PipesModule\n\n\n\n\n\nWeiToEthPipe\n\nWeiToEthPipe\n\nPipesModule -->\n\nWeiToEthPipe->PipesModule\n\n\n\n\n\nFilterConcertsPipe \n\nFilterConcertsPipe \n\nFilterConcertsPipe  -->\n\nPipesModule->FilterConcertsPipe \n\n\n\n\n\nWeiToEthPipe \n\nWeiToEthPipe \n\nWeiToEthPipe  -->\n\nPipesModule->WeiToEthPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterConcertsPipe\n                        \n                        \n                            WeiToEthPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilterConcertsPipe\n                        \n                        \n                            WeiToEthPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WeiToEthPipe } from './wei-to-eth.pipe';\nimport { FilterConcertsPipe } from './filter-concerts.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    WeiToEthPipe,\n    FilterConcertsPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    WeiToEthPipe,\n    FilterConcertsPipe\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReselledTicketComponent.html":{"url":"components/ReselledTicketComponent.html","title":"component - ReselledTicketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReselledTicketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reselled-ticket\n            \n\n            \n                styleUrls\n                ./reselled-ticket.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reselled-ticket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                    Public\n                                listing\n                            \n                            \n                                    Private\n                                sellerIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyTicket\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                concertAddress\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nftMarketplaceService: NftMarketplaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nftMarketplaceService\n                                                  \n                                                        \n                                                                        NftMarketplaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        concertAddress\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyTicket\n                        \n                    \n                \n            \n            \n                \nbuyTicket(owner: string, tokenId: number, price: BigNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:44\n                \n            \n\n\n            \n                \n                    Function that fires transaction for buying ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of token owner\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nToken ID\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nToken price\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listing\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ListedTicket[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sellerIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BigNumber } from 'ethers';\nimport { NftMarketplaceService } from 'src/app/services/smartcontracts/nft-marketplace.service';\nimport { ListedTicket } from 'src/types/marketplace.model';\n\n@Component({\n  selector: 'app-reselled-ticket',\n  templateUrl: './reselled-ticket.component.html',\n  styleUrls: ['./reselled-ticket.component.scss']\n})\nexport class ReselledTicketComponent implements OnInit {\n\n  @Input() concertAddress!: string;\n\n  private sellerIds: string[] = []; \n  public listing: ListedTicket[] = [];\n  amount = 1;\n\n  constructor(\n    private nftMarketplaceService: NftMarketplaceService,\n  ) { }\n\n  async ngOnInit() {\n    this.sellerIds = await this.nftMarketplaceService.getSellerIds(this.concertAddress);\n    \n    for(let sellerId of this.sellerIds) {\n      const ticket: ListedTicket = await this.nftMarketplaceService\n                                          .getListedTicket(this.concertAddress, sellerId)\n      // if someone delete his offer each value in map is set to 0\n      if(ticket.listing.seller != \"0x0000000000000000000000000000000000000000\"){\n        this.listing.push(ticket);\n      }\n    }\n  }\n\n  /**\n   * Function that fires transaction for buying ticket \n   *\n   * @param owner - Address of token owner \n   * @param tokenId - Token ID \n   * @param price - Token price\n   * \n   */\n  buyTicket(owner: string, tokenId: number, price: BigNumber){\n    this.nftMarketplaceService.buyTicket(\n                                this.concertAddress,\n                                owner,\n                                tokenId,\n                                price,\n                                this.amount)\n  }\n\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                \n                    \n                        Sector: {{ listElem.ticket.sectorName }} \n                    \n                    \n                        Sector without numerable seats\n                    \n                \n                \n                    \n                        Price: {{ listElem.listing.price | weiToEth }} ETH\n                    \n                    \n                        Minted / Not unique\n                    \n                    \n                        Reseller:\n                    \n                    \n                        {{ listElem.listing.seller }}\n                    \n                    \n                        Amount: {{ listElem.listing.amount }}\n                    \n                    \n                        \n                            Number of tickets\n                            \n                        \n\n                        \n                            BUY\n                        \n                    \n                \n\n            \n         \n        \n                \n            \n                \n                    \n                        Seat: {{ listElem.ticket.seatNumber }} \n                    \n                    \n                        Sector: {{ listElem.ticket.sectorName }}\n                    \n                \n                \n                    \n                        Price: {{ listElem.listing.price | weiToEth }} ETH\n                    \n                    \n                        Minted / Unique\n                    \n                    \n                        Reseller:\n                    \n                    \n                        {{ listElem.listing.seller }}\n                    \n\n                    \n                        \n                            BUY\n                        \n                    \n                \n            \n        \n\n    \n \n    \n\n    \n                \n                    ./reselled-ticket.component.scss\n                \n                .tickets {\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n}\n\n.ticket {\n  margin: 10px;\n}\n\n.ticket:hover {\n    transform: scale(1.02);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Sector: {{ listElem.ticket.sectorName }}                                                                 Sector without numerable seats                                                                                                Price: {{ listElem.listing.price | weiToEth }} ETH                                                                Minted / Not unique                                                                Reseller:                                                                {{ listElem.listing.seller }}                                                                Amount: {{ listElem.listing.amount }}                                                                                            Number of tickets                                                                                                        BUY                                                                                                                                                                                 Seat: {{ listElem.ticket.seatNumber }}                                                                 Sector: {{ listElem.ticket.sectorName }}                                                                                                Price: {{ listElem.listing.price | weiToEth }} ETH                                                                Minted / Unique                                                                Reseller:                                                                {{ listElem.listing.seller }}                                                                                            BUY                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReselledTicketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sector.html":{"url":"interfaces/Sector.html","title":"interface - Sector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/concert.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableTokenIds\n                                        \n                                \n                                \n                                        \n                                            isNumerable\n                                        \n                                \n                                \n                                        \n                                            mintedByOrg\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seatStart\n                                        \n                                \n                                \n                                        \n                                            seatStop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableTokenIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableTokenIds:     BigNumber[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNumerable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNumerable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mintedByOrg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mintedByOrg:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:     BigNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seatStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seatStart:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seatStop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seatStop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\n\nexport interface DepConcert {\n    contractAddress: string,\n    name: string\n}\n\nexport interface Sector {\n    name:string;\n    isNumerable: boolean; \n    seatStart: number;\n    seatStop: number;\n    mintedByOrg: boolean;\n    price: BigNumber;\n    availableTokenIds: BigNumber[];\n}\n\nexport interface Ticket {\n    sectorName: string;\n    seatNumber: number;\n    minted: boolean;\n    price: BigNumber;\n    sold: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SectorComponent.html":{"url":"components/SectorComponent.html","title":"component - SectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/sector/sector.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sector\n            \n\n            \n                styleUrls\n                ./sector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSector\n                            \n                            \n                                confirmSectors\n                            \n                            \n                                deleteSector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                createConcertForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sectorsEvent\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sectors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/sector/sector.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        createConcertForm\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/concert-management/sector/sector.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sectorsEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/concert-management/sector/sector.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSector\n                        \n                    \n                \n            \n            \n                \naddSector()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/sector/sector.component.ts:32\n                \n            \n\n\n            \n                \n                    Function that adds new forms for sectors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmSectors\n                        \n                    \n                \n            \n            \n                \nconfirmSectors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/sector/sector.component.ts:56\n                \n            \n\n\n            \n                \n                    Function that creates structure of information based on provided data in forms\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSector\n                        \n                    \n                \n            \n            \n                \ndeleteSector(sectorIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/sector/sector.component.ts:48\n                \n            \n\n\n            \n                \n                    Function that deletes sector from structure\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectorIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    sectors: this.formBuilder.array([])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/sector/sector.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sectors\n                    \n                \n\n                \n                    \n                        getsectors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/concert-management/sector/sector.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport EtherUnitConverter from 'src/app/utils/EtherUnitConverter';\n\n@Component({\n  selector: 'app-sector',\n  templateUrl: './sector.component.html',\n  styleUrls: ['./sector.component.scss']\n})\nexport class SectorComponent {\n\n  // toggle for specifying button at the bottom of comp\n  @Input() createConcertForm: boolean = false;\n\n  @Output() sectorsEvent = new EventEmitter();\n\n  form = this.formBuilder.group({\n    sectors: this.formBuilder.array([])\n  })\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { }\n\n  get sectors() {\n    return this.form.controls['sectors'] as FormArray\n  }\n\n  /**\n   * Function that adds new forms for sectors\n   */\n  addSector() {\n    const sectorForm = this.formBuilder.group({\n      sectorName: ['', Validators.required],\n      isNumerable:  ['', Validators.required],\n      seatStart:  ['1', Validators.required],\n      seatStop:  ['', Validators.required],\n      mintNow:   ['', Validators.required],\n      price:  ['', Validators.required]\n    })\n\n    this.sectors.push(sectorForm)\n  }\n\n  /**\n   * Function that deletes sector from structure\n   */\n  deleteSector(sectorIndex: number) {\n    this.sectors.removeAt(sectorIndex)\n  }\n\n  \n  /**\n   * Function that creates structure of information based on provided data in forms\n   */\n  confirmSectors() {\n    let sectorsArray: string [] =[];\n    for(let sector of this.sectors.value){\n      sectorsArray.push(sector.sectorName)\n      let isNumerableString = sector.isNumerable ? \"1\" : \"0\"\n      sectorsArray.push(isNumerableString)\n      sectorsArray.push(sector.seatStart.toString())\n      sectorsArray.push(sector.seatStop.toString())\n      if(sector.isNumerable) {\n        let mintNowString = sector.mintNow ? \"1\" : \"0\"\n        sectorsArray.push(mintNowString)\n      } else {\n        sectorsArray.push(\"0\")\n      }\n      sectorsArray.push(EtherUnitConverter.etherToWei(sector.price).toString())\n    }\n    this.sectorsEvent.emit(sectorsArray);\n  }\n\n}\n\n    \n\n    \n        Provide details of each sector:\n\n\n    \n        \n            \n\n                \n                    Sector Name\n                    \n                \n\n                \n                    Numberable Seats\n                \n\n                \n                    \n                        Seats from\n                        \n                    \n                \n                \n                \n                    Seats to\n                    \n                \n\n                \n                    Price (1 ticket)\n                    \n                      ETH\n                \n\n                \n                    \n                        Minted by organizator\n                    \n                \n\n                \n                    delete_forever\n                \n            \n        \n    \n\n    \n        \n            add\n        \n\n        \n            \n                Confirm sectors\n            \n        \n\n        \n            \n                Confirm new sectors\n            \n        \n          \n\n\n    \n\n    \n                \n                    ./sector.component.scss\n                \n                .form {\n  width: 100%;\n}\n\n.form-full-width {\n  padding: 5px;\n}\n\n.form-numbers {\n  width: 15%;\n  padding: 5px;\n}\n\ninput.input-price::-webkit-outer-spin-button,\ninput.input-price::-webkit-inner-spin-button{\n  display: none;\n}\n\n.nav-button {\n  padding: 10px;\n}\n.sectors-btn {\n  margin-top: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Provide details of each sector:                                                            Sector Name                                                                        Numberable Seats                                                                            Seats from                                                                                                                Seats to                                                                        Price (1 ticket)                                          ETH                                                                            Minted by organizator                                                                        delete_forever                                                                add                                            Confirm sectors                                                        Confirm new sectors                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SellerOffer.html":{"url":"interfaces/SellerOffer.html","title":"interface - SellerOffer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SellerOffer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/marketplace.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            concertAddr\n                                        \n                                \n                                \n                                        \n                                            sellerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concertAddr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concertAddr:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sellerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sellerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\nimport { Ticket } from \"./concert.model\";\n\nexport interface Listing {\n  tokenId: number;\n  amount: number;\n  price: BigNumber;\n  seller: string;\n}\n\nexport interface ListedTicket {\n  listing: Listing,\n  ticket: Ticket,\n}\n\nexport interface SellerOffer {\n  concertAddr: string;\n  sellerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/snackbar.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:19\n                \n            \n\n\n            \n                \n                    Function displays error snackbar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        error snackbar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:39\n                \n            \n\n\n            \n                \n                    Function displays info snackbar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        info snackbar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:29\n                \n            \n\n\n            \n                \n                    Function displays success snackbar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        success snackbar\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(\n    private snackBar: MatSnackBar,\n  ) { }\n\n  /**\n   * Function displays error snackbar\n   * \n   * @returns error snackbar\n   * \n   */\n  error(message: string) {\n    return this.snackBar.open(message, \"Close\", {panelClass: ['snackbar-error']});\n  }\n\n  /**\n   * Function displays success snackbar\n   * \n   * @returns success snackbar\n   * \n   */\n  success(message: string) {\n    return this.snackBar.open(message, \"Close\", {panelClass: ['snackbar-success']});\n  }\n\n  /**\n   * Function displays info snackbar\n   * \n   * @returns info snackbar\n   * \n   */\n  info(message: string) {\n    return this.snackBar.open(message, \"Close\", {panelClass: ['snackbar-info']});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StandardTicketComponent.html":{"url":"components/StandardTicketComponent.html","title":"component - StandardTicketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StandardTicketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/marketplace/standard-ticket/standard-ticket.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-standard-ticket\n            \n\n            \n                styleUrls\n                ./standard-ticket.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./standard-ticket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                ticketsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyTicket\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                validateAvailability\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                concertAddress\n                            \n                            \n                                sector\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ticked1155Service: Ticked1155Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticked1155Service\n                                                  \n                                                        \n                                                                        Ticked1155Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        concertAddress\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sector\n                    \n                \n                \n                    \n                        Type :         Sector\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyTicket\n                        \n                    \n                \n            \n            \n                \nbuyTicket(tokenId: number, price: BigNumber, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:72\n                \n            \n\n\n            \n                \n                    Function that fires transaction for buying ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nToken ID\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nToken price\n\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \nAmount of tokens to buy (by default sets to 1)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAvailability\n                        \n                    \n                \n            \n            \n                \nvalidateAvailability(allTickets: BigNumber[], soldTickets: BigNumber[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that calculate tokens availabilty\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allTickets\n                                    \n                                            BigNumber[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of all possible tokens\n\n\n                                    \n                                \n                                \n                                    soldTickets\n                                    \n                                            BigNumber[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of already sold tickets\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        List of currently available tokens\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map\n                    \n                \n                    \n                        \n                                Defined in src/app/components/marketplace/standard-ticket/standard-ticket.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { BigNumber } from 'ethers';\nimport { Ticked1155Service } from 'src/app/services/smartcontracts/ticked1155.service';\nimport { Sector, Ticket } from 'src/types/concert.model';\n\n@Component({\n  selector: 'app-standard-ticket',\n  templateUrl: './standard-ticket.component.html',\n  styleUrls: ['./standard-ticket.component.scss']\n})\nexport class StandardTicketComponent implements OnChanges {\n\n  @Input() concertAddress!: string;\n  @Input() sector!: Sector;\n  // map - ticketId -> tickerAttr\n  ticketsMap: Map = new Map;\n  amount = 1;\n\n  constructor(\n    private ticked1155Service: Ticked1155Service,\n  ) { }\n  \n  async ngOnChanges(changes: SimpleChanges) {\n    if(changes['sector'].currentValue == undefined || \n              this.concertAddress == undefined ){\n      return\n    }\n\n    this.ticketsMap.clear();\n    const availableTickets: number[] = this.validateAvailability(\n      changes['sector'].currentValue.availableTokenIds, \n      await this.ticked1155Service.getSectorSoldIds(\n        this.concertAddress, changes['sector'].currentValue.name)\n      );\n\n    for(let tokenId of availableTickets) {\n      // DEPRECATED APPROACH: because reading from chain is free I think it's better to make more calls than iterate \n      // in smartcontract through sectors and available id's and deleting them when they are sold (we have to pay for code execution)\n      // NEW APPROACH: store sold tickets ids in smartcontract map then use validateAvailability\n      const ticket = await this.ticked1155Service.getTicketAttr(this.concertAddress, tokenId);\n      this.ticketsMap.set(tokenId, ticket)\n    }\n  }\n\n  /**\n   * Function that calculate tokens availabilty \n   *\n   * @param allTickets - List of all possible tokens \n   * @param soldTickets - List of already sold tickets\n   * @returns List of currently available tokens\n   * \n   */\n  validateAvailability(allTickets: BigNumber[], soldTickets: BigNumber[]): number[] {\n      let resultArray: number[] = [];\n      for(let ticketId of allTickets){\n        // if soldTickets does not contain ticketId -> push\n        if( !soldTickets.some(id => id.toNumber() == ticketId.toNumber())) {\n          resultArray.push(ticketId.toNumber());\n        }\n      }\n      return resultArray;\n  }\n\n  /**\n   * Function that fires transaction for buying ticket \n   *\n   * @param tokenId - Token ID \n   * @param price - Token price\n   * @param amount - Amount of tokens to buy (by default sets to 1)\n   * \n   */\n  buyTicket(tokenId: number, price: BigNumber, amount = 1) {\n    this.ticked1155Service.buyTicket(\n      this.concertAddress, tokenId, price, amount)\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n            \n                \n                    \n                        Sector: {{ ticket.value.sectorName }}\n                    \n                \n                \n                    \n                        Sector without numerable seats\n                    \n                    \n                        Price: {{ ticket.value.price | weiToEth }} ETH\n                    \n                    \n                        Minted by organizator: \n                         \n                            highlight_off\n                        \n                        \n                            check_circle_outline \n                        \n                    \n\n                    \n                        \n                            Number of tickets\n                            \n                            \n                        \n                    \n                        \n                            BUY\n                        \n                    \n                    \n                \n\n            \n         \n        \n                \n            \n                \n                    \n                        Seat: {{ ticket.value.seatNumber }} \n                    \n                    \n                        Sector: {{ ticket.value.sectorName }}\n                    \n                \n                \n                    \n                        Price: {{ ticket.value.price | weiToEth }} ETH\n                    \n                    \n                        Minted by organizator: \n                         \n                            highlight_off\n                        \n                        \n                            check_circle_outline \n                        \n                    \n\n                    \n                        \n                            BUY\n                        \n                    \n                \n            \n        \n\n    \n \n    \n\n    \n                \n                    ./standard-ticket.component.scss\n                \n                .tickets {\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n}\n\n.ticket {\n  margin: 10px;\n}\n\n.ticket:hover {\n    transform: scale(1.02);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Sector: {{ ticket.value.sectorName }}                                                                                                Sector without numerable seats                                                                Price: {{ ticket.value.price | weiToEth }} ETH                                                                Minted by organizator:                                                      highlight_off                                                                            check_circle_outline                                                                                                                     Number of tickets                                                                                                                                                        BUY                                                                                                                                                                                                     Seat: {{ ticket.value.seatNumber }}                                                                 Sector: {{ ticket.value.sectorName }}                                                                                                Price: {{ ticket.value.price | weiToEth }} ETH                                                                Minted by organizator:                                                      highlight_off                                                                            check_circle_outline                                                                                                                     BUY                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StandardTicketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Ticked1155Service.html":{"url":"injectables/Ticked1155Service.html","title":"injectable - Ticked1155Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Ticked1155Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smartcontracts/ticked1155.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addSectors\n                            \n                            \n                                    Public\n                                    Async\n                                buyTicket\n                            \n                            \n                                    Public\n                                    Async\n                                createAndMintTickets\n                            \n                            \n                                    Private\n                                    Static\n                                    Async\n                                getContract\n                            \n                            \n                                    Public\n                                    Async\n                                getDate\n                            \n                            \n                                    Public\n                                    Async\n                                getDescription\n                            \n                            \n                                    Public\n                                    Async\n                                getImage\n                            \n                            \n                                    Public\n                                    Async\n                                getName\n                            \n                            \n                                    Public\n                                    Async\n                                getSectors\n                            \n                            \n                                    Public\n                                    Async\n                                getSectorSoldIds\n                            \n                            \n                                    Public\n                                    Async\n                                getTicketAttr\n                            \n                            \n                                    Public\n                                    Async\n                                isApprovedForAll\n                            \n                            \n                                    Public\n                                    Async\n                                setApprovalForAll\n                            \n                            \n                                    Public\n                                    Async\n                                setDate\n                            \n                            \n                                    Public\n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smartcontracts/ticked1155.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addSectors\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSectors(address: string, sectors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:41\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to add sectors structure\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStructure of sectors\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        buyTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyTicket(address: string, tokenId: number, price: BigNumber, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:55\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to buy ticket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nID of token to buy\n\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \namount of tokens to buy (by default = 1)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createAndMintTickets\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAndMintTickets(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:25\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to create and mint tokens\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Status of transaction\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        getContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(address: string, bySigner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bySigner\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDate(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDescription(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getName(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSectors\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSectors(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getSectorSoldIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSectorSoldIds(address: string, sector: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getTicketAttr\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTicketAttr(address: string, tokenId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isApprovedForAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    isApprovedForAll(address: string, account: string, operator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:87\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to check approval of tokens\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of concert contract\n\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nOwner of tokens\n\n\n                                    \n                                \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress to check\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        State of approval\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setApprovalForAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    setApprovalForAll(address: string, operator: string, approved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    approved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDate(address: string, newDate: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newDate\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdraw(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked1155.service.ts:69\n                \n            \n\n\n            \n                \n                    Withdraws money for currently logged wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BigNumber, ethers } from \"ethers\";\nimport { Sector, Ticket } from 'src/types/concert.model';\nimport ticked1155 from '../../../../artifacts/contracts/tickeD1155.sol/tickeD1155.json'\nimport { WalletService } from '../wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ticked1155Service {\n\n  constructor(\n    private walletService: WalletService,\n  ) { }\n\n\n  /**\n   * Function interacts with smartcontract and fires transaction to create and mint tokens\n   *\n   * @param address - Address of concert contract \n   * @returns Status of transaction\n   * \n   */\n  public async createAndMintTickets(address: string) {\n    const contract = await Ticked1155Service.getContract(address, true)\n\n    const transaction = await contract['createAndMintTickets']()\n    const tx = await transaction.wait()\n\n    return tx.status === 1 \n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to add sectors structure\n   *\n   * @param address - Address of concert contract \n   * @param sectors - Structure of sectors \n   * \n   */  \n  public async addSectors(address: string, sectors: string[]) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    await contract['addSectors'](sectors)\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to buy ticket\n   *\n   * @param address - Address of concert contract \n   * @param tokenId - ID of token to buy \n   * @param price - ID of token to buy \n   * @param amount - amount of tokens to buy (by default = 1)\n   * \n   */\n  public async buyTicket(address: string, tokenId: number, price: BigNumber, amount = 1) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    const transaction = await contract['buyTicket'](tokenId, amount, {\n      value: ethers.utils.parseUnits((price.mul(amount)).toString(), \"wei\")\n    })\n    const tx = await transaction.wait();\n\n    return tx.status === 1\n  }\n\n  /**\n   * Withdraws money for currently logged wallet\n   * \n   */\n  public async withdraw(address: string){\n    const contract = await Ticked1155Service.getContract(address, true)\n    try {\n      return await contract['withdrawOrgCredits'](this.walletService.getWalletAddress())\n    } catch(e: any) {\n      console.log(e.error.message )\n    }\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to check approval of tokens\n   *\n   * @param address - Address of concert contract \n   * @param account - Owner of tokens\n   * @param operator - Address to check \n   * @returns State of approval\n   * \n   */\n  public async isApprovedForAll(address: string, account: string, operator: string): Promise{\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['isApprovedForAll'](account, operator)\n  }\n\n  public async getImage(address: string): Promise{\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['image']()\n  }\n\n  public async getName(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['name']()\n  }\n\n  public async getDescription(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['description']()\n  }\n\n  public async getDate(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['date']()\n  }\n\n  public async getSectors(address: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['getSectors']()\n  }\n\n  public async getSectorSoldIds(address: string, sector: string): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['getSoldTokenIds'](sector)\n  }\n\n  public async getTicketAttr(address: string, tokenId: number): Promise {\n    const contract = await Ticked1155Service.getContract(address)\n    return contract['ticketAttr'](tokenId)\n  }\n\n  public async setDate(address: string, newDate: number) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    await contract['setDate'](newDate)\n  }\n\n  public async setApprovalForAll(address: string, operator: string, approved: boolean) {\n    const contract = await Ticked1155Service.getContract(address, true)\n    contract['setApprovalForAll'](operator, approved)\n  }  \n\n  private static async getContract(address: string, bySigner= false) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    return new ethers.Contract(\n      address,\n      ticked1155.abi,\n      bySigner ? signer : provider\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TickedFactoryService.html":{"url":"injectables/TickedFactoryService.html","title":"injectable - TickedFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TickedFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smartcontracts/ticked-factory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authorizeAccess\n                            \n                            \n                                    Public\n                                    Async\n                                createConcertContract\n                            \n                            \n                                    Private\n                                    Static\n                                    Async\n                                getContract\n                            \n                            \n                                    Public\n                                    Async\n                                getDepContracts\n                            \n                            \n                                    Public\n                                    Async\n                                getOrganizers\n                            \n                            \n                                    Public\n                                    Async\n                                setOrganizatorPermission\n                            \n                            \n                                    Public\n                                    Async\n                                validateOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smartcontracts/ticked-factory.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        authorizeAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorizeAccess(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:21\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to authorize offer for address\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of wallet (granted organizer)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createConcertContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConcertContract(name: string, desc: string, date: Number, image: string, sectors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:36\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to create new concert contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nName of concert\n\n\n                                    \n                                \n                                \n                                    desc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDescription of concert\n\n\n                                    \n                                \n                                \n                                    date\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDate of concert\n\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nImage of audience layout\n\n\n                                    \n                                \n                                \n                                    sectors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStructure of sectors\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Status of transaction\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        getContract\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(bySigner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    bySigner\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getDepContracts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDepContracts(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getOrganizers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrganizers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setOrganizatorPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOrganizatorPermission(address: string, toggle: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:65\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to set organizator permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of wallet (organizer)\n\n\n                                    \n                                \n                                \n                                    toggle\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nToggle for specifying permissions (true/false)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateOwner(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smartcontracts/ticked-factory.service.ts:53\n                \n            \n\n\n            \n                \n                    Function interacts with smartcontract and fires transaction to validate owner of factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAddress of wallet\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ethers } from \"ethers\";\nimport { environment } from 'src/environments/environment';\nimport { DepConcert } from 'src/types/concert.model';\n\nimport tickeDFactory from '../../../../artifacts/contracts/tickeDFactory.sol/tickeDFactory.json'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TickedFactoryService {\n\n  constructor() { }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to authorize offer for address\n   *\n   * @param address - Address of wallet (granted organizer) \n   * \n   */\n  public async authorizeAccess(address: string): Promise {\n    const contract = await TickedFactoryService.getContract();\n    return contract['whitelist'](address);  \n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to create new concert contract\n   *\n   * @param name - Name of concert\n   * @param desc - Description of concert \n   * @param date - Date of concert\n   * @param image - Image of audience layout\n   * @param sectors - Structure of sectors \n   * @returns Status of transaction\n   */\n  public async createConcertContract(\n    name: string, desc: string, date: Number, image: string, sectors: string[] ){\n    \n    const contract = await TickedFactoryService.getContract(true)\n    const transaction = await contract['createTickets'](\n      name, desc, date, image, sectors)\n    const tx = await transaction.wait()\n\n    return tx.status === 1\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to validate owner of factory\n   *\n   * @param address - Address of wallet \n   * \n   */\n  public async validateOwner(address: string): Promise {\n    const contract = await TickedFactoryService.getContract()\n    return address === await contract['owner']()\n  }\n\n  /**\n   * Function interacts with smartcontract and fires transaction to set organizator permissions\n   *\n   * @param address - Address of wallet (organizer) \n   * @param toggle - Toggle for specifying permissions (true/false)\n   * \n   */\n  public async setOrganizatorPermission(address: string, toggle: boolean) {\n    const contract = await TickedFactoryService.getContract(true)\n    contract['setOrganizatorPermission'](address, toggle)\n  }\n\n  public async getOrganizers() {\n    const contract = await TickedFactoryService.getContract()\n    return contract['getOrganizers']()\n  }\n\n  public async getDepContracts(address: string): Promise {\n    const contract = await TickedFactoryService.getContract()\n    return contract['getDepContracts'](address)\n  }\n\n  private static async getContract(bySigner= false) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    return new ethers.Contract(\n      environment.contractTickeDFactoryAddress,\n      tickeDFactory.abi,\n      bySigner ? signer : provider\n    )\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ticket.html":{"url":"interfaces/Ticket.html","title":"interface - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/concert.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minted\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seatNumber\n                                        \n                                \n                                \n                                        \n                                            sectorName\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:     BigNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BigNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seatNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seatNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BigNumber } from \"ethers\";\n\nexport interface DepConcert {\n    contractAddress: string,\n    name: string\n}\n\nexport interface Sector {\n    name:string;\n    isNumerable: boolean; \n    seatStart: number;\n    seatStop: number;\n    mintedByOrg: boolean;\n    price: BigNumber;\n    availableTokenIds: BigNumber[];\n}\n\nexport interface Ticket {\n    sectorName: string;\n    seatNumber: number;\n    minted: boolean;\n    price: BigNumber;\n    sold: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenMetadata.html":{"url":"interfaces/TokenMetadata.html","title":"interface - TokenMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tokenType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokenType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenUri.html":{"url":"interfaces/TokenUri.html","title":"interface - TokenUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/nft.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gateway\n                                        \n                                \n                                \n                                        \n                                            raw\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gateway\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gateway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contract {\n    address: string\n}\nexport interface Id {\n    tokenId: number\n    tokenMetadata: TokenMetadata\n}\nexport interface TokenMetadata {\n    tokenType: string\n}\nexport interface TokenUri {\n    raw: string\n    gateway: string\n}\nexport interface Metadata {\n    name: string\n    description: string\n    attributes: Attribute[]\n}\nexport interface Attribute {\n    display_type: string\n    trait_type: string\n    value: number\n}\n\n\nexport interface NFT {\n    contract: Contract\n    id: Id\n    balance: number\n    tokenUri: TokenUri\n    metadata: Metadata\n}\n\nexport interface OwnedNFTs {\n    ownedNfts: NFT[]\n    totalCount: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nCreateOfferDialogComponent\n\nCreateOfferDialogComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCreateOfferDialogComponent->UserModule\n\n\n\n\n\nMyNftComponent\n\nMyNftComponent\n\nUserModule -->\n\nMyNftComponent->UserModule\n\n\n\n\n\nMyOffersComponent\n\nMyOffersComponent\n\nUserModule -->\n\nMyOffersComponent->UserModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nUserModule -->\n\nAppRoutingModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateOfferDialogComponent\n                        \n                        \n                            MyNftComponent\n                        \n                        \n                            MyOffersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MyNftComponent } from './my-nft/my-nft.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule } from '@angular/router';\nimport { CreateOfferDialogComponent } from './create-offer-dialog/create-offer-dialog.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MyOffersComponent } from './my-offers/my-offers.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n\n@NgModule({\n  declarations: [\n    MyNftComponent,\n    CreateOfferDialogComponent,\n    MyOffersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    FormsModule,\n    PipesModule\n  ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                accounts\n                            \n                            \n                                    Protected\n                                    Optional\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getWalletAddress\n                            \n                            \n                                    Async\n                                logIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWalletAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWalletAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    logIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.service.ts:18\n                \n            \n\n\n            \n                \n                    Function uses metamask wallet to connect wallet\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        True if user corrently logged in\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Wallet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ethers, Wallet } from 'ethers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService {\n\n  protected accounts: any;\n  protected wallet?: Wallet;\n\n  /**\n   * Function uses metamask wallet to connect wallet\n   * \n   * @returns True if user corrently logged in\n   * \n   */\n  async logIn(): Promise {\n    if(window.ethereum) {\n      this.accounts = await window?.ethereum.request({ method: 'eth_requestAccounts' })  \n      this.wallet = this.accounts[0]\n      return true\n    }\n    return false\n  }\n\n  async getWalletAddress(): Promise {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    let accounts = await provider.send(\"eth_requestAccounts\", []);\n    let account = accounts[0];\n\n    const signer = provider.getSigner();\n    return await signer.getAddress();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WeiToEthPipe.html":{"url":"pipes/WeiToEthPipe.html","title":"pipe - WeiToEthPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  WeiToEthPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/wei-to-eth.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        weiToEth\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(price: BigNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/wei-to-eth.pipe.ts:16\n                \n            \n\n\n            \n                \n                    Function converts price in BigNumber to string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    price\n                                    \n                                            BigNumber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPrice in BigNumber\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Price in string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { BigNumber, ethers } from 'ethers';\n\n@Pipe({\n  name: 'weiToEth'\n})\nexport class WeiToEthPipe implements PipeTransform {\n\n  /**\n   * Function converts price in BigNumber to string\n   * \n   * @param price - Price in BigNumber\n   * @returns Price in string\n   *\n   */\n  transform(price: BigNumber): string {\n    return ethers.utils.formatEther(price)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WhitelistComponent.html":{"url":"components/WhitelistComponent.html","title":"component - WhitelistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WhitelistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/concert-management/whitelist/whitelist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-whitelist\n            \n\n            \n                styleUrls\n                ./whitelist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./whitelist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                address\n                            \n                            \n                                    Protected\n                                checkAddress\n                            \n                            \n                                    Protected\n                                permission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePermissions\n                            \n                            \n                                    Async\n                                checkPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tickedFactoryService: TickedFactoryService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tickedFactoryService\n                                                  \n                                                        \n                                                                        TickedFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePermissions\n                        \n                    \n                \n            \n            \n                \nchangePermissions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:25\n                \n            \n\n\n            \n                \n                    Function that changes permission based on form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPermissions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:37\n                \n            \n\n\n            \n                \n                    Function that checks permission based on form\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        checkAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/concert-management/whitelist/whitelist.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { TickedFactoryService } from 'src/app/services/smartcontracts/ticked-factory.service';\n\n@Component({\n  selector: 'app-whitelist',\n  templateUrl: './whitelist.component.html',\n  styleUrls: ['./whitelist.component.scss']\n})\nexport class WhitelistComponent {\n\n  protected address!: string;\n  protected permission!: string;\n  protected checkAddress!: string;\n\n  constructor(\n    private tickedFactoryService: TickedFactoryService,\n    private snackbarService: SnackbarService,\n  ) { }\n\n  \n  /**\n   * Function that changes permission based on form \n   */\n  changePermissions() {\n    if(this.permission === undefined || this.address === undefined){\n      this.snackbarService.error(\"Specify arguments!\")\n      return\n    }\n    let toggle = this.permission === \"grant\" ? true : false; \n    this.tickedFactoryService.setOrganizatorPermission(this.address, toggle);\n  }\n\n  /**\n   * Function that checks permission based on form \n   */\n  async checkPermissions() {\n    if(this.checkAddress === undefined) {\n      this.snackbarService.error(\"Specify arguments!\")\n      return\n    }\n\n    let toggle = await this.tickedFactoryService.authorizeAccess(this.checkAddress)\n    let info = toggle ? \"have\" : \"don't have\"\n    this.snackbarService.info(\"This wallet \" + info + \" access\")\n  }\n\n}\n\n    \n\n    \n        \n    \n        Change user permissions\n    \n    \n        Choose permissions\n        \n            Grant permissions\n            Refuse permissions\n        \n    \n    \n        Input wallet address\n        \n    \n\n    \n        Change permissions\n    \n\n    \n        Check user permissions\n    \n    \n        Input wallet address\n        \n    \n    \n        Check permissions\n    \n\n\n\n\n    \n\n    \n                \n                    ./whitelist.component.scss\n                \n                .toggle {\n    padding: 10px;\n}\n\n.address-field {\n    width: 500px;\n    padding: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Change user permissions                Choose permissions                    Grant permissions            Refuse permissions                        Input wallet address                        Change permissions                Check user permissions                Input wallet address                        Check permissions    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AudienceLayoutComponent', 'selector': 'app-audience-layout'},{'name': 'ConcertSectorsComponent', 'selector': 'app-concert-sectors'},{'name': 'ConcertSellComponent', 'selector': 'app-concert-sell'},{'name': 'CreateConcertComponent', 'selector': 'app-create-concert'},{'name': 'CreateOfferDialogComponent', 'selector': 'app-create-offer-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'MarketplaceComponent', 'selector': 'app-marketplace'},{'name': 'MyConcertsComponent', 'selector': 'app-my-concerts'},{'name': 'MyNftComponent', 'selector': 'app-my-nft'},{'name': 'MyOffersComponent', 'selector': 'app-my-offers'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ReselledTicketComponent', 'selector': 'app-reselled-ticket'},{'name': 'SectorComponent', 'selector': 'app-sector'},{'name': 'StandardTicketComponent', 'selector': 'app-standard-ticket'},{'name': 'WhitelistComponent', 'selector': 'app-whitelist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WhitelistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/create-concert/create-concert.component.ts\n            \n            component\n            CreateConcertComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/my-concerts/my-concerts.component.ts\n            \n            component\n            MyConcertsComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/sector/sector.component.ts\n            \n            component\n            SectorComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/components/concert-management/whitelist/whitelist.component.ts\n            \n            component\n            WhitelistComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/audience-layout/audience-layout.component.ts\n            \n            component\n            AudienceLayoutComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/concert-sectors/concert-sectors.component.ts\n            \n            component\n            ConcertSectorsComponent\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/concert-sell/concert-sell.component.ts\n            \n            component\n            ConcertSellComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/marketplace-comp/marketplace.component.ts\n            \n            component\n            MarketplaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/reselled-ticket/reselled-ticket.component.ts\n            \n            component\n            ReselledTicketComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/marketplace/standard-ticket/standard-ticket.component.ts\n            \n            component\n            StandardTicketComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/components/navigation-bar/navigation-bar.component.ts\n            \n            component\n            NavigationBarComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/user/create-offer-dialog/create-offer-dialog.component.ts\n            \n            component\n            CreateOfferDialogComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/components/user/my-nft/my-nft.component.ts\n            \n            component\n            MyNftComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/user/my-offers/my-offers.component.ts\n            \n            component\n            MyOffersComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/pipes/filter-concerts.pipe.ts\n            \n            pipe\n            FilterConcertsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/wei-to-eth.pipe.ts\n            \n            pipe\n            WeiToEthPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/alchemy-api.service.ts\n            \n            injectable\n            AlchemyApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth-organizator.guard.ts\n            \n            guard\n            AuthOrganizatorGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/smartcontracts/nft-marketplace.service.ts\n            \n            injectable\n            NftMarketplaceService\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/services/smartcontracts/ticked-factory.service.ts\n            \n            injectable\n            TickedFactoryService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/services/smartcontracts/ticked1155.service.ts\n            \n            injectable\n            Ticked1155Service\n            \n                29 %\n                (5/17)\n            \n        \n        \n            \n                \n                src/app/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/wallet.service.ts\n            \n            injectable\n            WalletService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/utils/EtherUnitConverter.ts\n            \n            class\n            EtherUnitConverter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/concert.model.ts\n            \n            interface\n            DepConcert\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/concert.model.ts\n            \n            interface\n            Sector\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/types/concert.model.ts\n            \n            interface\n            Ticket\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/dialogs.model.ts\n            \n            interface\n            AudienceDialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/dialogs.model.ts\n            \n            interface\n            CreateOfferDialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/marketplace.model.ts\n            \n            interface\n            ListedTicket\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/marketplace.model.ts\n            \n            interface\n            Listing\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/marketplace.model.ts\n            \n            interface\n            SellerOffer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Attribute\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Id\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            Metadata\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            NFT\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            OwnedNFTs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            TokenMetadata\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/nft.model.ts\n            \n            interface\n            TokenUri\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/cdk : ^14.2.4\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/material : ^14.2.4\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @metamask/providers : ^10.0.0\n        \n            @openzeppelin/contracts : ^4.7.3\n        \n            dotenv : ^16.0.3\n        \n            hardhat-ethers : ^1.0.1\n        \n            hardhat-waffle : ^0.0.1-security\n        \n            mocha : ^10.1.0\n        \n            rxjs : ~7.5.0\n        \n            schematics-scss-migrate : ^1.3.15\n        \n            swiper : ^8.4.4\n        \n            ts-node : ^10.9.1\n        \n            tslib : ^2.3.0\n        \n            typedoc : ^0.23.24\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTickeDapp\nThis project was generated with Angular CLI version 14.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConcertManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarketplaceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConcertManagementModule\n\n\n\ncluster_ConcertManagementModule_declarations\n\n\n\ncluster_MarketplaceModule\n\n\n\ncluster_MarketplaceModule_declarations\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nNavigationBarComponent\n\nNavigationBarComponent\n\nAppModule -->\n\nNavigationBarComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMarketplaceModule\n\nMarketplaceModule\n\nMarketplaceModule -->\n\nAppRoutingModule->MarketplaceModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppRoutingModule->UserModule\n\n\n\n\n\nConcertManagementModule\n\nConcertManagementModule\n\nAppModule -->\n\nConcertManagementModule->AppModule\n\n\n\nAppModule -->\n\nMarketplaceModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nAppModule -->\n\nWalletService->AppModule\n\n\n\n\n\nCreateConcertComponent\n\nCreateConcertComponent\n\nConcertManagementModule -->\n\nCreateConcertComponent->ConcertManagementModule\n\n\n\n\n\nMyConcertsComponent\n\nMyConcertsComponent\n\nConcertManagementModule -->\n\nMyConcertsComponent->ConcertManagementModule\n\n\n\n\n\nSectorComponent\n\nSectorComponent\n\nConcertManagementModule -->\n\nSectorComponent->ConcertManagementModule\n\n\n\n\n\nWhitelistComponent\n\nWhitelistComponent\n\nConcertManagementModule -->\n\nWhitelistComponent->ConcertManagementModule\n\n\n\n\n\nAudienceLayoutComponent\n\nAudienceLayoutComponent\n\nMarketplaceModule -->\n\nAudienceLayoutComponent->MarketplaceModule\n\n\n\n\n\nConcertSectorsComponent\n\nConcertSectorsComponent\n\nMarketplaceModule -->\n\nConcertSectorsComponent->MarketplaceModule\n\n\n\n\n\nConcertSellComponent\n\nConcertSellComponent\n\nMarketplaceModule -->\n\nConcertSellComponent->MarketplaceModule\n\n\n\n\n\nMarketplaceComponent\n\nMarketplaceComponent\n\nMarketplaceModule -->\n\nMarketplaceComponent->MarketplaceModule\n\n\n\n\n\nReselledTicketComponent\n\nReselledTicketComponent\n\nMarketplaceModule -->\n\nReselledTicketComponent->MarketplaceModule\n\n\n\n\n\nStandardTicketComponent\n\nStandardTicketComponent\n\nMarketplaceModule -->\n\nStandardTicketComponent->MarketplaceModule\n\n\n\n\n\nFilterConcertsPipe\n\nFilterConcertsPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nFilterConcertsPipe->PipesModule\n\n\n\n\n\nWeiToEthPipe\n\nWeiToEthPipe\n\nPipesModule -->\n\nWeiToEthPipe->PipesModule\n\n\n\n\n\nFilterConcertsPipe \n\nFilterConcertsPipe \n\nFilterConcertsPipe  -->\n\nPipesModule->FilterConcertsPipe \n\n\n\n\n\nWeiToEthPipe \n\nWeiToEthPipe \n\nWeiToEthPipe  -->\n\nPipesModule->WeiToEthPipe \n\n\n\n\n\nCreateOfferDialogComponent\n\nCreateOfferDialogComponent\n\nUserModule -->\n\nCreateOfferDialogComponent->UserModule\n\n\n\n\n\nMyNftComponent\n\nMyNftComponent\n\nUserModule -->\n\nMyNftComponent->UserModule\n\n\n\n\n\nMyOffersComponent\n\nMyOffersComponent\n\nUserModule -->\n\nMyOffersComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  contractTickeDFactoryAddress: \"0x9E12441b535419cC59B8F122Bc26EBeC1b06E719\",\n  contractNftMarketplaceAddress: \"0x2DF7a6C36e8eDeaAF59d09cb4230B660E0283E88\",\n  alchemyApi: \"https://eth-goerli.g.alchemy.com/v2/9XMQ5x8fQjeWNnufjSXkhh5TMLnCnStG\",\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
